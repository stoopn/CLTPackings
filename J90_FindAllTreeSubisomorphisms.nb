(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    701032,      14428]
NotebookOptionsPosition[    683684,      14033]
NotebookOutlinePosition[    684039,      14049]
CellTagsIndexPosition[    683996,      14046]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",ExpressionUUID->\
"453041ff-baa7-493d-a60b-d1926dd99d1e"],

Cell[BoxData["\<\"/Users/norbert/Dropbox \
(MIT)/StasPacking/Data/Johnson\"\>"], "Output",
 CellChangeTimes->{3.7029505849878674`*^9, 3.704198276267147*^9, 
  3.704296636908601*^9, 3.7043350833633327`*^9, 3.705363513704749*^9, 
  3.7054077617361593`*^9, 
  3.710852525904748*^9},ExpressionUUID->"60df26d1-0559-4f68-86c6-\
0d37cc902b03"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "FigDir", "=", 
   "\"\</Users/norbert/Dropbox (MIT)/StasPacking/figure_data/\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.704298748628272*^9, 
  3.704298774363783*^9}},ExpressionUUID->"5eae0114-240e-44c7-baa4-\
090ab2db50e5"],

Cell[CellGroupData[{

Cell["Construct all possible subisomorphisms", "Section",
 CellChangeTimes->{{3.7041984615167*^9, 3.704198470251252*^9}}],

Cell["Some color definitions:", "Text",
 CellChangeTimes->{{3.704204653206325*^9, 3.70420466978938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cd", "=", 
  RowBox[{"ColorData", "[", 
   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70420580319351*^9, 3.704205884311109*^9}, {
   3.704206206859514*^9, 3.704206216434937*^9}, {3.704206337033183*^9, 
   3.704206351816758*^9}, {3.70420677438512*^9, 3.704206774644969*^9}, 
   3.704207093842926*^9},ExpressionUUID->"17f98e8e-2de2-40e0-82a8-\
abe614fc0f16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6640522875816994, 0.24052287581699347`, 0.018300653594771243`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.996078431372549, 0.9882352941176471, 0.03529411764705882],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6640522875816994, 0.6588235294117648, 0.023529411764705882`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.996078431372549, 0.9882352941176471, 0.03529411764705882]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.996078431372549, 0.9882352941176471, 0.03529411764705882]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.996078431372549, 0.9882352941176471, 0.03529411764705882],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.1450980392156863, 0.43529411764705883, 0.3843137254901961]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.15294117647058825`, 0.11372549019607843`, 0.49019607843137253`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.1019607843137255, 0.0758169934640523, 0.32679738562091504`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.15294117647058825, 0.11372549019607843, \
0.49019607843137253]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.15294117647058825`, 0.11372549019607843`, 0.49019607843137253`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.15294117647058825`, 0.11372549019607843`, 0.49019607843137253`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.47058823529411764, 0.2627450980392157, 0.5843137254901961]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9058823529411765, 0.027450980392156862`, 0.12941176470588237`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.603921568627451, 0.018300653594771243`, 0.08627450980392158],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9058823529411765, 0.027450980392156862, \
0.12941176470588237]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9058823529411765, 0.027450980392156862`, 0.12941176470588237`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9058823529411765, 0.027450980392156862`, 0.12941176470588237`],
    
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.7042058096419353`*^9, 3.7042058849941883`*^9}, {
   3.704206207614854*^9, 3.704206216878256*^9}, {3.704206337641039*^9, 
   3.704206352482957*^9}, 3.704206774968505*^9, 3.704207096176784*^9, 
   3.7042966507912893`*^9, 3.704335088351013*^9, 3.705363517921809*^9, 
   3.705407765645056*^9, 
   3.710852536999229*^9},ExpressionUUID->"64c7d7cb-8c86-44fe-ad85-\
029ea87a96fd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myYellow", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
    "0.996078431372549", ",", " ", "0.8200000000000001", ",", " ", 
     "0.03529411764705882"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colors", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cd", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "myYellow", ",", 
      RowBox[{"cd", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", " ", "Green", ",", " ", "Blue", 
      ",", " ", "Purple"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", "LightGray"}], "}"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ngons", "=", 
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"First", ",", 
        RowBox[{"PolyhedronData", "[", 
         RowBox[{"\"\<Johnson\>\"", ",", "\"\<FaceCountRules\>\""}], "]"}], 
        ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Vertex", " ", "colors"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyLabelColors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"White", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MyLabelColors", "[", 
    RowBox[{"[", "16", "]"}], "]"}], "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.58", ",", "0.35", ",", "0."}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699963130873872*^9, 3.699963131337287*^9}, {
   3.704203552067624*^9, 3.704203556491255*^9}, 3.704205233096973*^9, {
   3.704205282622109*^9, 3.7042053072222767`*^9}, {3.7042054021371317`*^9, 
   3.704205413295032*^9}, {3.704205625334446*^9, 3.704205631051867*^9}, {
   3.7042059241973658`*^9, 3.70420592980295*^9}, {3.704205977009861*^9, 
   3.7042059798164663`*^9}, {3.704206013574353*^9, 3.704206041652124*^9}, {
   3.704206243666164*^9, 3.7042062506169243`*^9}, {3.704206370480317*^9, 
   3.704206388676022*^9}, {3.704206568606923*^9, 3.704206569788587*^9}, {
   3.704206643713525*^9, 3.704206686201331*^9}, {3.704206805389655*^9, 
   3.7042068059103403`*^9}, 3.70420686868163*^9, {3.704206898859129*^9, 
   3.704206908267139*^9}, {3.704206942803993*^9, 3.704207021941163*^9}, {
   3.704207052178989*^9, 3.7042070532248507`*^9}, {3.704207105260707*^9, 
   3.704207212981523*^9}, {3.704207248633004*^9, 3.704207314168386*^9}, {
   3.7042073698804398`*^9, 3.7042073699788446`*^9}, {3.7042074030521317`*^9, 
   3.704207406497836*^9}, {3.704207441363599*^9, 3.704207443825345*^9}, {
   3.704207775569018*^9, 3.704207782974367*^9}, {3.704207818966165*^9, 
   3.704207820019128*^9}, {3.704294801662081*^9, 3.704294812715879*^9}, {
   3.70429865338796*^9, 3.704298658245118*^9}, {3.704318530614079*^9, 
   3.7043185659926863`*^9}, 3.704318819906451*^9, {3.704318965231472*^9, 
   3.7043189689823723`*^9}, {3.7053635831232224`*^9, 
   3.705363584537344*^9}},ExpressionUUID->"65cdbdc6-7d32-4d8c-9ed0-\
841a0594f542"],

Cell[CellGroupData[{

Cell[BoxData["colors"], "Input",
 CellChangeTimes->{{3.705363552736804*^9, 
  3.705363553695119*^9}},ExpressionUUID->"ab737158-f015-41a5-af27-\
337318e84061"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.1450980392156863, 0.43529411764705883, 0.3843137254901961]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.996078431372549, 0.8200000000000001, 0.03529411764705882],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6640522875816994, 0.5466666666666667, 0.023529411764705882`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.996078431372549, 0.8200000000000001, 0.03529411764705882]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.996078431372549, 0.8200000000000001, 0.03529411764705882]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.996078431372549, 0.8200000000000001, 0.03529411764705882],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0, 0.5],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7053635542241287`*^9, 3.705363587906251*^9, 
  3.705407769215542*^9, 
  3.710852540342326*^9},ExpressionUUID->"79eaa0d8-a600-45d1-b37a-\
fcad1d675a8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J90Plot", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"PolyhedronData", "[", 
       RowBox[{
       "\"\<Disphenocingulum\>\"", ",", "\"\<Faces\>\"", ",", " ", 
        "\"\<Polygon\>\""}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Polygon", "[", "x_", "]"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"AbsoluteThickness", "[", "10", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.8", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Specularity", "[", "0", "]"}], ",", 
        RowBox[{"Opacity", "[", " ", "0.45", "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{"colors", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"ngons", ",", 
              RowBox[{"Length", "[", "x", "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
        
        RowBox[{"Polygon", "[", "x", "]"}]}], "}"}]}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "1.985765579012083`", ",", "2.621257213134179`", ",", 
       "0.7973366213857535`"}], "}"}]}], ",", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", ",", 
       RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}], ",", 
    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704203574835497*^9, 3.704203625481905*^9}, {
   3.7042059427473307`*^9, 3.704205950284981*^9}, 3.704206019654698*^9, {
   3.704206274696393*^9, 3.704206277446705*^9}, {3.704207327289748*^9, 
   3.704207328665947*^9}, 3.70420786920185*^9, {3.704208048077086*^9, 
   3.704208069356292*^9}, {3.704307079126176*^9, 3.704307097123838*^9}, {
   3.7043071685180407`*^9, 3.704307170219673*^9}, 3.704307322519264*^9, {
   3.7043073696506357`*^9, 3.704307435173119*^9}, {3.704307597036745*^9, 
   3.704307610025345*^9}, {3.704318572822255*^9, 3.704318576318543*^9}, {
   3.704318660761951*^9, 3.704318671439352*^9}, {3.704318785856464*^9, 
   3.704318806981221*^9}, {3.7043189761930113`*^9, 3.704318985054982*^9}, {
   3.70536363110181*^9, 3.70536363610741*^9}, {3.705363814955748*^9, 
   3.7053638170261793`*^9}},ExpressionUUID->"d1148d00-f6cb-4a0c-b3f6-\
da4eb844da56"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, \
{-0.11726680239547817`, -0.9911542397772739, 0.2380533277147617}, {
     0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
     0.9613247414690286}, {-0.11726680239547817`, -0.9911542397772739, 
     0.2380533277147617}, {
     0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
     1.0342255878319375`, -0.24602252904443161`, 0.5827770385041723}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
     0.9613247414690286}, {1.0342255878319375`, -0.24602252904443161`, 
     0.5827770385041723}, {0.5303052558386957, 0.5650396572477727, 
     0.8798272120504372}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
     0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
     0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{1.0342255878319375`, -0.24602252904443161`, 
     0.5827770385041723}, {
     0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
     0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
     0.8875880204815091, 0.5120753422939326, -0.05266459402297767}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{1.0342255878319375`, -0.24602252904443161`, 
     0.5827770385041723}, {0.8875880204815091, 
     0.5120753422939326, -0.05266459402297767}, {0.5303052558386957, 
     0.5650396572477727, 0.8798272120504372}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
     0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}, {
     0.8875880204815091, 0.5120753422939326, -0.05266459402297767}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
     0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}, {
     0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.29798459888735945`, 
     0.7939763540871261, -0.8095658486926417}, {-0.30987968899341745`, 
     0.018003654026792444`, -0.9779884259066806}, {-0.6665847017420747, 
     0.8492341214602188, -0.5515878584933748}}]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{-0.30987968899341745`, 
     0.018003654026792444`, -0.9779884259066806}, {-0.8144392952376528, \
-0.5375424573160974, -0.31708894647092317`}, {-1.17114430798631, 
     0.29368801011732865`, 0.10931162094238263`}, {-0.6665847017420747, 
     0.8492341214602188, -0.5515878584933748}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.11726680239547817`, -0.9911542397772739, 
     0.2380533277147617}, {-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.30987968899341745`, 
     0.018003654026792444`, -0.9779884259066806}, {
     0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.8144392952376528, -0.5375424573160974, -0.31708894647092317`}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.11726680239547817`, -0.9911542397772739, 
     0.2380533277147617}, {-0.8387701090062462, -0.4576492789900169, 
     0.6794165848290808}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.8387701090062462, -0.4576492789900169, 
     0.6794165848290808}, {-1.17114430798631, 0.29368801011732865`, 
     0.10931162094238263`}}]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{-0.6665847017420747, 
     0.8492341214602188, -0.5515878584933748}, {-1.17114430798631, 
     0.29368801011732865`, 0.10931162094238263`}, {-0.4604401949899723, 
     0.46107543093596254`, 0.7925986141756621}, {0.04411941125426262, 
     1.0166215422788532`, 0.13169913473990377`}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.29798459888735945`, 
     0.7939763540871261, -0.8095658486926417}, {-0.6665847017420747, 
     0.8492341214602188, -0.5515878584933748}, {0.04411941125426262, 
     1.0166215422788532`, 0.13169913473990377`}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.29798459888735945`, 
     0.7939763540871261, -0.8095658486926417}, {0.04411941125426262, 
     1.0166215422788532`, 0.13169913473990377`}, {0.8875880204815091, 
     0.5120753422939326, -0.05266459402297767}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.04411941125426262, 1.0166215422788532`, 
     0.13169913473990377`}, {0.5303052558386957, 0.5650396572477727, 
     0.8798272120504372}, {0.8875880204815091, 
     0.5120753422939326, -0.05266459402297767}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.04411941125426262, 1.0166215422788532`, 
     0.13169913473990377`}, {-0.4604401949899723, 0.46107543093596254`, 
     0.7925986141756621}, {0.5303052558386957, 0.5650396572477727, 
     0.8798272120504372}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.5303052558386957, 0.5650396572477727, 
     0.8798272120504372}, {-0.4604401949899723, 0.46107543093596254`, 
     0.7925986141756621}, {0.11346132789881679`, -0.34027689103815867`, 
     0.9613247414690286}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
     0.9613247414690286}, {-0.8387701090062462, -0.4576492789900169, 
     0.6794165848290808}, {-0.11726680239547817`, -0.9911542397772739, 
     0.2380533277147617}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.4604401949899723, 0.46107543093596254`, 
     0.7925986141756621}, {-0.8387701090062462, -0.4576492789900169, 
     0.6794165848290808}, {0.11346132789881679`, -0.34027689103815867`, 
     0.9613247414690286}}]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-1.17114430798631, 0.29368801011732865`, 
     0.10931162094238263`}, {-0.8387701090062462, -0.4576492789900169, 
     0.6794165848290808}, {-0.4604401949899723, 0.46107543093596254`, 
     0.7925986141756621}}]}},
  Boxed->False,
  ImageSize->{415.1093643451744, 431.66154894963296`},
  Lighting->"Neutral",
  ViewPoint->{1.985765579012083, 2.621257213134179, 0.7973366213857535},
  ViewVertical->{-0.26056951097442915`, 
   1.06032043655769, -0.018426558909775813`}]], "Output",
 CellChangeTimes->{{3.704207341679482*^9, 3.704207371600141*^9}, 
   3.7042074086787987`*^9, 3.704207445662527*^9, {3.70420777764942*^9, 
   3.7042077848093443`*^9}, 3.7042078255615883`*^9, 3.704207870654039*^9, {
   3.7042080632720823`*^9, 3.704208071654683*^9}, 3.704296654222271*^9, 
   3.704298677552487*^9, {3.704307081765893*^9, 3.704307097896454*^9}, 
   3.7043071708035994`*^9, 3.704307375626522*^9, {3.704307425795833*^9, 
   3.704307437321239*^9}, 3.704307611750193*^9, {3.704318541526557*^9, 
   3.7043185769998407`*^9}, {3.704318666614233*^9, 3.704318673521926*^9}, {
   3.704318788483938*^9, 3.7043188236199903`*^9}, {3.70431898583426*^9, 
   3.7043189921442223`*^9}, 3.705363522722192*^9, 3.7053635894857683`*^9, 
   3.705363818537615*^9, 3.705363858163275*^9, 3.705407777352276*^9, 
   3.7108525433048077`*^9},ExpressionUUID->"c86e8d56-b16f-4a85-a62a-\
ced5fd1521d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ABC", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"GeometricTransformation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"PolyhedronData", "[", 
          RowBox[{
          "\"\<Disphenocingulum\>\"", ",", "\"\<Faces\>\"", ",", " ", 
           "\"\<Polygon\>\""}], "]"}], "]"}], "/.", 
        RowBox[{
         RowBox[{"Polygon", "[", "x_", "]"}], "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"AbsoluteThickness", "[", "10", "]"}], ",", 
              RowBox[{"Opacity", "[", "0.8", "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Specularity", "[", "0", "]"}], ",", 
           RowBox[{"Opacity", "[", " ", "0.45", "]"}], ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{"colors", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"ngons", ",", 
                 RowBox[{"Length", "[", "x", "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           ",", 
           RowBox[{"Polygon", "[", "x", "]"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"ReflectionTransform", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"J90PlotMirrored", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"ABC", ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "1.985765579012083`", ",", "2.621257213134179`", ",", 
       "0.7973366213857535`"}], "}"}]}], ",", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", ",", 
       RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}], ",", 
    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7108617625085287`*^9, 3.710861777473886*^9}, {
  3.710861926424678*^9, 3.710861963960352*^9}, {3.710862070483224*^9, 
  3.710862078435196*^9}},ExpressionUUID->"6f117d5f-aaa1-44b0-a163-\
c09cffc6e888"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.010482453735345468`, -0.901366982255388, 
     0.7496791952436982}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {0.8034989275767017, -0.8969007441994632, 
     0.14049521817657964`}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{
     1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}, {
     0.8034989275767017, -0.8969007441994632, 
     0.14049521817657964`}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {
     0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.5303052558386957, 
     0.5650396572477727, -0.8798272120504372}, {
     1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}, {
     0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.010482453735345468`, -0.901366982255388, 
     0.7496791952436982}, {0.8034989275767017, -0.8969007441994632, 
     0.14049521817657964`}, {0.6568605152355149, -0.13880239517520027`, 
     0.7759358573509268}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
     0.05266459402297767}, {0.6568605152355149, -0.13880239517520027`, 
     0.7759358573509268}, {0.8034989275767017, -0.8969007441994632, 
     0.14049521817657964`}, {
     1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.5303052558386957, 
     0.5650396572477727, -0.8798272120504372}, {0.8875880204815091, 
     0.5120753422939326, 0.05266459402297767}, {
     1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
     0.05266459402297767}, {0.29798459888735945`, 0.7939763540871261, 
     0.8095658486926417}, {0.6568605152355149, -0.13880239517520027`, 
     0.7759358573509268}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.30987968899341745`, 0.018003654026792444`, 
     0.9779884259066806}, {0.010482453735345468`, -0.901366982255388, 
     0.7496791952436982}, {0.6568605152355149, -0.13880239517520027`, 
     0.7759358573509268}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.29798459888735945`, 0.7939763540871261, 
     0.8095658486926417}, {-0.30987968899341745`, 0.018003654026792444`, 
     0.9779884259066806}, {0.6568605152355149, -0.13880239517520027`, 
     0.7759358573509268}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.6665847017420747, 0.8492341214602188, 
     0.5515878584933748}, {-0.30987968899341745`, 0.018003654026792444`, 
     0.9779884259066806}, {0.29798459888735945`, 0.7939763540871261, 
     0.8095658486926417}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{-0.6665847017420747, 0.8492341214602188, 
     0.5515878584933748}, {-1.17114430798631, 
     0.29368801011732865`, -0.10931162094238263`}, {-0.8144392952376528, \
-0.5375424573160974, 0.31708894647092317`}, {-0.30987968899341745`, 
     0.018003654026792444`, 0.9779884259066806}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, 
     0.31708894647092317`}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {0.010482453735345468`, -0.901366982255388, 
     0.7496791952436982}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, 
     0.31708894647092317`}, {0.010482453735345468`, -0.901366982255388, 
     0.7496791952436982}, {-0.30987968899341745`, 0.018003654026792444`, 
     0.9779884259066806}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {-0.8144392952376528, -0.5375424573160974, 
     0.31708894647092317`}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-1.17114430798631, 
     0.29368801011732865`, -0.10931162094238263`}, {-0.8387701090062462, \
-0.4576492789900169, -0.6794165848290808}, {-0.8144392952376528, \
-0.5375424573160974, 0.31708894647092317`}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
    EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
    Polygon3DBox[{{0.04411941125426262, 
     1.0166215422788532`, -0.13169913473990377`}, {-0.4604401949899723, 
     0.46107543093596254`, -0.7925986141756621}, {-1.17114430798631, 
     0.29368801011732865`, -0.10931162094238263`}, {-0.6665847017420747, 
     0.8492341214602188, 0.5515878584933748}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.04411941125426262, 
     1.0166215422788532`, -0.13169913473990377`}, {-0.6665847017420747, 
     0.8492341214602188, 0.5515878584933748}, {0.29798459888735945`, 
     0.7939763540871261, 0.8095658486926417}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
     0.05266459402297767}, {0.04411941125426262, 
     1.0166215422788532`, -0.13169913473990377`}, {0.29798459888735945`, 
     0.7939763540871261, 0.8095658486926417}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
     0.05266459402297767}, {0.5303052558386957, 
     0.5650396572477727, -0.8798272120504372}, {0.04411941125426262, 
     1.0166215422788532`, -0.13169913473990377`}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{0.5303052558386957, 
     0.5650396572477727, -0.8798272120504372}, {-0.4604401949899723, 
     0.46107543093596254`, -0.7925986141756621}, {0.04411941125426262, 
     1.0166215422788532`, -0.13169913473990377`}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, \
{-0.4604401949899723, 0.46107543093596254`, -0.7925986141756621}, {
     0.5303052558386957, 0.5650396572477727, -0.8798272120504372}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {
     0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{
     0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, \
{-0.8387701090062462, -0.4576492789900169, -0.6794165848290808}, \
{-0.4604401949899723, 0.46107543093596254`, -0.7925986141756621}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}, 
   {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
    Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
    Specularity[], 
    Polygon3DBox[{{-0.4604401949899723, 
     0.46107543093596254`, -0.7925986141756621}, {-0.8387701090062462, \
-0.4576492789900169, -0.6794165848290808}, {-1.17114430798631, 
     0.29368801011732865`, -0.10931162094238263`}},
     VertexColors->Automatic,
     VertexNormals->Automatic]}},
  Boxed->False,
  ImageSize->{401.18299726196574`, 414.831148165847},
  Lighting->"Neutral",
  ViewPoint->{1.985765579012083, 2.621257213134179, 0.7973366213857535},
  ViewVertical->{-0.26056951097442915`, 
   1.06032043655769, -0.018426558909775813`}]], "Output",
 CellChangeTimes->{{3.7108619389651527`*^9, 3.710861964489025*^9}, {
   3.710862071427977*^9, 3.710862079131537*^9}, 
   3.7108632820904713`*^9},ExpressionUUID->"482065de-bbe5-4479-9788-\
72f2b3c709da"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FaceForm", "[", 
      RowBox[{"Red", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.710858270130999*^9, 
  3.7108582736110373`*^9}},ExpressionUUID->"36a246c5-795f-45d8-a4b2-\
3f335df7d69f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FaceForm", "[", 
      RowBox[{"Red", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"Reverse", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7108582753505898`*^9, 3.71085828379388*^9}, {
   3.710859095523193*^9, 3.710859096304652*^9}, {3.710859183439251*^9, 
   3.7108592290613403`*^9}, 3.710859289095811*^9, {3.7108593209010878`*^9, 
   3.710859322834539*^9}},ExpressionUUID->"90be1f00-23d5-406f-b39b-\
4263965a81bc"],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "9"}], "}"}]}], "]"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "2"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Specularity", "[", "50", "]"}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<Directional\>\"", ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", ".7", ",", ".1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5", ",", "0"}], "}"}]}], "}"}]}], "}"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710859031609023*^9, 
  3.710859031610896*^9}},ExpressionUUID->"87915193-3009-4b99-ac08-\
5ed1273bbb33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"gr2", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], ",", " ", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"GeometricTransformation", "[", 
       RowBox[{"gr2", ",", 
        RowBox[{"ReflectionMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"tt", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], ",", " ", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.7108583105743513`*^9, 3.710858331392235*^9}, {
   3.7108589675919228`*^9, 3.7108589706286163`*^9}, {3.7108590048625717`*^9, 
   3.7108590672898912`*^9}, {3.7108592201780367`*^9, 3.710859220242158*^9}, 
   3.710859363027216*^9, {3.7108594022011833`*^9, 3.710859404591919*^9}, {
   3.7108594548422527`*^9, 3.710859494303776*^9}, {3.710859721569356*^9, 
   3.710859725942254*^9}, {3.710859763124352*^9, 
   3.710859767881838*^9}},ExpressionUUID->"0ef26d49-e666-48d6-bbdf-\
d82cf32c3926"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {FaceForm[RGBColor[1, 0, 0], RGBColor[0, 0, 1]], 
     Polygon3DBox[{{0, 1, 0}, {1, 0, 0}, {0, 0, 0}}]},
    Lighting->"Neutral",
    PlotRange->{-0.1, 0.1}], ",", 
   Graphics3DBox[
    {FaceForm[RGBColor[1, 0, 0], RGBColor[0, 0, 1]], 
     Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {0, 1, 0}},
      VertexColors->Automatic,
      VertexNormals->Automatic]},
    Lighting->"Neutral",
    PlotRange->{-0.1, 0.1}], ",", 
   Graphics3DBox[
    {FaceForm[RGBColor[1, 0, 0], RGBColor[0, 0, 1]], 
     Polygon3DBox[{{0, 0, 0}, {1, 0, 0}, {0, 1, 0}},
      VertexColors->Automatic,
      VertexNormals->Automatic]},
    Lighting->"Neutral",
    PlotRange->{-0.1, 0.1}]}], "}"}]], "Output",
 CellChangeTimes->{{3.710859057477247*^9, 3.7108590998326883`*^9}, {
   3.71085918689438*^9, 3.7108592314961147`*^9}, {3.7108592940066833`*^9, 
   3.710859364096197*^9}, 3.71085940509191*^9, {3.710859459214855*^9, 
   3.7108594947904367`*^9}, 3.710859727037367*^9, 
   3.710859768528235*^9},ExpressionUUID->"d1fc287d-6654-4fe1-bbca-\
6b16632ecb7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tt", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"GeometricTransformation", "[", 
    RowBox[{"gr2", ",", 
     RowBox[{"ReflectionMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7108595417542353`*^9, 3.710859542145337*^9}, {
  3.710859616600409*^9, 3.710859622231038*^9}, {3.710859707401432*^9, 
  3.710859708447892*^9}},ExpressionUUID->"903573d0-aa54-4632-9f1c-\
fa6736c2973d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FaceForm", "[", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"Polygon", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"VertexNormals", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexColors", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.710859538780312*^9, 3.7108595424354477`*^9}, 
   3.710859622814019*^9, 
   3.710859708808127*^9},ExpressionUUID->"fdb9cd07-ff72-411d-8a29-\
01ca30368363"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["gr2"], "Input",
 CellChangeTimes->{{3.710859628213575*^9, 
  3.710859628624261*^9}},ExpressionUUID->"acce07ab-8eca-44cc-b0d5-\
4fb9eac1985a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FaceForm", "[", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"Polygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.710859629000174*^9},ExpressionUUID->"79753c38-0191-4710-a516-\
387c0ce409a5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"J90Plot", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"PolyhedronData", "[", 
       RowBox[{
       "\"\<Disphenocingulum\>\"", ",", "\"\<Faces\>\"", ",", " ", 
        "\"\<Polygon\>\""}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Polygon", "[", "x_", "]"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"AbsoluteThickness", "[", "10", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.8", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Specularity", "[", "0", "]"}], ",", 
        RowBox[{"Opacity", "[", " ", "0.45", "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{"colors", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"ngons", ",", 
              RowBox[{"Length", "[", "x", "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
        
        RowBox[{"Polygon", "[", "x", "]"}]}], "}"}]}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "1.985765579012083`", ",", "2.621257213134179`", ",", 
       "0.7973366213857535`"}], "}"}]}], ",", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", ",", 
       RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}], ",", 
    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704203574835497*^9, 3.704203625481905*^9}, {
   3.7042059427473307`*^9, 3.704205950284981*^9}, 3.704206019654698*^9, {
   3.704206274696393*^9, 3.704206277446705*^9}, {3.704207327289748*^9, 
   3.704207328665947*^9}, 3.70420786920185*^9, {3.704208048077086*^9, 
   3.704208069356292*^9}, {3.704307079126176*^9, 3.704307097123838*^9}, {
   3.7043071685180407`*^9, 3.704307170219673*^9}, 3.704307322519264*^9, {
   3.7043073696506357`*^9, 3.704307435173119*^9}, {3.704307597036745*^9, 
   3.704307610025345*^9}, {3.704318572822255*^9, 3.704318576318543*^9}, {
   3.704318660761951*^9, 3.704318671439352*^9}, {3.704318785856464*^9, 
   3.704318806981221*^9}, {3.7043189761930113`*^9, 3.704318985054982*^9}, {
   3.70536363110181*^9, 3.70536363610741*^9}, {3.705363814955748*^9, 
   3.7053638170261793`*^9}},ExpressionUUID->"8b050005-adbc-4012-98f3-\
493b4bd660ab"],

Cell["Import the RC tree and some visualization data (colors):", "Text",
 CellChangeTimes->{{3.702950589226754*^9, 3.702950611606043*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GD", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "\"\<../GD_Mathematica.mat\>\"", "]"}], "//", 
     "First"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyColors", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<../MyColors_Mathematica.mat\>\"", "]"}], "//",
     "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RCAdj", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<../eqSpheres/RCAdj.mat\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRC", "=", 
   RowBox[{"AdjacencyGraph", "[", "RCAdj", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RCa", "=", 
   RowBox[{"GraphAutomorphismGroup", "[", "GRC", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NAutRC", "=", 
   RowBox[{"GroupOrder", "[", "RCa", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RCDegrees", " ", "=", " ", 
   RowBox[{"VertexDegree", "[", "GRC", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.679350779019939*^9, 3.679350783584305*^9}, {
   3.679350855469636*^9, 3.679350890864195*^9}, {3.679353789073676*^9, 
   3.6793537923930283`*^9}, 3.679357245705145*^9, {3.6793952671935253`*^9, 
   3.679395284271586*^9}, {3.6794072178137417`*^9, 3.679407225334655*^9}, 
   3.701716673705285*^9, {3.701723019000175*^9, 3.701723048427971*^9}, {
   3.701780495066564*^9, 3.7017805116177073`*^9}, 3.7023076834565773`*^9, {
   3.702847154237904*^9, 3.702847164042945*^9}, {3.70294785338939*^9, 
   3.7029478617848663`*^9}, {3.702948121312923*^9, 
   3.702948131732486*^9}},ExpressionUUID->"45268ca9-bb98-43f0-973a-\
7fecffc07ef6"],

Cell[CellGroupData[{

Cell[BoxData["GRC"], "Input",
 CellChangeTimes->{{3.67939619418629*^9, 
  3.679396195171859*^9}},ExpressionUUID->"0d4603f2-aac9-4472-b826-\
17b5c8cfedcf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 4, 8, 11, 14, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 
          30}, {{2}, {3}, {5}, {9}, {1}, {4}, {6}, {10}, {1}, {7}, {11}, {
          2}, {8}, {12}, {1}, {13}, {2}, {14}, {3}, {15}, {4}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2.8388748697883446`, 2.5955427380922007`}, {
       1.135549947915338, 1.9466570535691505`}, {2.919985580353726, 
       1.9466570535691505`}, {0.3244428422615251, 1.2977713690461004`}, {
       3.893314107138301, 1.9466570535691505`}, {1.2977713690461004`, 
       1.2977713690461004`}, {2.5955427380922007`, 1.2977713690461004`}, {0., 
       0.6488856845230502}, {4.542199791661352, 1.9466570535691505`}, {
       1.9466570535691505`, 1.2977713690461004`}, {3.244428422615251, 
       1.2977713690461004`}, {0.6488856845230502, 0.6488856845230502}, {
       3.893314107138301, 1.2977713690461004`}, {1.2977713690461004`, 
       0.6488856845230502}, {2.5955427380922007`, 0.6488856845230502}, {0., 
       0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{3, 11}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{4, 12}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{5, 13}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{6, 14}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.0403640995690544]}, 
         {Arrowheads[0.], ArrowBox[{8, 16}, 0.0403640995690544]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0403640995690544], DiskBox[2, 0.0403640995690544], 
         DiskBox[3, 0.0403640995690544], DiskBox[4, 0.0403640995690544], 
         DiskBox[5, 0.0403640995690544], DiskBox[6, 0.0403640995690544], 
         DiskBox[7, 0.0403640995690544], DiskBox[8, 0.0403640995690544], 
         DiskBox[9, 0.0403640995690544], DiskBox[10, 0.0403640995690544], 
         DiskBox[11, 0.0403640995690544], DiskBox[12, 0.0403640995690544], 
         DiskBox[13, 0.0403640995690544], DiskBox[14, 0.0403640995690544], 
         DiskBox[15, 0.0403640995690544], DiskBox[16, 0.0403640995690544]}}]],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.710852549411063*^9},ExpressionUUID->"ec1b1138-c3ad-4c43-8112-\
0f1650b21d3a"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 4, 8, 11, 14, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 
          30}, {{2}, {3}, {5}, {9}, {1}, {4}, {6}, {10}, {1}, {7}, {11}, {
          2}, {8}, {12}, {1}, {13}, {2}, {14}, {3}, {15}, {4}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
      FormatType -> TraditionalForm, GraphStyle -> "DiagramBlack"}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        GrayLevel[0], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        GrayLevel[0.7], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.5619148945192585`, 2.410902231431113}, {
           3.1158348450574307`, 2.7801832447532884`}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.858589972646252, 1.7620165469080629`}, {
           1.4125099231844238`, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.64302560508464, 1.7620165469080629`}, {
           3.196945555622812, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.0474828669924392, 1.1131308623850127`}, {
           0.601402817530611, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.7620165469080629`}, {
           4.170274082407387, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 1.1131308623850127`}, {
           1.5747313443151862`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 1.1131308623850127`}, {
           2.8725027133612864`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, 0.4642451778619625}, {
           0.2769599752690859, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{4.265239816392266, 1.7620165469080629`}, {
           4.819159766930437, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.6696970783000646`, 1.1131308623850127`}, {
           2.2236170288382366`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.9674684473461648`, 1.1131308623850127`}, {
           3.521388397884337, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.3719257092539643, 0.4642451778619625}, {
           0.9258456597921361, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.1131308623850127`}, {
           4.170274082407387, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 0.4642451778619625}, {
           1.5747313443151862`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 0.4642451778619625}, {
           2.8725027133612864`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, -0.1846405066610877}, {
           0.2769599752690859, 0.1846405066610877}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$16"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.18, 351.8200000000001}, {-103.10720000000003`, 
       97.39767613668897}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.7029503198924026`*^9, 
  3.7029503199158278`*^9}},ExpressionUUID->"4e46729a-0f3c-4885-8814-\
b9825252c76c"],

Cell["\<\
Obtain the J90 (Disphenocingulum) graph and Vertex coordinates.\
\>", "Text",
 CellChangeTimes->{{3.702950626819868*^9, 3.702950647103545*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DisphG", "=", 
   RowBox[{"PolyhedronData", "[", 
    RowBox[{"\"\<Disphenocingulum\>\"", ",", " ", "\"\<SkeletonGraph\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DisphCoords", " ", "=", " ", 
   RowBox[{"PolyhedronData", "[", 
    RowBox[{
    "\"\<Disphenocingulum\>\"", ",", " ", "\"\<VertexCoordinates\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7029083725385*^9, 3.70290841492227*^9}, {
   3.7029084498349943`*^9, 3.702908463507279*^9}, {3.702908498322205*^9, 
   3.702908501376033*^9}, 3.7029111164445353`*^9, {3.702944495781506*^9, 
   3.702944525163312*^9}, {3.7042949493491173`*^9, 
   3.7042949610925083`*^9}},ExpressionUUID->"bb6d8cc5-4cb9-41a7-90cb-\
33e8a15465a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GroupOrder", "[", 
  RowBox[{"GraphAutomorphismGroup", "[", "DisphG", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.707568648069293*^9, 
  3.707568681419673*^9}},ExpressionUUID->"80bad95e-e4e6-46da-88dc-\
ed469641d032"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.7075686742223997`*^9, 3.70756868188869*^9}, 
   3.710852555486105*^9},ExpressionUUID->"639697e2-41a5-4e68-b3ce-\
d42bfb18192d"]
}, Open  ]],

Cell["This is the IGraph package - only do this once:", "Text",
 CellChangeTimes->{{3.7029111244131804`*^9, 3.702911134345709*^9}, {
  3.702950655719019*^9, 
  3.702950660335041*^9}},ExpressionUUID->"724c4586-833a-41a8-91f4-\
1d58204f362e"],

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  "\"\</Users/norbert/Downloads/IGraphM-0.3.90.paclet\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.702910272586546*^9, 3.7029102725895767`*^9}, {
  3.702910303295192*^9, 
  3.7029103081245832`*^9}},ExpressionUUID->"62ad8d31-cf29-4299-bb05-\
f898ecae1a10"],

Cell["Load the package:", "Text",
 CellChangeTimes->{{3.702950665034429*^9, 
  3.7029506713746653`*^9}},ExpressionUUID->"8ea83adc-0117-47ce-860f-\
3be3120c0393"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "IGraphM`"}]], "Input",
 CellChangeTimes->{{3.7029103412605352`*^9, 
  3.702910341263791*^9}},ExpressionUUID->"9fa337d7-8270-413d-b740-\
198042635a64"],

Cell[CellGroupData[{

Cell[BoxData["\<\"IGraph/M 0.3.90 (April 28, 2017)\"\>"], "Print",
 CellChangeTimes->{3.702910343333908*^9, 3.704198363162376*^9, 
  3.704296667144643*^9, 3.705363876724265*^9, 
  3.710852563366643*^9},ExpressionUUID->"71dba5b7-1d84-4254-8fcd-\
204b97ddbdf3"],

Cell[BoxData["\<\"Evaluate IGDocumentation[] to get started.\"\>"], "Print",
 CellChangeTimes->{3.702910343333908*^9, 3.704198363162376*^9, 
  3.704296667144643*^9, 3.705363876724265*^9, 
  3.710852563376511*^9},ExpressionUUID->"4d96204b-6b0d-4d72-8032-\
8dd4f7a494e2"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGDocumentation", "[", "]"}]], "Input"],

Cell["\<\
There are 5184 sub-isomorphisms with which the RC tree can be \
\[OpenCurlyDoubleQuote]embedded\[CloseCurlyDoubleQuote] within the \
Disphenocingulum:\
\>", "Text",
 CellChangeTimes->{{3.702911140045476*^9, 3.7029111903574457`*^9}, 
   3.702950713069351*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGVF2SubisomorphismCount", "[", 
  RowBox[{"GRC", ",", "DisphG"}], "]"}]], "Input",
 CellChangeTimes->{{3.7029104212009974`*^9, 3.702910437916049*^9}, {
  3.7029108017254868`*^9, 3.7029108090417643`*^9}}],

Cell[BoxData["5184"], "Output",
 CellChangeTimes->{
  3.702910438517173*^9, {3.702910806001462*^9, 3.702910809496955*^9}, 
   3.704204550757752*^9}]
}, Open  ]],

Cell["Find all possibilities explicitly:", "Text",
 CellChangeTimes->{{3.702911194746014*^9, 3.702911200813046*^9}, {
  3.702950694180685*^9, 3.702950705197734*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllSubisos", " ", "=", " ", 
   RowBox[{"IGVF2FindSubisomorphisms", "[", 
    RowBox[{"GRC", ",", "DisphG"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7029108944992867`*^9, 3.702910902385735*^9}, {
  3.702911035944448*^9, 3.702911047605315*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AllCoords", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "AllSubisos", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllMaps", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "AllSubisos", "]"}]}], "}"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"AllInvMaps", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "AllSubisos", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllOrigCoords", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "AllSubisos", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllAdjs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "AllSubisos", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"m", "=", "1"}], ",", 
    RowBox[{"m", "\[LessEqual]", 
     RowBox[{"Length", "[", "AllSubisos", "]"}]}], ",", " ", 
    RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"map", "=", 
      RowBox[{"AllSubisos", "[", 
       RowBox[{"[", "m", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inv", "=", 
      RowBox[{"Apply", "[", 
       RowBox[{"Normal", ",", 
        RowBox[{"GroupBy", "[", 
         RowBox[{
          RowBox[{"Normal", "[", "map", "]"}], ",", 
          RowBox[{"Last", "\[Rule]", "First"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AllAdjs", "[", 
       RowBox[{"[", "m", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"AdjacencyMatrix", "[", "DisphG", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"Values", "[", "map", "]"}], ",", 
         StyleBox[
          RowBox[{"Values", "[", "map", "]"}],
          FontWeight->"Bold"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MappedCoords", "=", 
      RowBox[{"DisphCoords", "[", 
       RowBox[{"[", 
        RowBox[{"Values", "[", "map", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Len", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"MappedCoords", "^", "2"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AllCoords", "[", 
       RowBox[{"[", "m", "]"}], "]"}], "=", 
      RowBox[{"MappedCoords", "/", "Len"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AllOrigCoords", "[", 
       RowBox[{"[", "m", "]"}], "]"}], "=", "MappedCoords"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AllMaps", "[", 
       RowBox[{"[", "m", "]"}], "]"}], "=", 
      RowBox[{"Values", "[", "map", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"AllInvMaps", "[", 
       RowBox[{"[", "m", "]"}], "]"}], "=", 
      RowBox[{"Keys", "[", "inv", "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.702911203928585*^9, 3.70291120849362*^9}, {
  3.7029450411354017`*^9, 3.702945042061112*^9}, {3.702948312646523*^9, 
  3.702948339228606*^9}, {3.702948618103361*^9, 3.702948620604821*^9}, {
  3.702948753487446*^9, 3.702948753913652*^9}, {3.702948846849264*^9, 
  3.7029488827796926`*^9}, {3.7029498325915956`*^9, 3.70294990524146*^9}, {
  3.702949943888467*^9, 3.702950089934826*^9}, {3.7042045386961327`*^9, 
  3.704204579302227*^9}, {3.70420957185717*^9, 3.704209617250208*^9}, {
  3.704209647932601*^9, 3.7042096707798433`*^9}, {3.704209716195366*^9, 
  3.704209738807026*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<J90SubisoCoords.mat\>\"", ",", "AllCoords"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<J90SubisoOrigCoords.mat\>\"", ",", "AllOrigCoords"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<J90SubisoAdjs.mat\>\"", ",", "AllAdjs"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<J90SubisoMaps.mat\>\"", ",", "AllMaps"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.702950425825161*^9, 3.702950503407771*^9}, {
  3.702951131521896*^9, 3.70295116720265*^9}, {3.7029516139596567`*^9, 
  3.702951626734291*^9}, {3.702952071199259*^9, 3.702952076004422*^9}, {
  3.704204593769004*^9, 3.7042046011915627`*^9}, {3.704209680924014*^9, 
  3.704209709822483*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explicit construction of J90 graph states", "Section",
 CellChangeTimes->{{3.70419842463626*^9, 3.704198437124319*^9}}],

Cell["\<\
Read back in the previously calculated adjacencies (from Mathematica) and \
corresponding tree states (from MATLAB):\
\>", "Text",
 CellChangeTimes->{{3.704198489017448*^9, 3.704198518265451*^9}, {
  3.704198643224996*^9, 3.704198643386191*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AllCoords", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<J90SubisoCoords.mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllOrigCoords", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<J90SubisoOrigCoords.mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllAdjs", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<J90SubisoAdjs.mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllStates", "=", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{"Import", "[", "\"\<J90SubisoStates.mat\>\"", "]"}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllMaps", "=", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{"Import", "[", "\"\<J90SubisoMaps.mat\>\"", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704198533544094*^9, 3.7041985605284348`*^9}, {
  3.704198692093019*^9, 3.704198697584766*^9}, {3.7041987638302298`*^9, 
  3.704198767108691*^9}, {3.7041988849521303`*^9, 3.704198886961597*^9}, {
  3.704204617683653*^9, 3.7042046239622107`*^9}, {3.704209764910304*^9, 
  3.70420977836416*^9}, {3.704286470210169*^9, 3.704286471456643*^9}, {
  3.704294968787294*^9, 3.7042949692405977`*^9}, {3.704297053041031*^9, 
  3.704297054307102*^9}, {3.7042972088828993`*^9, 3.704297210527256*^9}, {
  3.704297350103343*^9, 
  3.704297355024953*^9}},ExpressionUUID->"e44641f7-15bb-446f-82d6-\
0812313faa84"],

Cell["\<\
This is the styling of the underlying graph into which we embed the tree:\
\>", "Text",
 CellChangeTimes->{{3.704297363580051*^9, 3.704297378371571*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tt", "=", 
   RowBox[{"AdjacencyMatrix", "[", "DisphG", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GDisph", "=", 
   RowBox[{"AdjacencyGraph", "[", 
    RowBox[{"tt", ",", 
     RowBox[{"GraphLayout", "\[Rule]", 
      RowBox[{"{", "\"\<TutteEmbedding\>\"", "}"}]}], ",", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Gray", ",", 
         RowBox[{"Opacity", "[", "1", "]"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "0.4"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704309903885553*^9, 3.704309936092518*^9}, {
   3.7043099737183523`*^9, 3.7043099801217327`*^9}, 3.7043100306605253`*^9, 
   3.7043100713053493`*^9, 3.704310107427537*^9, {3.7043101971635733`*^9, 
   3.704310226885531*^9}, {3.704310277349814*^9, 3.704310342673318*^9}, {
   3.704310380300756*^9, 3.704310383917408*^9}, {3.704310536106617*^9, 
   3.704310646630492*^9}, {3.704310734162716*^9, 3.7043107402966967`*^9}, 
   3.7043108345788383`*^9, {3.704310924753221*^9, 3.704310939150042*^9}, {
   3.704310990080524*^9, 3.704310992113562*^9}, {3.704312688960081*^9, 
   3.7043127029975853`*^9}},ExpressionUUID->"aa934d86-1937-45cb-bd67-\
6e8c203a0ea6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vcoords", "=", 
   RowBox[{"Values", "[", 
    RowBox[{"First", "[", 
     RowBox[{"AbsoluteOptions", "[", 
      RowBox[{"GDisph", ",", "VertexCoordinates"}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7043110356470222`*^9, 3.704311035827743*^9}, {
   3.704311077490181*^9, 3.7043111097681437`*^9}, 
   3.704312674879238*^9},ExpressionUUID->"fd964a91-3fbb-42cb-aa91-\
1c46bc27ff44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rmat", "=", 
   RowBox[{"RotationTransform", "[", 
    RowBox[{"Pi", "/", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vcoordsnew", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"rmat", ",", "vcoords"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3"}], ",", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3"}], ",", 
     RowBox[{"-", "0.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.6", ",", "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1"}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "9", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.6", ",", 
     RowBox[{"-", "0.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "10", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.35", ",", "0.27"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "15", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.35", ",", 
     RowBox[{"-", "0.27"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2"}], ",", "0.22"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2"}], ",", 
     RowBox[{"-", "0.22"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0.21"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vcoordsnew", "[", 
    RowBox[{"[", "13", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", 
     RowBox[{"-", "0.21"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vcoordsnew", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmat", "=", 
   RowBox[{"RotationTransform", "[", "Pi", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vcoordsnew", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"rmat", ",", "vcoordsnew"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7043115647991657`*^9, 3.7043115724959087`*^9}, {
   3.704311612463881*^9, 3.704311613439069*^9}, {3.7043120056803427`*^9, 
   3.7043120482829113`*^9}, {3.704312103465952*^9, 3.704312107143878*^9}, {
   3.7043121532316313`*^9, 3.70431217218056*^9}, {3.704312248425947*^9, 
   3.7043122891948566`*^9}, {3.7043123234387083`*^9, 3.704312419834008*^9}, {
   3.7043125105328417`*^9, 3.70431263600638*^9}, 3.704312666042067*^9, 
   3.70431441640705*^9, {3.7043144586602917`*^9, 
   3.7043144598145103`*^9}},ExpressionUUID->"6db8afbf-4ecf-4541-b04b-\
a22a9a59d0d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisphGStyled", "=", 
  RowBox[{"AdjacencyGraph", "[", 
   RowBox[{"tt", ",", 
    RowBox[{"GraphLayout", "\[Rule]", 
     RowBox[{"{", "\"\<TutteEmbedding\>\"", "}"}]}], ",", 
    RowBox[{"EdgeStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Gray", ",", 
        RowBox[{"Opacity", "[", "1", "]"}]}], "}"}], "]"}]}], ",", 
    RowBox[{"VertexSize", "\[Rule]", "0.6"}], ",", 
    RowBox[{"VertexCoordinates", "\[Rule]", "vcoordsnew"}], ",", 
    RowBox[{"VertexStyle", "\[Rule]", 
     RowBox[{"Darker", "[", "Gray", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704309903885553*^9, 3.704309936092518*^9}, {
   3.7043099737183523`*^9, 3.7043099801217327`*^9}, 3.7043100306605253`*^9, 
   3.7043100713053493`*^9, 3.704310107427537*^9, {3.7043101971635733`*^9, 
   3.704310226885531*^9}, {3.704310277349814*^9, 3.704310342673318*^9}, {
   3.704310380300756*^9, 3.704310383917408*^9}, {3.704310536106617*^9, 
   3.704310646630492*^9}, {3.704310734162716*^9, 3.7043107402966967`*^9}, 
   3.7043108345788383`*^9, {3.704310924753221*^9, 3.704310939150042*^9}, {
   3.704310990080524*^9, 3.704310992113562*^9}, {3.704311213906951*^9, 
   3.704311219680278*^9}, 3.704312717639442*^9, {3.704315914294126*^9, 
   3.704315915171619*^9}, {3.704318328391159*^9, 
   3.704318359491157*^9}},ExpressionUUID->"75cda4e5-5218-4d75-916b-\
ea999c46f920"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 4, 9, 14, 18, 23, 28, 33, 38, 43, 48, 53, 58, 63, 67, 72, 
          76}, {{2}, {3}, {4}, {5}, {1}, {3}, {5}, {7}, {10}, {1}, {2}, {6}, {
          7}, {8}, {1}, {6}, {9}, {11}, {1}, {2}, {9}, {10}, {12}, {3}, {4}, {
          8}, {11}, {13}, {2}, {3}, {8}, {10}, {14}, {3}, {6}, {7}, {13}, {
          14}, {4}, {5}, {11}, {12}, {15}, {2}, {5}, {7}, {12}, {16}, {4}, {
          6}, {9}, {13}, {15}, {5}, {9}, {10}, {15}, {16}, {6}, {8}, {11}, {
          14}, {15}, {7}, {8}, {13}, {16}, {9}, {11}, {12}, {13}, {16}, {
          10}, {12}, {14}, {15}}}, Pattern}]}, {EdgeStyle -> {
         Directive[{
           AbsoluteThickness[3], 
           GrayLevel[0.5], 
           Opacity[1]}]}, GraphLayout -> {"TutteEmbedding"}, 
       VertexCoordinates -> {{
        0.3, -0.5}, {-0.04188830930896484, -0.4136852702402346}, {
        0.2, -0.22}, {0.3, 0.5}, {-0.6, -0.5}, {0.2, 0.22}, {-0.1, -0.21}, {
        0.1, 0.}, {-0.6, 0.5}, {-0.35, -0.27}, {-0.04189085523675898, 
        0.4136784846246805}, {-0.467915525028202, -2.438974377960701*^-6}, \
{-0.1, 0.21}, {-0.09587429250824256, -5.238176569929975*^-6}, {-0.35, 
        0.27}, {-0.2978323195413586, -3.5388866881091996`*^-6}}, 
       VertexSize -> {0.6}, VertexStyle -> {
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{
       0.3, -0.5}, {-0.04188830930896484, -0.4136852702402346}, {
       0.2, -0.22}, {0.3, 0.5}, {-0.6, -0.5}, {0.2, 0.22}, {-0.1, -0.21}, {
       0.1, 0.}, {-0.6, 0.5}, {-0.35, -0.27}, {-0.04189085523675898, 
       0.4136784846246805}, {-0.467915525028202, -2.438974377960701*^-6}, \
{-0.1, 0.21}, {-0.09587429250824256, -5.238176569929975*^-6}, {-0.35, 
       0.27}, {-0.2978323195413586, -3.5388866881091996`*^-6}}, {
        {GrayLevel[0.5], AbsoluteThickness[3], Opacity[1], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{4, 11}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{5, 12}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{6, 13}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{7, 14}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{8, 14}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{9, 11}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{9, 12}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{9, 15}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{10, 12}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{10, 16}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{11, 15}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{12, 15}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{12, 16}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{13, 14}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{13, 15}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.051024961647119976`]}, 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.051024961647119976`]}}, 
        {RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.051024961647119976], DiskBox[2, 0.051024961647119976], 
         DiskBox[3, 0.051024961647119976], DiskBox[4, 0.051024961647119976], 
         DiskBox[5, 0.051024961647119976], DiskBox[6, 0.051024961647119976], 
         DiskBox[7, 0.051024961647119976], DiskBox[8, 0.051024961647119976], 
         DiskBox[9, 0.051024961647119976], DiskBox[10, 0.051024961647119976], 
         DiskBox[11, 0.051024961647119976], DiskBox[12, 0.051024961647119976],
          DiskBox[13, 0.051024961647119976], 
         DiskBox[14, 0.051024961647119976], DiskBox[15, 0.051024961647119976],
          DiskBox[16, 0.051024961647119976]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.704311220443829*^9, 3.7043112312173033`*^9}, {
   3.704311377205785*^9, 3.7043114001101713`*^9}, 3.7043114312776318`*^9, 
   3.704311466737364*^9, 3.7043115019601*^9, 3.704311619039406*^9, 
   3.704311667858675*^9, {3.704311699513595*^9, 3.704311713428116*^9}, 
   3.704311763684371*^9, 3.704311825282433*^9, {3.70431191619003*^9, 
   3.704311966433463*^9}, 3.704312051750622*^9, 3.70431217422976*^9, 
   3.704312290690229*^9, {3.7043123336230507`*^9, 3.704312355813602*^9}, {
   3.70431240107069*^9, 3.704312421247327*^9}, {3.7043125401827793`*^9, 
   3.70431263739219*^9}, {3.704312708611876*^9, 3.704312734354227*^9}, 
   3.704314418147434*^9, 3.704314462810865*^9, 3.7043159161334457`*^9, {
   3.704318336346962*^9, 3.704318360278769*^9}, 3.705363897766821*^9, 
   3.7054078131480007`*^9, 
   3.710853191477777*^9},ExpressionUUID->"952880d3-1ebd-4242-98e4-\
9e94a1cb65fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"DisphGStyled", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{"DisphG", ",", 
       RowBox[{"EdgeStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Gray", ",", 
           RowBox[{"Opacity", "[", "1", "]"}]}], "}"}], "]"}]}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "0.4"}], ",", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<CircularMultipartiteEmbedding\>\""}]}], 
      "]"}]}], ";"}], "*)"}], "\n"}]], "Input",
 CellChangeTimes->{{3.704309816143503*^9, 3.704309816156272*^9}, {
  3.704312711160088*^9, 3.7043127383596087`*^9}, {3.70431978749557*^9, 
  3.7043197897190247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", "AllStates", "]"}]], "Input",
 CellChangeTimes->{{3.704198858756715*^9, 3.704198863588307*^9}, {
  3.704199089436517*^9, 
  3.704199090454563*^9}},ExpressionUUID->"43d47ebd-58c9-4b7b-a529-\
373b40abea10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"62", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "152"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "152"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "136"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "104"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "136"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "152"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", "216"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", "168"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "168"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "104"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.704198864045128*^9, 3.704198907268605*^9, 
  3.704204635053061*^9, 3.7042966869800053`*^9, 
  3.710853195611987*^9},ExpressionUUID->"fd639d32-2fb4-4548-9e4b-\
019e2a767789"]
}, Open  ]],

Cell["\<\
Each embeddable tree state appears a multiple of 8 times, since there 8 \
automorphisms for J90:\
\>", "Text",
 CellChangeTimes->{{3.7041990937651176`*^9, 3.704199102946364*^9}, {
  3.704208509963163*^9, 3.704208560839204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphAutomorphismGroup", "[", "DisphG", "]"}], "//", 
  "GroupOrder"}]], "Input",
 CellChangeTimes->{{3.704200823390452*^9, 3.704200860542225*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.7042008512803717`*^9, 3.704200861134244*^9}, 
   3.704286491872653*^9, 3.704296690181798*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis for state 13 (6 non-trivial embeddings)", "Section",
 CellChangeTimes->{{3.704299148608712*^9, 3.704299172151288*^9}}],

Cell["\<\
We pick state 13 to plot all embeddings (6 possibilities up to trivial \
symmetries):\
\>", "Text",
 CellChangeTimes->{{3.704208568640419*^9, 3.704208594094472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"State1", "=", "13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"State1ID", "=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"AllStates", ",", "State1"}], "]"}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FigStateDir", "=", 
   RowBox[{"FigDir", "<>", "\"\<AllJohnsonEmbeddings_State\>\"", "<>", 
    RowBox[{"ToString", "[", "State1", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateDirectory", "[", "FigStateDir", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70419910659909*^9, 3.704199160568605*^9}, {
  3.704200897364407*^9, 3.7042008979469748`*^9}, {3.704201042657872*^9, 
  3.704201049662767*^9}, {3.704201167245185*^9, 3.704201167564796*^9}, {
  3.7042988852063293`*^9, 3.704298896269278*^9}, {3.704298926439455*^9, 
  3.7042989494026423`*^9}, {3.704298980907827*^9, 
  3.704299008423717*^9}},ExpressionUUID->"aed92234-fa55-45a0-8592-\
6f0a41bdce04"],

Cell[BoxData[
 TemplateBox[{
  "CreateDirectory","filex",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/norbert/Dropbox \
(MIT)/StasPacking/figure_data/AllJohnsonEmbeddings_State13\\\\\\\"\\\"}]\\) \
already exists.\"",2,61,1,21260508651014171280,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704298966892091*^9, 3.7042990092606277`*^9, 
  3.7043002048102283`*^9, 3.704300573411735*^9, 3.7043029205024147`*^9, 
  3.704309187397809*^9, 3.7043127434421377`*^9, 3.7043144238729877`*^9, 
  3.704314466988933*^9, 3.70431539311058*^9, 3.704317040855056*^9, 
  3.704318587313023*^9, 3.705364512208514*^9, 3.705409260130554*^9, 
  3.7108532175293713`*^9},ExpressionUUID->"2f01868a-3e17-46de-ac45-\
46cbdc6d9674"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateGraphs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "State1ID", "]"}], "/", "8"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StatePlots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "State1ID", "]"}], "/", "8"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keys", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Fix", " ", "position", " ", "of", " ", "first", " ", "node", " ", "to", 
    " ", "filter", " ", "trivial", " ", "symmetries", " ", "of", " ", "J90"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosV1", "=", 
   RowBox[{"AllOrigCoords", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"State1ID", "[", 
       RowBox[{"[", 
        RowBox[{"1", "+", "24"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ct", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"s", "=", "1"}], ",", 
    RowBox[{"s", "\[LessEqual]", 
     RowBox[{"Length", "[", "State1ID", "]"}]}], ",", 
    RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"X1", "=", 
      RowBox[{"AllOrigCoords", "[", 
       RowBox[{"[", 
        RowBox[{"State1ID", "[", 
         RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"X1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "PosV1"}], ",", 
       RowBox[{"Continue", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Construct", " ", "permutation", " ", 
       RowBox[{"maps", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mapvals", "=", 
      RowBox[{"AllMaps", "[", 
       RowBox[{"[", 
        RowBox[{"State1ID", "[", 
         RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"map", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"keys", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
         RowBox[{"mapvals", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"inv", "=", 
      RowBox[{"Apply", "[", 
       RowBox[{"Normal", ",", 
        RowBox[{"GroupBy", "[", 
         RowBox[{
          RowBox[{"Normal", "[", "map", "]"}], ",", 
          RowBox[{"Last", "\[Rule]", "First"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"MyVertexLabels", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", "inv", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", "1.25"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MyVertexStyles", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
         RowBox[{"Directive", "[", "35", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GM", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"VertexReplace", "[", 
        RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StateGraphs", "[", 
       RowBox[{"[", "ct", "]"}], "]"}], "=", 
      RowBox[{"Show", "[", 
       RowBox[{"HighlightGraph", "[", 
        RowBox[{"DisphGStyled", ",", 
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{"GM", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "[", "Red", "]"}], ",", 
              RowBox[{"AbsoluteThickness", "[", "7", "]"}]}], "}"}]}], "]"}], 
          "}"}], ",", 
         RowBox[{"VertexLabels", "\[Rule]", "MyVertexLabels"}], ",", 
         RowBox[{"VertexLabelStyle", "\[Rule]", "MyVertexStyles"}], ",", 
         RowBox[{"VertexShapeFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pos", ",", "v", ",", "size"}], "}"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Disk", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"size", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"MyColors", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"GD", "[", 
                    RowBox[{"[", 
                    RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
                    "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"MyColors", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"GD", "[", 
                    RowBox[{"[", 
                    RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
                   "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Now", " ", "the", " ", "3", "d", " ", "plots", " ", "of", " ", "the", 
       " ", 
       RowBox[{"embeddings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"CoordRule1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "\[Rule]", 
         RowBox[{"X1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StatePlots", "[", 
       RowBox[{"[", "ct", "]"}], "]"}], "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"GraphPlot3D", "[", 
         RowBox[{"GRC", ",", " ", 
          RowBox[{"VertexCoordinateRules", "\[Rule]", "CoordRule1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"VertexRenderingFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"MyColors", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"GD", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], "+", "1"}], "]"}], "]"}],
                 "]"}], ",", 
               RowBox[{"Sphere", "[", 
                RowBox[{"#1", ",", "0.17"}], "]"}]}], "}"}], "&"}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeRenderingFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0.0", ",", "0.0"}], "]"}], ",", 
               RowBox[{"Cylinder", "[", 
                RowBox[{"#1", ",", ".035"}], "]"}]}], "}"}], "&"}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", " ", 
          RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], ",", "J90Plot", " ",
         ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "1.985765579012083`", ",", "2.621257213134179`", ",", 
           "0.7973366213857535`"}], "}"}]}], ",", 
        RowBox[{"ViewVertical", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", 
           ",", 
           RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704199205012932*^9, 3.704199208416711*^9}, {
   3.704199251654377*^9, 3.7041992610140963`*^9}, {3.7041995218266163`*^9, 
   3.704199544568347*^9}, {3.704199890323412*^9, 3.704199916709132*^9}, {
   3.7041999508564787`*^9, 3.7041999594762287`*^9}, {3.704200047481669*^9, 
   3.704200090762869*^9}, {3.704200288492363*^9, 3.704200297634857*^9}, {
   3.704200337798724*^9, 3.704200340820797*^9}, {3.704200457360559*^9, 
   3.704200550371785*^9}, {3.7042010010248547`*^9, 3.704201021753728*^9}, {
   3.7042011240224*^9, 3.7042011318782663`*^9}, {3.7042018939144278`*^9, 
   3.704201923240047*^9}, {3.70420240123553*^9, 3.7042024969267387`*^9}, {
   3.7042025365247517`*^9, 3.704202568625383*^9}, {3.704203167841963*^9, 
   3.704203232338599*^9}, {3.704203515829853*^9, 3.7042035275092363`*^9}, 
   3.704203571969656*^9, {3.704203668247652*^9, 3.7042038498545017`*^9}, {
   3.704203905961445*^9, 3.7042039267833138`*^9}, {3.704203967272835*^9, 
   3.70420400889058*^9}, {3.7042040607107058`*^9, 3.70420406357281*^9}, {
   3.7042041055606823`*^9, 3.704204105704253*^9}, {3.7042046815934553`*^9, 
   3.7042047123462353`*^9}, {3.704204755095811*^9, 3.7042047568672447`*^9}, {
   3.704204840214006*^9, 3.704204887209441*^9}, {3.704207537331315*^9, 
   3.704207644009904*^9}, 3.70420787923297*^9, {3.704207910533877*^9, 
   3.704207929610517*^9}, {3.704295019550067*^9, 3.704295107419385*^9}, {
   3.704295149160989*^9, 3.704295210208132*^9}, {3.704295387295418*^9, 
   3.704295388751317*^9}, {3.704295814307066*^9, 3.704295818826783*^9}, {
   3.704296718730685*^9, 3.704296739687275*^9}, {3.7042974162988377`*^9, 
   3.7042974163973513`*^9}, {3.7042974513726473`*^9, 3.704297451506071*^9}, {
   3.7042974943703938`*^9, 3.704297494496306*^9}, {3.7043002350121813`*^9, 
   3.70430026825004*^9}, {3.704300327332613*^9, 3.704300349501431*^9}, {
   3.704314132729086*^9, 3.704314132925351*^9}, 3.704317037653233*^9, 
   3.705364518644004*^9, {3.705364570167557*^9, 
   3.705364570259701*^9}},ExpressionUUID->"7e6751f1-c5ce-4e64-9ef0-\
fdc3ee5ff627"],

Cell["\<\
Repeat the same with ALL isomorphisms (to fix the mirroring issues of above \
states 1 and 2):\
\>", "Text",
 CellChangeTimes->{{3.710853374305655*^9, 3.7108533986843433`*^9}, {
  3.710864861836413*^9, 
  3.710864868388145*^9}},ExpressionUUID->"7d37d2a6-7a65-4ef4-9a62-\
5958b61db1af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateGraphs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "State1ID", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StatePlots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "State1ID", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keys", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Fix", " ", "position", " ", "of", " ", "first", " ", "node", " ", "to", 
    " ", "filter", " ", "trivial", " ", "symmetries", " ", "of", " ", "J90"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosV1", "=", 
   RowBox[{"AllOrigCoords", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"State1ID", "[", 
       RowBox[{"[", 
        RowBox[{"1", "+", "24"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ct", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"s", "=", "1"}], ",", 
    RowBox[{"s", "\[LessEqual]", 
     RowBox[{"Length", "[", "State1ID", "]"}]}], ",", 
    RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"X1", "=", 
      RowBox[{"AllOrigCoords", "[", 
       RowBox[{"[", 
        RowBox[{"State1ID", "[", 
         RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Construct", " ", "permutation", " ", 
       RowBox[{"maps", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mapvals", "=", 
      RowBox[{"AllMaps", "[", 
       RowBox[{"[", 
        RowBox[{"State1ID", "[", 
         RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"map", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"keys", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
         RowBox[{"mapvals", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"inv", "=", 
      RowBox[{"Apply", "[", 
       RowBox[{"Normal", ",", 
        RowBox[{"GroupBy", "[", 
         RowBox[{
          RowBox[{"Normal", "[", "map", "]"}], ",", 
          RowBox[{"Last", "\[Rule]", "First"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"MyVertexLabels", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", "inv", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", "1.25"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MyVertexStyles", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
         RowBox[{"Directive", "[", "35", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GM", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"VertexReplace", "[", 
        RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StateGraphs", "[", 
       RowBox[{"[", "ct", "]"}], "]"}], "=", 
      RowBox[{"Show", "[", 
       RowBox[{"HighlightGraph", "[", 
        RowBox[{"DisphGStyled", ",", 
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{"GM", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "[", "Red", "]"}], ",", 
              RowBox[{"AbsoluteThickness", "[", "7", "]"}]}], "}"}]}], "]"}], 
          "}"}], ",", 
         RowBox[{"VertexLabels", "\[Rule]", "MyVertexLabels"}], ",", 
         RowBox[{"VertexLabelStyle", "\[Rule]", "MyVertexStyles"}], ",", 
         RowBox[{"VertexShapeFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pos", ",", "v", ",", "size"}], "}"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Disk", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"size", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"MyColors", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"GD", "[", 
                    RowBox[{"[", 
                    RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
                    "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"MyColors", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"GD", "[", 
                    RowBox[{"[", 
                    RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
                   "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Now", " ", "the", " ", "3", "d", " ", "plots", " ", "of", " ", "the", 
       " ", 
       RowBox[{"embeddings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"CoordRule1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "\[Rule]", 
         RowBox[{"X1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StatePlots", "[", 
       RowBox[{"[", "ct", "]"}], "]"}], "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"GraphPlot3D", "[", 
         RowBox[{"GRC", ",", " ", 
          RowBox[{"VertexCoordinateRules", "\[Rule]", "CoordRule1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"VertexRenderingFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"MyColors", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"GD", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], "+", "1"}], "]"}], "]"}],
                 "]"}], ",", 
               RowBox[{"Sphere", "[", 
                RowBox[{"#1", ",", "0.17"}], "]"}]}], "}"}], "&"}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeRenderingFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0.0", ",", "0.0"}], "]"}], ",", 
               RowBox[{"Cylinder", "[", 
                RowBox[{"#1", ",", ".035"}], "]"}]}], "}"}], "&"}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", " ", 
          RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], ",", "J90Plot", " ",
         ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "1.985765579012083`", ",", "2.621257213134179`", ",", 
           "0.7973366213857535`"}], "}"}]}], ",", 
        RowBox[{"ViewVertical", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", 
           ",", 
           RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704199205012932*^9, 3.704199208416711*^9}, {
   3.704199251654377*^9, 3.7041992610140963`*^9}, {3.7041995218266163`*^9, 
   3.704199544568347*^9}, {3.704199890323412*^9, 3.704199916709132*^9}, {
   3.7041999508564787`*^9, 3.7041999594762287`*^9}, {3.704200047481669*^9, 
   3.704200090762869*^9}, {3.704200288492363*^9, 3.704200297634857*^9}, {
   3.704200337798724*^9, 3.704200340820797*^9}, {3.704200457360559*^9, 
   3.704200550371785*^9}, {3.7042010010248547`*^9, 3.704201021753728*^9}, {
   3.7042011240224*^9, 3.7042011318782663`*^9}, {3.7042018939144278`*^9, 
   3.704201923240047*^9}, {3.70420240123553*^9, 3.7042024969267387`*^9}, {
   3.7042025365247517`*^9, 3.704202568625383*^9}, {3.704203167841963*^9, 
   3.704203232338599*^9}, {3.704203515829853*^9, 3.7042035275092363`*^9}, 
   3.704203571969656*^9, {3.704203668247652*^9, 3.7042038498545017`*^9}, {
   3.704203905961445*^9, 3.7042039267833138`*^9}, {3.704203967272835*^9, 
   3.70420400889058*^9}, {3.7042040607107058`*^9, 3.70420406357281*^9}, {
   3.7042041055606823`*^9, 3.704204105704253*^9}, {3.7042046815934553`*^9, 
   3.7042047123462353`*^9}, {3.704204755095811*^9, 3.7042047568672447`*^9}, {
   3.704204840214006*^9, 3.704204887209441*^9}, {3.704207537331315*^9, 
   3.704207644009904*^9}, 3.70420787923297*^9, {3.704207910533877*^9, 
   3.704207929610517*^9}, {3.704295019550067*^9, 3.704295107419385*^9}, {
   3.704295149160989*^9, 3.704295210208132*^9}, {3.704295387295418*^9, 
   3.704295388751317*^9}, {3.704295814307066*^9, 3.704295818826783*^9}, {
   3.704296718730685*^9, 3.704296739687275*^9}, {3.7042974162988377`*^9, 
   3.7042974163973513`*^9}, {3.7042974513726473`*^9, 3.704297451506071*^9}, {
   3.7042974943703938`*^9, 3.704297494496306*^9}, {3.7043002350121813`*^9, 
   3.70430026825004*^9}, {3.704300327332613*^9, 3.704300349501431*^9}, {
   3.704314132729086*^9, 3.704314132925351*^9}, 3.704317037653233*^9, 
   3.705364518644004*^9, {3.705364570167557*^9, 3.705364570259701*^9}, {
   3.710853404642521*^9, 
   3.710853418590269*^9}},ExpressionUUID->"fdb4d310-50a5-405e-a927-\
f6f78dbfe03a"],

Cell["\<\
The states that correspond to states 1 and 2 with correct orientation are s=8 \
(->state 1) and s=13 (->state 2). Use the routine below to mirror other \
states and find which one correspond to state 1 and state 2. Then we use the \
original, nonmirrored versions (i.e. mirrored version of state 1 and 2) for \
the paper.\
\>", "Text",
 CellChangeTimes->{{3.710863115849614*^9, 3.7108631217103357`*^9}, {
  3.710864400178603*^9, 3.710864400265375*^9}, {3.710864852551015*^9, 
  3.7108649275270557`*^9}, {3.71086512989734*^9, 3.7108651832197638`*^9}, {
  3.7108654092160063`*^9, 3.710865409494009*^9}, {3.710865493214094*^9, 
  3.71086549330166*^9}},ExpressionUUID->"3bf97c34-a165-4e4a-92d5-\
f45746ae05ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", "13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Trafo", "=", 
   RowBox[{"ReflectionTransform", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X1", "=", 
    RowBox[{"Trafo", "[", 
     RowBox[{"AllOrigCoords", "[", 
      RowBox[{"[", 
       RowBox[{"State1ID", "[", 
        RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Construct", " ", "permutation", " ", 
    RowBox[{"maps", ":"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapvals", "=", 
    RowBox[{"AllMaps", "[", 
     RowBox[{"[", 
      RowBox[{"State1ID", "[", 
       RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"map", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"keys", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{"mapvals", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"inv", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Normal", ",", 
     RowBox[{"GroupBy", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "map", "]"}], ",", 
       RowBox[{"Last", "\[Rule]", "First"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyVertexLabels", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Keys", "[", "inv", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", "inv", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.25", ",", "1.25"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyVertexStyles", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Keys", "[", "inv", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
      RowBox[{"Directive", "[", "35", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GM", "=", 
    RowBox[{"Graph", "[", 
     RowBox[{"VertexReplace", "[", 
      RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Now", " ", "the", " ", "3", "d", " ", "plots", " ", "of", " ", "the", " ", 
    RowBox[{"embeddings", ":"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoordRule1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"X1", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StatePlotsMirror", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"GraphPlot3D", "[", 
      RowBox[{"GRC", ",", " ", 
       RowBox[{"VertexCoordinateRules", "\[Rule]", "CoordRule1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"VertexRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"MyColors", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"GD", "[", 
                 RowBox[{"[", "#2", "]"}], "]"}], "+", "1"}], "]"}], "]"}], 
             "]"}], ",", 
            RowBox[{"Sphere", "[", 
             RowBox[{"#1", ",", "0.17"}], "]"}]}], "}"}], "&"}], ")"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"EdgeRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0.0", ",", "0.0"}], "]"}], ",", 
            RowBox[{"Cylinder", "[", 
             RowBox[{"#1", ",", ".035"}], "]"}]}], "}"}], "&"}], ")"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", " ", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], ",", "J90PlotMirrored",
      " ", ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "1.985765579012083`", ",", "2.621257213134179`", ",", 
        "0.7973366213857535`"}], "}"}]}], ",", 
     RowBox[{"ViewVertical", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", ",", 
        
        RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7108631235129833`*^9, 3.7108632336216297`*^9}, {
   3.710863267747759*^9, 3.710863268830904*^9}, {3.710863305949905*^9, 
   3.710863314496398*^9}, {3.710863458920145*^9, 3.710863462084347*^9}, {
   3.710863627966091*^9, 3.71086362816428*^9}, {3.7108646986366367`*^9, 
   3.710864747694599*^9}, {3.710864778511137*^9, 3.710864790517482*^9}, {
   3.710865233277885*^9, 3.710865249004513*^9}, 3.7108652865423403`*^9, {
   3.7108653318453913`*^9, 3.7108653582385283`*^9}, {3.710865392507759*^9, 
   3.7108654473430777`*^9}},ExpressionUUID->"0bcd47f3-43a6-4a6c-bfb5-\
db52008ee9d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"StatePlotsMirror", ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.025241972077752875`", ",", "0.49443479705260907`", ",", 
      RowBox[{"-", "3.347371666592937"}]}], "}"}]}], ",", 
   RowBox[{"ViewVertical", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6857193448876152"}], ",", "0.538851444736108", ",", 
      RowBox[{"-", "0.5938204904174776"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710863678633258*^9, 3.710863682576111*^9}, {
  3.710864694429639*^9, 
  3.7108646961600533`*^9}},ExpressionUUID->"a976dc6a-c75c-40d9-89e0-\
0a2478ee261a"],

Cell[BoxData[
 Graphics3DBox[{
   TagBox[{{
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}, {-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}, {-0.6665847017420747, 0.8492341214602188, 
        0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}, {0.6568605152355149, -0.13880239517520027`, 
        0.7759358573509268}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}, {0.29798459888735945`, 0.7939763540871261, 
        0.8095658486926417}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}, {-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}, {-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}, {0.010482453735345468`, -0.901366982255388, 
        0.7496791952436982}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 0.8492341214602188, 
        0.5515878584933748}, {-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 0.8492341214602188, 
        0.5515878584933748}, {0.04411941125426262, 
        1.0166215422788532`, -0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 0.8492341214602188, 
        0.5515878584933748}, {-1.17114430798631, 
        0.29368801011732865`, -0.10931162094238263`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {
        0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {-0.4604401949899723, 
        0.46107543093596254`, -0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.6568605152355149, -0.13880239517520027`, 
        0.7759358573509268}, {-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.6568605152355149, -0.13880239517520027`, 
        0.7759358573509268}, {0.8875880204815091, 0.5120753422939326, 
        0.05266459402297767}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {0.8034989275767017, -0.8969007441994632, 
        0.14049521817657964`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 
        1.0166215422788532`, -0.13169913473990377`}, {-0.6665847017420747, 
        0.8492341214602188, 0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 
        1.0166215422788532`, -0.13169913473990377`}, {0.5303052558386957, 
        0.5650396572477727, -0.8798272120504372}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, \
{-0.8387701090062462, -0.4576492789900169, -0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, {
        1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.29798459888735945`, 0.7939763540871261, 
        0.8095658486926417}, {-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.010482453735345468`, -0.901366982255388, 
        0.7496791952436982}, {-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-1.17114430798631, 
        0.29368801011732865`, -0.10931162094238263`}, {-0.6665847017420747, 
        0.8492341214602188, 0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 
        0.46107543093596254`, -0.7925986141756621}, {-0.8387701090062462, \
-0.4576492789900169, -0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.8875880204815091, 0.5120753422939326, 
        0.05266459402297767}, {0.6568605152355149, -0.13880239517520027`, 
        0.7759358573509268}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.8034989275767017, -0.8969007441994632, 
        0.14049521817657964`}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.5303052558386957, 
        0.5650396572477727, -0.8798272120504372}, {0.04411941125426262, 
        1.0166215422788532`, -0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}, {
        0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}}, 
        0.035]}}, {
      {RGBColor[0.51953125, 0.5546875, 0.55078125], 
       SphereBox[{-0.30987968899341745`, 0.018003654026792444`, 
        0.9779884259066806}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.8144392952376528, -0.5375424573160974, 
        0.31708894647092317`}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.6665847017420747, 0.8492341214602188, 
        0.5515878584933748}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.6568605152355149, -0.13880239517520027`, 
        0.7759358573509268}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.04411941125426262, 
        1.0166215422788532`, -0.13169913473990377`}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, 
        0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.29798459888735945`, 0.7939763540871261, 
        0.8095658486926417}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.010482453735345468`, -0.901366982255388, 
        0.7496791952436982}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-1.17114430798631, 
        0.29368801011732865`, -0.10931162094238263`}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{-0.4604401949899723, 
        0.46107543093596254`, -0.7925986141756621}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.8875880204815091, 0.5120753422939326, 
        0.05266459402297767}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{0.8034989275767017, -0.8969007441994632, 
        0.14049521817657964`}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{0.5303052558386957, 
        0.5650396572477727, -0.8798272120504372}, 0.17]}, 
      {RGBColor[0.984375, 0.71484375, 0.08203125], 
       SphereBox[{
        1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}, 
        0.17]}}},
    Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA4Pd6nhHV079yqAPFjG+SP8FXJGKu
S+8/re8z/+IP6r+qSkw9jDPhv2MBwW8vS9Q/QuC/cKlU5b+wNEoJ7SzrP+kw
o5SbpuE/8WlhaTTX6r/hNJMzIErdv99thtnHveW/QgzfVwAF5T9iJfHhRsTB
v+G1Y2931Og/UfAxeTIFvr8EU6QYibfvv1uTngyIeM6/2mLpyNGWpj+28kfz
FETwP/tHT2qE28C/j6evNM0LvT8J+6W5GMfVv4c+rhosw+6/a7S7/i0S0z+s
P1MZQWjpP/n8gqP25+k/KBfNH9N3hT80Zc+R/9fsv2kGQjlf/ec//ylb0AG9
8r9/mavLyMvSPzUxBa3Y+7u/F7vPJtp33b/v+jaGQoLdPxep18T3XOm/QUMJ
/h5n7D+8sQfU62LgP5a7+Ina9qo/JgQKYkO26T8+CIMwabPsv6UJqE+/+8E/
6ytXukL44D+8TxoMzhTiP0dmvGWLJ+y/8spGITCM8D8KmymOqn3Pv1+GJwgc
puK/tmbQeA==
      "]]& ], {
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.010482453735345468`, -0.901366982255388, 
      0.7496791952436982}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {0.8034989275767017, -0.8969007441994632, 
      0.14049521817657964`}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{
      1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}, {
      0.8034989275767017, -0.8969007441994632, 
      0.14049521817657964`}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {
      0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.5303052558386957, 
      0.5650396572477727, -0.8798272120504372}, {
      1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}, {
      0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.010482453735345468`, -0.901366982255388, 
      0.7496791952436982}, {0.8034989275767017, -0.8969007441994632, 
      0.14049521817657964`}, {0.6568605152355149, -0.13880239517520027`, 
      0.7759358573509268}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
      0.05266459402297767}, {0.6568605152355149, -0.13880239517520027`, 
      0.7759358573509268}, {0.8034989275767017, -0.8969007441994632, 
      0.14049521817657964`}, {
      1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.5303052558386957, 
      0.5650396572477727, -0.8798272120504372}, {0.8875880204815091, 
      0.5120753422939326, 0.05266459402297767}, {
      1.0342255878319375`, -0.24602252904443161`, -0.5827770385041723}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
      0.05266459402297767}, {0.29798459888735945`, 0.7939763540871261, 
      0.8095658486926417}, {0.6568605152355149, -0.13880239517520027`, 
      0.7759358573509268}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.30987968899341745`, 0.018003654026792444`, 
      0.9779884259066806}, {0.010482453735345468`, -0.901366982255388, 
      0.7496791952436982}, {0.6568605152355149, -0.13880239517520027`, 
      0.7759358573509268}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 0.7939763540871261, 
      0.8095658486926417}, {-0.30987968899341745`, 0.018003654026792444`, 
      0.9779884259066806}, {0.6568605152355149, -0.13880239517520027`, 
      0.7759358573509268}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.6665847017420747, 0.8492341214602188, 
      0.5515878584933748}, {-0.30987968899341745`, 0.018003654026792444`, 
      0.9779884259066806}, {0.29798459888735945`, 0.7939763540871261, 
      0.8095658486926417}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{-0.6665847017420747, 0.8492341214602188, 
      0.5515878584933748}, {-1.17114430798631, 
      0.29368801011732865`, -0.10931162094238263`}, {-0.8144392952376528, \
-0.5375424573160974, 0.31708894647092317`}, {-0.30987968899341745`, 
      0.018003654026792444`, 0.9779884259066806}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, 
      0.31708894647092317`}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {0.010482453735345468`, -0.901366982255388, 
      0.7496791952436982}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, 
      0.31708894647092317`}, {0.010482453735345468`, -0.901366982255388, 
      0.7496791952436982}, {-0.30987968899341745`, 0.018003654026792444`, 
      0.9779884259066806}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {-0.8144392952376528, -0.5375424573160974, 
      0.31708894647092317`}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-1.17114430798631, 
      0.29368801011732865`, -0.10931162094238263`}, {-0.8387701090062462, \
-0.4576492789900169, -0.6794165848290808}, {-0.8144392952376528, \
-0.5375424573160974, 0.31708894647092317`}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{0.04411941125426262, 
      1.0166215422788532`, -0.13169913473990377`}, {-0.4604401949899723, 
      0.46107543093596254`, -0.7925986141756621}, {-1.17114430798631, 
      0.29368801011732865`, -0.10931162094238263`}, {-0.6665847017420747, 
      0.8492341214602188, 0.5515878584933748}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.04411941125426262, 
      1.0166215422788532`, -0.13169913473990377`}, {-0.6665847017420747, 
      0.8492341214602188, 0.5515878584933748}, {0.29798459888735945`, 
      0.7939763540871261, 0.8095658486926417}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
      0.05266459402297767}, {0.04411941125426262, 
      1.0166215422788532`, -0.13169913473990377`}, {0.29798459888735945`, 
      0.7939763540871261, 0.8095658486926417}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.8875880204815091, 0.5120753422939326, 
      0.05266459402297767}, {0.5303052558386957, 
      0.5650396572477727, -0.8798272120504372}, {0.04411941125426262, 
      1.0166215422788532`, -0.13169913473990377`}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.5303052558386957, 
      0.5650396572477727, -0.8798272120504372}, {-0.4604401949899723, 
      0.46107543093596254`, -0.7925986141756621}, {0.04411941125426262, 
      1.0166215422788532`, -0.13169913473990377`}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, \
{-0.4604401949899723, 0.46107543093596254`, -0.7925986141756621}, {
      0.5303052558386957, 0.5650396572477727, -0.8798272120504372}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.11726680239547817`, -0.9911542397772739, \
-0.2380533277147617}, {-0.8387701090062462, -0.4576492789900169, \
-0.6794165848290808}, {
      0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.11346132789881679`, -0.34027689103815867`, -0.9613247414690286}, \
{-0.8387701090062462, -0.4576492789900169, -0.6794165848290808}, \
{-0.4604401949899723, 0.46107543093596254`, -0.7925986141756621}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.4604401949899723, 
      0.46107543093596254`, -0.7925986141756621}, {-0.8387701090062462, \
-0.4576492789900169, -0.6794165848290808}, {-1.17114430798631, 
      0.29368801011732865`, -0.10931162094238263`}},
      VertexColors->Automatic,
      VertexNormals->Automatic]}}},
  AspectRatio->Automatic,
  Boxed->False,
  ImageSize->{392.4858658929474, 396.45462470758054`},
  Lighting->"Neutral",
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{0.6528373807376823, -1.033705051331929, 3.155195274648215},
  ViewVertical->{-0.49647455908938104`, 0.28818794447402724`, 
   0.9228073954966622}]], "Output",
 CellChangeTimes->{
  3.710863475483716*^9, {3.7108636468170023`*^9, 3.710863683188302*^9}, {
   3.710864705987689*^9, 3.710864749942441*^9}, 3.710864793097416*^9, {
   3.7108652383891497`*^9, 3.710865289898356*^9}, {3.710865335588986*^9, 
   3.710865360498179*^9}, {3.710865394389407*^9, 
   3.71086544880017*^9}},ExpressionUUID->"52cd5a96-b6f6-40b6-8686-\
eed741b69732"]
}, Open  ]],

Cell["\<\
After identifying the correct states to replace state 1,2, we plot them in \
their original form:\
\>", "Text",
 CellChangeTimes->{{3.710865195109805*^9, 
  3.7108652211216917`*^9}},ExpressionUUID->"cd53f7fd-8d36-4ea1-93d9-\
5a1915c7f7d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StatePlots", "[", 
  RowBox[{"[", "8", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.710864417002891*^9, 
  3.710864418969055*^9}},ExpressionUUID->"4bebdfa7-99c5-4298-9e6d-\
1f29709431c5"],

Cell[BoxData[
 Graphics3DBox[{
   TagBox[{{
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {0.5303052558386957, 0.5650396572477727, 
        0.8798272120504372}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, {-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, {-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, {0.04411941125426262, 
        1.0166215422788532`, 0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, {-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, {-1.17114430798631, 
        0.29368801011732865`, 0.10931162094238263`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.5303052558386957, 0.5650396572477727, 
        0.8798272120504372}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.5303052558386957, 0.5650396572477727, 
        0.8798272120504372}, {1.0342255878319375`, -0.24602252904443161`, 
        0.5827770385041723}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, {0.04411941125426262, 
        1.0166215422788532`, 0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, {
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}, {-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}, {
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}, {-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}, {
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}, {0.04411941125426262, 
        1.0166215422788532`, 0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, {-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{1.0342255878319375`, -0.24602252904443161`, 
        0.5827770385041723}, {0.5303052558386957, 0.5650396572477727, 
        0.8798272120504372}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
        0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, \
{-0.11726680239547817`, -0.9911542397772739, 0.2380533277147617}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}}, 
        0.035]}}, {
      {RGBColor[0.51953125, 0.5546875, 0.55078125], 
       SphereBox[{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.5303052558386957, 0.5650396572477727, 0.8798272120504372},
         0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{1.0342255878319375`, -0.24602252904443161`, 
        0.5827770385041723}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, 
        0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, 
        0.17]}, 
      {RGBColor[0.984375, 0.71484375, 0.08203125], 
       SphereBox[{
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, 
        0.17]}}},
    Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAF7vPJtp33b/v+jaGQoLdPxep18T3
XOk/2mLpyNGWpj+28kfzFETwP/tHT2qE28A/8WlhaTTX6r/hNJMzIErdv99t
htnHveU/QuC/cKlU5b+wNEoJ7SzrP+kwo5SbpuG/6ytXukL44D+8TxoMzhTi
P0dmvGWLJ+w/a7S7/i0S0z+sP1MZQWjpP/n8gqP25+m/UfAxeTIFvr8EU6QY
ibfvv1uTngyIeM4/4Pd6nhHV079yqAPFjG+SP8FXJGKuS++/j6evNM0LvT8J
+6W5GMfVv4c+rhosw+4/QUMJ/h5n7D+8sQfU62LgP5a7+Ina9qq/re8z/+IP
6r+qSkw9jDPhv2MBwW8vS9S//ylb0AG98r9/mavLyMvSPzUxBa3Y+7s/8spG
ITCM8D8KmymOqn3Pv1+GJwgcpuI/QgzfVwAF5T9iJfHhRsTBv+G1Y2931Oi/
JgQKYkO26T8+CIMwabPsv6UJqE+/+8G/KBfNH9N3hT80Zc+R/9fsv2kGQjlf
/ee/PwzQeA==
      "]]& ], {
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, \
{-0.11726680239547817`, -0.9911542397772739, 0.2380533277147617}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}, {-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}, {
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
      1.0342255878319375`, -0.24602252904443161`, 0.5827770385041723}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}, {1.0342255878319375`, -0.24602252904443161`, 
      0.5827770385041723}, {0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{1.0342255878319375`, -0.24602252904443161`, 
      0.5827770385041723}, {
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.8875880204815091, 0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{1.0342255878319375`, -0.24602252904443161`, 
      0.5827770385041723}, {0.8875880204815091, 
      0.5120753422939326, -0.05266459402297767}, {0.5303052558386957, 
      0.5650396572477727, 0.8798272120504372}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}, {
      0.8875880204815091, 0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}, {
      0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 
      0.7939763540871261, -0.8095658486926417}, {-0.30987968899341745`, 
      0.018003654026792444`, -0.9779884259066806}, {-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{-0.30987968899341745`, 
      0.018003654026792444`, -0.9779884259066806}, {-0.8144392952376528, \
-0.5375424573160974, -0.31708894647092317`}, {-1.17114430798631, 
      0.29368801011732865`, 0.10931162094238263`}, {-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}, {-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.30987968899341745`, 
      0.018003654026792444`, -0.9779884259066806}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.8144392952376528, -0.5375424573160974, -0.31708894647092317`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {-1.17114430798631, 0.29368801011732865`, 
      0.10931162094238263`}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}, {-1.17114430798631, 
      0.29368801011732865`, 0.10931162094238263`}, {-0.4604401949899723, 
      0.46107543093596254`, 0.7925986141756621}, {0.04411941125426262, 
      1.0166215422788532`, 0.13169913473990377`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 
      0.7939763540871261, -0.8095658486926417}, {-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}, {0.04411941125426262, 
      1.0166215422788532`, 0.13169913473990377`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 
      0.7939763540871261, -0.8095658486926417}, {0.04411941125426262, 
      1.0166215422788532`, 0.13169913473990377`}, {0.8875880204815091, 
      0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.04411941125426262, 1.0166215422788532`, 
      0.13169913473990377`}, {0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}, {0.8875880204815091, 
      0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.04411941125426262, 1.0166215422788532`, 
      0.13169913473990377`}, {-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}, {0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}, {-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}, {0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-1.17114430798631, 0.29368801011732865`, 
      0.10931162094238263`}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}}]}}},
  AspectRatio->Automatic,
  Boxed->False,
  Lighting->"Neutral",
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{1.985765579012083, 2.621257213134179, 0.7973366213857535},
  ViewVertical->{-0.26056951097442915`, 
   1.06032043655769, -0.018426558909775813`}]], "Output",
 CellChangeTimes->{
  3.710864518989689*^9},ExpressionUUID->"a6ef0282-3bc9-4249-bd5b-\
1a4eb5afa696"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StatePlots", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.710865505103216*^9, 
  3.7108656157288427`*^9}},ExpressionUUID->"579cad4a-7201-4720-bc53-\
f6db2f99fa50"],

Cell[BoxData[
 Graphics3DBox[{
   TagBox[{{
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, {-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, {0.5303052558386957, 0.5650396572477727, 
        0.8798272120504372}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, {-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, {-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, {0.04411941125426262, 
        1.0166215422788532`, 0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, {
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, {-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}, {-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}, {0.04411941125426262, 
        1.0166215422788532`, 0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}, {
        1.0342255878319375`, -0.24602252904443161`, 0.5827770385041723}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
        0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}}, 
        0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, {-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{0.5303052558386957, 0.5650396572477727, 
        0.8798272120504372}, {0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, {-1.17114430798631, 
        0.29368801011732865`, 0.10931162094238263`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}, {0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}, {0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{1.0342255878319375`, -0.24602252904443161`, 
        0.5827770385041723}, {0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.8144392952376528, -0.5375424573160974, -0.31708894647092317`}}, 0.035]}, 
      {RGBColor[1, 0., 0.], 
       CylinderBox[{{
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}}, 
        0.035]}}, {
      {RGBColor[0.51953125, 0.5546875, 0.55078125], 
       SphereBox[{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, 0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, 
        0.17]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.5303052558386957, 0.5650396572477727, 0.8798272120504372},
         0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}, 0.17]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{1.0342255878319375`, -0.24602252904443161`, 
        0.5827770385041723}, 0.17]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, 
        0.17]}, 
      {RGBColor[0.984375, 0.71484375, 0.08203125], 
       SphereBox[{
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, 
        0.17]}}},
    Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAF7vPJtp33b/v+jaGQoLdPxep18T3
XOk/2mLpyNGWpj+28kfzFETwP/tHT2qE28A//ylb0AG98r9/mavLyMvSPzUx
Ba3Y+7s/a7S7/i0S0z+sP1MZQWjpP/n8gqP25+m/j6evNM0LvT8J+6W5GMfV
v4c+rhosw+4/QUMJ/h5n7D+8sQfU62LgP5a7+Ina9qq/re8z/+IP6r+qSkw9
jDPhv2MBwW8vS9S/QgzfVwAF5T9iJfHhRsTBv+G1Y2931Oi/8WlhaTTX6r/h
NJMzIErdv99thtnHveU/6ytXukL44D+8TxoMzhTiP0dmvGWLJ+w/QuC/cKlU
5b+wNEoJ7SzrP+kwo5SbpuG/4Pd6nhHV079yqAPFjG+SP8FXJGKuS++/UfAx
eTIFvr8EU6QYibfvv1uTngyIeM4/8spGITCM8D8KmymOqn3Pv1+GJwgcpuI/
KBfNH9N3hT80Zc+R/9fsv2kGQjlf/ee/JgQKYkO26T8+CIMwabPsv6UJqE+/
+8G/HIrQeA==
      "]]& ], {
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, \
{-0.11726680239547817`, -0.9911542397772739, 0.2380533277147617}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}, {-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}, {
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
      1.0342255878319375`, -0.24602252904443161`, 0.5827770385041723}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}, {1.0342255878319375`, -0.24602252904443161`, 
      0.5827770385041723}, {0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{1.0342255878319375`, -0.24602252904443161`, 
      0.5827770385041723}, {
      0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, {
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.8875880204815091, 0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{1.0342255878319375`, -0.24602252904443161`, 
      0.5827770385041723}, {0.8875880204815091, 
      0.5120753422939326, -0.05266459402297767}, {0.5303052558386957, 
      0.5650396572477727, 0.8798272120504372}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}, {
      0.8875880204815091, 0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, \
{-0.30987968899341745`, 0.018003654026792444`, -0.9779884259066806}, {
      0.29798459888735945`, 0.7939763540871261, -0.8095658486926417}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 
      0.7939763540871261, -0.8095658486926417}, {-0.30987968899341745`, 
      0.018003654026792444`, -0.9779884259066806}, {-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{-0.30987968899341745`, 
      0.018003654026792444`, -0.9779884259066806}, {-0.8144392952376528, \
-0.5375424573160974, -0.31708894647092317`}, {-1.17114430798631, 
      0.29368801011732865`, 0.10931162094238263`}, {-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}, {-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.30987968899341745`, 
      0.018003654026792444`, -0.9779884259066806}, {
      0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, \
{-0.8144392952376528, -0.5375424573160974, -0.31708894647092317`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {-1.17114430798631, 0.29368801011732865`, 
      0.10931162094238263`}}]}, 
    {RGBColor[0.9973856209150327, 0.88, 0.35686274509803917`], Opacity[0.45], 
     EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], Specularity[], 
     Polygon3DBox[{{-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}, {-1.17114430798631, 
      0.29368801011732865`, 0.10931162094238263`}, {-0.4604401949899723, 
      0.46107543093596254`, 0.7925986141756621}, {0.04411941125426262, 
      1.0166215422788532`, 0.13169913473990377`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 
      0.7939763540871261, -0.8095658486926417}, {-0.6665847017420747, 
      0.8492341214602188, -0.5515878584933748}, {0.04411941125426262, 
      1.0166215422788532`, 0.13169913473990377`}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.29798459888735945`, 
      0.7939763540871261, -0.8095658486926417}, {0.04411941125426262, 
      1.0166215422788532`, 0.13169913473990377`}, {0.8875880204815091, 
      0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.04411941125426262, 1.0166215422788532`, 
      0.13169913473990377`}, {0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}, {0.8875880204815091, 
      0.5120753422939326, -0.05266459402297767}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.04411941125426262, 1.0166215422788532`, 
      0.13169913473990377`}, {-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}, {0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.5303052558386957, 0.5650396572477727, 
      0.8798272120504372}, {-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}, {0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {-0.11726680239547817`, -0.9911542397772739, 
      0.2380533277147617}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {0.11346132789881679`, -0.34027689103815867`, 
      0.9613247414690286}}]}, 
    {RGBColor[0.4300653594771242, 0.6235294117647059, 0.5895424836601307], 
     Opacity[0.45], EdgeForm[{Opacity[0.8], AbsoluteThickness[10]}], 
     Specularity[], 
     Polygon3DBox[{{-1.17114430798631, 0.29368801011732865`, 
      0.10931162094238263`}, {-0.8387701090062462, -0.4576492789900169, 
      0.6794165848290808}, {-0.4604401949899723, 0.46107543093596254`, 
      0.7925986141756621}}]}}},
  AspectRatio->Automatic,
  Boxed->False,
  Lighting->"Neutral",
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{1.985765579012083, 2.621257213134179, 0.7973366213857535},
  ViewVertical->{-0.26056951097442915`, 
   1.06032043655769, -0.018426558909775813`}]], "Output",
 CellChangeTimes->{{3.710865506392439*^9, 
  3.710865616295336*^9}},ExpressionUUID->"6279fad3-f9c7-4531-8412-\
d934df0bd686"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.710864516763373*^9, 
  3.710864516779537*^9}},ExpressionUUID->"24f53b31-9f95-4603-9a09-\
b245ed1509ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"p", "=", "1"}], ",", 
    RowBox[{"p", "<=", 
     RowBox[{"Length", "[", "StatePlots", "]"}]}], ",", 
    RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FigStateDir", "<>", "\"\</3DEmbedding_\>\"", "<>", 
        RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<.png\>\""}], ",", 
       RowBox[{"StatePlots", "[", 
        RowBox[{"[", "p", "]"}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}], ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.704208194651087*^9, 3.704208277327272*^9}, {
  3.7042083079359922`*^9, 3.7042083504217567`*^9}, {3.70429688348167*^9, 
  3.7042968838561373`*^9}, {3.704298785587975*^9, 3.704298788139061*^9}, {
  3.704299024337174*^9, 3.704299035127644*^9}, {3.704300581751649*^9, 
  3.7043005818689117`*^9}, {3.704306498800509*^9, 3.704306499340229*^9}, {
  3.7043065364056263`*^9, 3.704306540781349*^9}, {3.70430920924187*^9, 
  3.704309223009416*^9}, {3.7043143475577497`*^9, 
  3.7043143476270523`*^9}},ExpressionUUID->"7e1e5246-b4b7-4e81-a86a-\
404974d46793"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"p", "=", "1"}], ",", 
    RowBox[{"p", "<=", 
     RowBox[{"Length", "[", "StateGraphs", "]"}]}], ",", 
    RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"TR1", " ", "=", " ", 
       RowBox[{"Rasterize", "[", 
        RowBox[{
         RowBox[{"StateGraphs", "[", 
          RowBox[{"[", "p", "]"}], "]"}], ",", " ", 
         RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]}], ";"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TR1", "=", 
      RowBox[{"StateGraphs", "[", 
       RowBox[{"[", "p", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FigStateDir", "<>", "\"\</GraphEmbedding_\>\"", "<>", 
        RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       "TR1", ",", 
       RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.704296870542636*^9, 3.704296903911771*^9}, 
   3.704298796617044*^9, {3.704299031535343*^9, 3.704299038738171*^9}, {
   3.704300585958558*^9, 3.7043005887012873`*^9}, {3.70430075650161*^9, 
   3.7043007773043423`*^9}, {3.704302929796598*^9, 3.704302930500678*^9}, {
   3.7054092717253733`*^9, 
   3.705409273986318*^9}},ExpressionUUID->"14c508f0-4312-47f9-949a-\
0c6594470dbb"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.704300723960526*^9}],

Cell["Pretty plot of the general embedding problem:", "Text",
 CellChangeTimes->{{3.7043200559856977`*^9, 3.704320065948531*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeG", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{"GRC", ",", 
    RowBox[{"VertexStyle", "\[Rule]", "Gray"}], ",", 
    RowBox[{"EdgeStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Opacity", "[", "1", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "]"}]}], 
    ",", 
    RowBox[{"VertexSize", "\[Rule]", "0.5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704320161710517*^9, 3.704320218744178*^9}, {
  3.704323289099804*^9, 3.704323315661861*^9}, {3.7043237208312387`*^9, 
  3.704323761970516*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 4, 8, 11, 14, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 
          30}, {{2}, {3}, {5}, {9}, {1}, {4}, {6}, {10}, {1}, {7}, {11}, {
          2}, {8}, {12}, {1}, {13}, {2}, {14}, {3}, {15}, {4}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {EdgeStyle -> {
         Directive[
          Opacity[1], 
          AbsoluteThickness[3], 
          RGBColor[1, 0, 0]]}, GraphLayout -> {"Dimension" -> 2}, 
       VertexSize -> {0.5}, VertexStyle -> {
         GrayLevel[0.5]}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2.8388748697883446`, 2.5955427380922007`}, {
       1.135549947915338, 1.9466570535691505`}, {2.919985580353726, 
       1.9466570535691505`}, {0.3244428422615251, 1.2977713690461004`}, {
       3.893314107138301, 1.9466570535691505`}, {1.2977713690461004`, 
       1.2977713690461004`}, {2.5955427380922007`, 1.2977713690461004`}, {0., 
       0.6488856845230502}, {4.542199791661352, 1.9466570535691505`}, {
       1.9466570535691505`, 1.2977713690461004`}, {3.244428422615251, 
       1.2977713690461004`}, {0.6488856845230502, 0.6488856845230502}, {
       3.893314107138301, 1.2977713690461004`}, {1.2977713690461004`, 
       0.6488856845230502}, {2.5955427380922007`, 0.6488856845230502}, {0., 
       0.}}, {
        {RGBColor[1, 0, 0], AbsoluteThickness[3], Opacity[1], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{3, 11}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{4, 12}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{5, 13}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{6, 14}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.16222142113076254`]}, 
         {Arrowheads[0.], ArrowBox[{8, 16}, 0.16222142113076254`]}}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.16222142113076254], DiskBox[2, 0.16222142113076254], 
         DiskBox[3, 0.16222142113076254], DiskBox[4, 0.16222142113076254], 
         DiskBox[5, 0.16222142113076254], DiskBox[6, 0.16222142113076254], 
         DiskBox[7, 0.16222142113076254], DiskBox[8, 0.16222142113076254], 
         DiskBox[9, 0.16222142113076254], DiskBox[10, 0.16222142113076254], 
         DiskBox[11, 0.16222142113076254], DiskBox[12, 0.16222142113076254], 
         DiskBox[13, 0.16222142113076254], DiskBox[14, 0.16222142113076254], 
         DiskBox[15, 0.16222142113076254], 
         DiskBox[16, 0.16222142113076254]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.704320162542673*^9, 3.704320219084982*^9}, {
   3.7043232979857817`*^9, 3.704323318616035*^9}, {3.70432372155494*^9, 
   3.704323733270461*^9}, 3.7043237637298107`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FigDir", "<>", "\"\<RCTree.eps\>\""}], ",", "TreeG"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.704323319605942*^9, 3.704323346391096*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"State1ID", "=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"AllStates", ",", "1"}], "]"}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapvals", "=", 
    RowBox[{"AllMaps", "[", 
     RowBox[{"[", 
      RowBox[{"State1ID", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"map", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"keys", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{"mapvals", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GM", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"VertexReplace", "[", 
     RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DisphGStyledS", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"DisphGStyled", ",", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", "1", "]"}], ",", 
         RowBox[{"Lighter", "[", "Gray", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "9", "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Emb", "=", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"DisphGStyledS", ",", "GM", ",", 
     RowBox[{"VertexShapeFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "v", ",", "size"}], "}"}], ",", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Disk", "[", 
           RowBox[{"pos", ",", 
            RowBox[{"size", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Gray"}], "}"}]}], 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704320089224059*^9, 3.70432012040281*^9}, {
   3.704320253492002*^9, 3.704320270176866*^9}, {3.704321070218848*^9, 
   3.704321112220833*^9}, {3.7043212382539663`*^9, 3.704321283512754*^9}, {
   3.7043213162448997`*^9, 3.704321411323286*^9}, {3.7043214676734056`*^9, 
   3.704321489798707*^9}, {3.704323200736453*^9, 3.7043232013427773`*^9}, {
   3.704323674908169*^9, 3.704323679739924*^9}, {3.704324534870967*^9, 
   3.704324670746635*^9}, 3.704324721628397*^9, {3.704324806653472*^9, 
   3.704324840463151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FigDir", "<>", "\"\<J90ExampleEmbedding1.eps\>\""}], ",", 
    "Emb"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7043211144666643`*^9, 3.704321138704528*^9}, 
   3.704324660810709*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"State1ID", "=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"AllStates", ",", "1"}], "]"}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mapvals", "=", 
    RowBox[{"AllMaps", "[", 
     RowBox[{"[", 
      RowBox[{"State1ID", "[", 
       RowBox[{"[", "10", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"map", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"keys", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{"mapvals", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GM", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"VertexReplace", "[", 
     RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DisphGStyledS", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"DisphGStyled", ",", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", "1", "]"}], ",", 
         RowBox[{"Lighter", "[", "Gray", "]"}], ",", 
         RowBox[{"AbsoluteThickness", "[", "9", "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Emb", "=", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"DisphGStyledS", ",", "GM", ",", 
     RowBox[{"VertexShapeFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "v", ",", "size"}], "}"}], ",", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Disk", "[", 
           RowBox[{"pos", ",", 
            RowBox[{"size", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Gray"}], "}"}]}], 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704320089224059*^9, 3.70432012040281*^9}, {
  3.704320253492002*^9, 3.704320270176866*^9}, {3.704321070218848*^9, 
  3.704321112220833*^9}, {3.7043212382539663`*^9, 3.704321283512754*^9}, {
  3.7043213162448997`*^9, 3.704321411323286*^9}, {3.7043214676734056`*^9, 
  3.704321489798707*^9}, {3.704323200736453*^9, 3.7043232013427773`*^9}, {
  3.704323674908169*^9, 3.704323679739924*^9}, {3.704324534870967*^9, 
  3.704324670746635*^9}, {3.704324721628397*^9, 3.7043247325790854`*^9}, {
  3.704324798261941*^9, 3.7043247983714457`*^9}, {3.704324855064329*^9, 
  3.704324858782756*^9}, {3.705364244880274*^9, 
  3.7053642901310377`*^9}},ExpressionUUID->"faead372-5dd2-460f-98b9-\
2a83afb62d9d"],

Cell[CellGroupData[{

Cell[BoxData["Emb"], "Input",
 CellChangeTimes->{{3.704324739318128*^9, 
  3.704324739943803*^9}},ExpressionUUID->"19bfd9d0-c198-4022-be7b-\
977774cc4886"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 4, 9, 14, 18, 23, 28, 33, 38, 43, 48, 53, 58, 63, 67, 72, 
          76}, {{2}, {3}, {4}, {5}, {1}, {3}, {5}, {7}, {10}, {1}, {2}, {6}, {
          7}, {8}, {1}, {6}, {9}, {11}, {1}, {2}, {9}, {10}, {12}, {3}, {4}, {
          8}, {11}, {13}, {2}, {3}, {8}, {10}, {14}, {3}, {6}, {7}, {13}, {
          14}, {4}, {5}, {11}, {12}, {15}, {2}, {5}, {7}, {12}, {16}, {4}, {
          6}, {9}, {13}, {15}, {5}, {9}, {10}, {15}, {16}, {6}, {8}, {11}, {
          14}, {15}, {7}, {8}, {13}, {16}, {9}, {11}, {12}, {13}, {16}, {
          10}, {12}, {14}, {15}}}, Pattern}]}, {EdgeStyle -> {
         Directive[{
           Opacity[1], 
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
           AbsoluteThickness[9]}]}, GraphHighlight -> {
         UndirectedEdge[7, 10], 1, 16, 3, 
         UndirectedEdge[13, 8], 4, 14, 
         UndirectedEdge[11, 15], 11, 5, 10, 
         UndirectedEdge[11, 9], 
         UndirectedEdge[6, 11], 
         UndirectedEdge[1, 5], 6, 
         UndirectedEdge[3, 2], 
         UndirectedEdge[3, 7], 15, 2, 
         UndirectedEdge[15, 16], 
         UndirectedEdge[3, 1], 
         UndirectedEdge[6, 13], 9, 13, 7, 8, 
         UndirectedEdge[7, 14], 
         UndirectedEdge[6, 4], 12, 
         UndirectedEdge[10, 12], 
         UndirectedEdge[3, 6]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> {"TutteEmbedding"}}, 
       VertexCoordinates -> {{
        0.3, -0.5}, {-0.04188830930896484, -0.4136852702402346}, {
        0.2, -0.22}, {0.3, 0.5}, {-0.6, -0.5}, {0.2, 0.22}, {-0.1, -0.21}, {
        0.1, 0.}, {-0.6, 0.5}, {-0.35, -0.27}, {-0.04189085523675898, 
        0.4136784846246805}, {-0.467915525028202, -2.438974377960701*^-6}, \
{-0.1, 0.21}, {-0.09587429250824256, -5.238176569929975*^-6}, {-0.35, 
        0.27}, {-0.2978323195413586, -3.5388866881091996`*^-6}}, 
       VertexShapeFunction -> {
        11 -> Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 2 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 3 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 12 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 4 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 16 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 10 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 8 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 14 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 7 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 9 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 6 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 5 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 1 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 13 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]], 15 -> 
         Function[{$CellContext`pos, $CellContext`v, $CellContext`size}, 
           Style[
            Disk[$CellContext`pos, 
             Part[$CellContext`size, 1]], {
             EdgeForm[Black], Gray}]]}, VertexSize -> {0.6}, VertexStyle -> {
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[9], Opacity[1], 
        {Arrowheads[0.], 
         ArrowBox[{{0.3, -0.5}, {-0.04188830930896484, -0.4136852702402346}}, 
          0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.3, -0.5}, {0.2, -0.22}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.3, -0.5}, {0.3, 0.5}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.3, -0.5}, {-0.6, -0.5}}, 0.051024961647119976`]}}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {
           0.2, -0.22}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {-0.6, -0.5}},
           0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {-0.1, \
-0.21}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {-0.35, \
-0.27}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.2, -0.22}, {0.2, 0.22}}, 0.051024961647119976`]}}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.2, -0.22}, {-0.1, -0.21}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.2, -0.22}, {0.1, 0.}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.3, 0.5}, {0.2, 0.22}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.3, 0.5}, {-0.6, 0.5}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.3, 0.5}, {-0.04189085523675898, 0.4136784846246805}}, 
          0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.6, -0.5}, {-0.6, 0.5}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.6, -0.5}, {-0.35, -0.27}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.6, -0.5}, {-0.467915525028202, \
-2.438974377960701*^-6}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.2, 0.22}, {0.1, 0.}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.2, 0.22}, {-0.04189085523675898, 0.4136784846246805}}, 
           0.051024961647119976`]}}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.2, 0.22}, {-0.1, 0.21}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.1, -0.21}, {0.1, 0.}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.1, -0.21}, {-0.35, -0.27}}, 
           0.051024961647119976`]}}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.1, -0.21}, {-0.09587429250824256, \
-5.238176569929975*^-6}}, 0.051024961647119976`]}}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{0.1, 0.}, {-0.1, 0.21}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.1, 0.}, {-0.09587429250824256, -5.238176569929975*^-6}},
           0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.6, 0.5}, {-0.04189085523675898, 0.4136784846246805}}, 
           0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.6, 0.5}, {-0.467915525028202, -2.438974377960701*^-6}},
           0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.6, 0.5}, {-0.35, 0.27}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.35, -0.27}, {-0.467915525028202, \
-2.438974377960701*^-6}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.35, -0.27}, {-0.2978323195413586, \
-3.5388866881091996`*^-6}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.04189085523675898, 0.4136784846246805}, {-0.1, 0.21}}, 
          0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.04189085523675898, 0.4136784846246805}, {-0.35, 
           0.27}}, 0.051024961647119976`]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.467915525028202, -2.438974377960701*^-6}, {-0.35, 
          0.27}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.467915525028202, -2.438974377960701*^-6}, \
{-0.2978323195413586, -3.5388866881091996`*^-6}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.1, 
          0.21}, {-0.09587429250824256, -5.238176569929975*^-6}}, 
          0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.1, 0.21}, {-0.35, 0.27}}, 0.051024961647119976`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.09587429250824256, -5.238176569929975*^-6}, \
{-0.2978323195413586, -3.5388866881091996`*^-6}}, 0.051024961647119976`]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         {Arrowheads[0.], 
          ArrowBox[{{-0.35, 
           0.27}, {-0.2978323195413586, -3.5388866881091996`*^-6}}, 
           0.051024961647119976`]}}}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{0.3, -0.5}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.04188830930896484, -0.4136852702402346}, 
          0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{0.2, -0.22}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{0.3, 0.5}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.6, -0.5}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{0.2, 0.22}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.1, -0.21}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{0.1, 0.}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.6, 0.5}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.35, -0.27}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.04189085523675898, 0.4136784846246805}, 
          0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.467915525028202, -2.438974377960701*^-6}, 
          0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.1, 0.21}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.09587429250824256, -5.238176569929975*^-6}, 
          0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.35, 0.27}, 0.051024961647119976]}, 
        {GrayLevel[0.5], EdgeForm[{GrayLevel[0], Opacity[1]}], 
         DiskBox[{-0.2978323195413586, -3.5388866881091996*^-6}, 
          0.051024961647119976]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.704324740494532*^9, 3.704324800230845*^9, 3.704324860934273*^9, 
   3.705364226915167*^9, {3.705364272029917*^9, 
   3.7053642920237093`*^9}},ExpressionUUID->"f2fdafaf-1a67-43a2-b862-\
641311246df9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FigDir", "<>", "\"\<J90ExampleEmbedding2.eps\>\""}], ",", 
    "Emb"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7043211144666643`*^9, 3.704321138704528*^9}, 
   3.704324660810709*^9, {3.7043247380170803`*^9, 3.7043247381608973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"AllOrigCoords", "[", 
    RowBox[{"[", 
     RowBox[{"State1ID", "[", 
      RowBox[{"[", "10", "]"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704325080648492*^9, 3.704325082520913*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoordRule1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"X1", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"pp", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"GraphPlot3D", "[", 
      RowBox[{"GRC", ",", " ", 
       RowBox[{"VertexCoordinateRules", "\[Rule]", "CoordRule1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"VertexRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"MyColors", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"GD", "[", 
                 RowBox[{"[", "#2", "]"}], "]"}], "+", "1"}], "]"}], "]"}], 
             "]"}], ",", 
            RowBox[{"Sphere", "[", 
             RowBox[{"#1", ",", "0.17"}], "]"}]}], "}"}], "&"}], ")"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"EdgeRenderingFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0.0", ",", "0.0"}], "]"}], ",", 
            RowBox[{"Cylinder", "[", 
             RowBox[{"#1", ",", ".035"}], "]"}]}], "}"}], "&"}], ")"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", " ", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], ",", "J90Plot", " ", 
     ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "1.985765579012083`", ",", "2.621257213134179`", ",", 
        "0.7973366213857535`"}], "}"}]}], ",", 
     RowBox[{"ViewVertical", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", ",", 
        
        RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.704325121394669*^9, 3.704325141598468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FigDir", "<>", "\"\<J90Macrostate.png\>\""}], ",", "pp", ",", 
    RowBox[{"Background", "\[Rule]", "None"}], ",", " ", 
    RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7043251438826427`*^9, 3.704325197371441*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis for state 48 (1 non-trivial embedding)", "Section",
 CellChangeTimes->{{3.704299148608712*^9, 3.704299172151288*^9}, {
  3.704299209143442*^9, 3.7042992140141563`*^9}, {3.704320015988884*^9, 
  3.704320016054262*^9}}],

Cell["\<\
We pick state 48 to plot all embeddings (1 possibility up to trivial \
symmetries):\
\>", "Text",
 CellChangeTimes->{{3.704208568640419*^9, 3.704208594094472*^9}, {
  3.704320020422345*^9, 3.704320027974022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"State1", "=", "48"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"State1ID", "=", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"AllStates", ",", "State1"}], "]"}], "//", "Flatten"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FigStateDir", "=", 
   RowBox[{"FigDir", "<>", "\"\<AllJohnsonEmbeddings_State\>\"", "<>", 
    RowBox[{"ToString", "[", "State1", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateDirectory", "[", "FigStateDir", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70419910659909*^9, 3.704199160568605*^9}, {
  3.704200897364407*^9, 3.7042008979469748`*^9}, {3.704201042657872*^9, 
  3.704201049662767*^9}, {3.704201167245185*^9, 3.704201167564796*^9}, {
  3.7042988852063293`*^9, 3.704298896269278*^9}, {3.704298926439455*^9, 
  3.7042989494026423`*^9}, {3.704298980907827*^9, 3.704299008423717*^9}, {
  3.704299217401178*^9, 3.704299217831127*^9}, {3.704306793110306*^9, 
  3.704306794643901*^9}, {3.704319861800171*^9, 
  3.704319861900322*^9}},ExpressionUUID->"75b22fb3-762e-4cac-abf3-\
792467ea9b7c"],

Cell[BoxData[
 TemplateBox[{
  "CreateDirectory","filex",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/norbert/Dropbox \
(MIT)/StasPacking/figure_data/AllJohnsonEmbeddings_State48\\\\\\\"\\\"}]\\) \
already exists.\"",2,220,5,21225675675202563873,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.705363916406784*^9, 3.705364630522049*^9, 
  3.7053646763790092`*^9, 
  3.7054078364524727`*^9},ExpressionUUID->"cd490b49-45ef-4bb5-8cf7-\
b9b6203d3ef5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StateGraphs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "State1ID", "]"}], "/", "8"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StatePlots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "State1ID", "]"}], "/", "8"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keys", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Fix", " ", "position", " ", "of", " ", "first", " ", "node", " ", "to", 
    " ", "filter", " ", "trivial", " ", "symmetries", " ", "of", " ", "J90"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosV1", "=", 
   RowBox[{"AllOrigCoords", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"State1ID", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ct", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"s", "=", "1"}], ",", 
    RowBox[{"s", "\[LessEqual]", 
     RowBox[{"Length", "[", "State1ID", "]"}]}], ",", 
    RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"X1", "=", 
      RowBox[{"AllOrigCoords", "[", 
       RowBox[{"[", 
        RowBox[{"State1ID", "[", 
         RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"X1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "PosV1"}], ",", 
       RowBox[{"Continue", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Construct", " ", "permutation", " ", 
       RowBox[{"maps", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mapvals", "=", 
      RowBox[{"AllMaps", "[", 
       RowBox[{"[", 
        RowBox[{"State1ID", "[", 
         RowBox[{"[", "s", "]"}], "]"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"map", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"keys", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
         RowBox[{"mapvals", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"inv", "=", 
      RowBox[{"Apply", "[", 
       RowBox[{"Normal", ",", 
        RowBox[{"GroupBy", "[", 
         RowBox[{
          RowBox[{"Normal", "[", "map", "]"}], ",", 
          RowBox[{"Last", "\[Rule]", "First"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"MyVertexLabels", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Keys", "[", "inv", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Values", "[", "inv", "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MyVertexStyles", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Keys", "[", "inv", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{"17", ",", " ", 
             RowBox[{"MyLabelColors", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Values", "[", "inv", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
          
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"MyVertexLabels", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Values", "[", "inv", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", "1.25"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MyVertexStyles", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
         RowBox[{"Directive", "[", "35", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"GM", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"VertexReplace", "[", 
        RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StateGraphs", "[", 
       RowBox[{"[", "ct", "]"}], "]"}], "=", 
      RowBox[{"Show", "[", 
       RowBox[{"HighlightGraph", "[", 
        RowBox[{"DisphGStyled", ",", 
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{"GM", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "[", "Red", "]"}], ",", 
              RowBox[{"AbsoluteThickness", "[", "7", "]"}]}], "}"}]}], "]"}], 
          "}"}], ",", 
         RowBox[{"VertexLabels", "\[Rule]", "MyVertexLabels"}], ",", 
         RowBox[{"VertexLabelStyle", "\[Rule]", "MyVertexStyles"}], ",", 
         RowBox[{"VertexShapeFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pos", ",", "v", ",", "size"}], "}"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Disk", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"size", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"MyColors", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"GD", "[", 
                    RowBox[{"[", 
                    RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
                    "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"MyColors", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"GD", "[", 
                    RowBox[{"[", 
                    RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
                   "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Now", " ", "the", " ", "3", "d", " ", "plots", " ", "of", " ", "the", 
       " ", 
       RowBox[{"embeddings", ":"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"CoordRule1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "\[Rule]", 
         RowBox[{"X1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StatePlots", "[", 
       RowBox[{"[", "ct", "]"}], "]"}], "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"GraphPlot3D", "[", 
         RowBox[{"GRC", ",", " ", 
          RowBox[{"VertexCoordinateRules", "\[Rule]", "CoordRule1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"VertexRenderingFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"MyColors", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"GD", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], "+", "1"}], "]"}], "]"}],
                 "]"}], ",", 
               RowBox[{"Sphere", "[", 
                RowBox[{"#1", ",", "0.17"}], "]"}]}], "}"}], "&"}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeRenderingFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0.0", ",", "0.0"}], "]"}], ",", 
               RowBox[{"Cylinder", "[", 
                RowBox[{"#1", ",", ".035"}], "]"}]}], "}"}], "&"}], ")"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", " ", 
          RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], ",", "J90Plot", " ",
         ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "1.985765579012083`", ",", "2.621257213134179`", ",", 
           "0.7973366213857535`"}], "}"}]}], ",", 
        RowBox[{"ViewVertical", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.26056951097442915`"}], ",", "1.06032043655769`", 
           ",", 
           RowBox[{"-", "0.018426558909775813`"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704199205012932*^9, 3.704199208416711*^9}, {
   3.704199251654377*^9, 3.7041992610140963`*^9}, {3.7041995218266163`*^9, 
   3.704199544568347*^9}, {3.704199890323412*^9, 3.704199916709132*^9}, {
   3.7041999508564787`*^9, 3.7041999594762287`*^9}, {3.704200047481669*^9, 
   3.704200090762869*^9}, {3.704200288492363*^9, 3.704200297634857*^9}, {
   3.704200337798724*^9, 3.704200340820797*^9}, {3.704200457360559*^9, 
   3.704200550371785*^9}, {3.7042010010248547`*^9, 3.704201021753728*^9}, {
   3.7042011240224*^9, 3.7042011318782663`*^9}, {3.7042018939144278`*^9, 
   3.704201923240047*^9}, {3.70420240123553*^9, 3.7042024969267387`*^9}, {
   3.7042025365247517`*^9, 3.704202568625383*^9}, {3.704203167841963*^9, 
   3.704203232338599*^9}, {3.704203515829853*^9, 3.7042035275092363`*^9}, 
   3.704203571969656*^9, {3.704203668247652*^9, 3.7042038498545017`*^9}, {
   3.704203905961445*^9, 3.7042039267833138`*^9}, {3.704203967272835*^9, 
   3.70420400889058*^9}, {3.7042040607107058`*^9, 3.70420406357281*^9}, {
   3.7042041055606823`*^9, 3.704204105704253*^9}, {3.7042046815934553`*^9, 
   3.7042047123462353`*^9}, {3.704204755095811*^9, 3.7042047568672447`*^9}, {
   3.704204840214006*^9, 3.704204887209441*^9}, {3.704207537331315*^9, 
   3.704207644009904*^9}, 3.70420787923297*^9, {3.704207910533877*^9, 
   3.704207929610517*^9}, {3.704295019550067*^9, 3.704295107419385*^9}, {
   3.704295149160989*^9, 3.704295210208132*^9}, {3.704295387295418*^9, 
   3.704295388751317*^9}, {3.704295814307066*^9, 3.704295818826783*^9}, {
   3.704296718730685*^9, 3.704296739687275*^9}, {3.7042974162988377`*^9, 
   3.7042974163973513`*^9}, {3.7042974513726473`*^9, 3.704297451506071*^9}, {
   3.7042974943703938`*^9, 3.704297494496306*^9}, 3.70429925250768*^9, {
   3.704299284594735*^9, 3.704299315080489*^9}, {3.70430039748384*^9, 
   3.704300404209343*^9}, {3.704307663814287*^9, 3.704307687692173*^9}, 
   3.7043078294034777`*^9, {3.704315877299625*^9, 3.704315878701805*^9}, {
   3.704316027111063*^9, 3.704316051861021*^9}, {3.704316087197818*^9, 
   3.704316127969913*^9}, {3.705364313101617*^9, 3.705364335341002*^9}, {
   3.705364373062172*^9, 3.70536437371943*^9}, {3.705364454583494*^9, 
   3.7053644618936234`*^9}, {3.705364624482998*^9, 
   3.705364624888773*^9}},ExpressionUUID->"9a535db8-ede1-469a-99e9-\
8cc08c6ec3b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StateGraphs", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7043160564041767`*^9, 3.70431607151394*^9}, {
  3.7053646675316973`*^9, 
  3.705364683074647*^9}},ExpressionUUID->"2a7f2843-12cb-4e0b-9843-\
8866ee4f7f1a"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.5], AbsoluteThickness[3], Opacity[1], 
    {Arrowheads[0.], 
     ArrowBox[{{0.3, -0.5}, {-0.04188830930896484, -0.4136852702402346}}, 
      0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{0.3, -0.5}, {0.2, -0.22}}, 0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.3, -0.5}, {0.3, 0.5}}, 0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{0.3, -0.5}, {-0.6, -0.5}}, 0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {0.2, -0.22}}, 
      0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {-0.6, -0.5}}, 
       0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {-0.1, -0.21}}, 
      0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.04188830930896484, -0.4136852702402346}, {-0.35, -0.27}}, 
      0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.2, -0.22}, {0.2, 0.22}}, 0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.2, -0.22}, {-0.1, -0.21}}, 0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.2, -0.22}, {0.1, 0.}}, 0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.3, 0.5}, {0.2, 0.22}}, 0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{0.3, 0.5}, {-0.6, 0.5}}, 0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.3, 0.5}, {-0.04189085523675898, 0.4136784846246805}}, 
      0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.6, -0.5}, {-0.6, 0.5}}, 0.051024961647119976`]}}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.6, -0.5}, {-0.35, -0.27}}, 0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.6, -0.5}, {-0.467915525028202, -2.438974377960701*^-6}}, 
      0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.2, 0.22}, {0.1, 0.}}, 0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{0.2, 0.22}, {-0.04189085523675898, 0.4136784846246805}}, 
       0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.2, 0.22}, {-0.1, 0.21}}, 0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.1, -0.21}, {0.1, 0.}}, 0.051024961647119976`]}}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.1, -0.21}, {-0.35, -0.27}}, 0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.1, -0.21}, {-0.09587429250824256, -5.238176569929975*^-6}},
       0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.1, 0.}, {-0.1, 0.21}}, 0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{0.1, 0.}, {-0.09587429250824256, -5.238176569929975*^-6}}, 
      0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.6, 0.5}, {-0.04189085523675898, 0.4136784846246805}}, 
       0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.6, 0.5}, {-0.467915525028202, -2.438974377960701*^-6}}, 
      0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.6, 0.5}, {-0.35, 0.27}}, 0.051024961647119976`]}}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.35, -0.27}, {-0.467915525028202, -2.438974377960701*^-6}},
        0.051024961647119976`]}}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.35, -0.27}, {-0.2978323195413586, \
-3.5388866881091996`*^-6}}, 0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.04189085523675898, 0.4136784846246805}, {-0.1, 0.21}}, 
      0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.04189085523675898, 0.4136784846246805}, {-0.35, 0.27}}, 
      0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.467915525028202, -2.438974377960701*^-6}, {-0.35, 0.27}}, 
      0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.467915525028202, -2.438974377960701*^-6}, \
{-0.2978323195413586, -3.5388866881091996`*^-6}}, 0.051024961647119976`]}, 
    {Arrowheads[0.], 
     ArrowBox[{{-0.1, 0.21}, {-0.09587429250824256, -5.238176569929975*^-6}}, 
      0.051024961647119976`]}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.1, 0.21}, {-0.35, 0.27}}, 0.051024961647119976`]}}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.09587429250824256, -5.238176569929975*^-6}, \
{-0.2978323195413586, -3.5388866881091996`*^-6}}, 0.051024961647119976`]}}, 
    {RGBColor[
      Rational[2, 3], 0, 0], AbsoluteThickness[7], 
     {Arrowheads[0.], 
      ArrowBox[{{-0.35, 
       0.27}, {-0.2978323195413586, -3.5388866881091996`*^-6}}, 
       0.051024961647119976`]}}}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
     {RGBColor[0.7578125, 0.17578125, 0.17578125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.7578125, 0.17578125, 0.17578125]], 
      DiskBox[{0.3, -0.5}, 0.051024961647119976]}, InsetBox[
      StyleBox["6",
       StripOnInput->False,
       FontSize->35], {0.3765374424706799, -0.42346255752932},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.7578125, 0.17578125, 0.17578125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.7578125, 0.17578125, 0.17578125]], 
      DiskBox[{-0.04188830930896484, -0.4136852702402346}, 
       0.051024961647119976]}, InsetBox[
      StyleBox["10",
       StripOnInput->False,
       FontSize->35], {0.03464913316171514, -0.3371478277695546},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0., 0.41796875, 0.28125], AbsoluteThickness[7], EdgeForm[
      RGBColor[0., 0.41796875, 0.28125]], 
      DiskBox[{0.2, -0.22}, 0.051024961647119976]}, InsetBox[
      StyleBox["14",
       StripOnInput->False,
       FontSize->35], {0.2765374424706799, -0.14346255752932002},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.21484375, 0.5625, 0.6484375], AbsoluteThickness[7], EdgeForm[
      RGBColor[0.21484375, 0.5625, 0.6484375]], 
      DiskBox[{0.3, 0.5}, 0.051024961647119976]}, InsetBox[
      StyleBox["9",
       StripOnInput->False,
       FontSize->35], {0.3765374424706799, 0.57653744247068},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.21484375, 0.5625, 0.6484375], AbsoluteThickness[7], EdgeForm[
      RGBColor[0.21484375, 0.5625, 0.6484375]], 
      DiskBox[{-0.6, -0.5}, 0.051024961647119976]}, InsetBox[
      StyleBox["2",
       StripOnInput->False,
       FontSize->35], {-0.5234625575293199, -0.42346255752932},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.7578125, 0.17578125, 0.17578125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.7578125, 0.17578125, 0.17578125]], 
      DiskBox[{0.2, 0.22}, 0.051024961647119976]}, InsetBox[
      StyleBox["13",
       StripOnInput->False,
       FontSize->35], {0.2765374424706799, 0.29653744247068},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0., 0.41796875, 0.28125], AbsoluteThickness[7], EdgeForm[
      RGBColor[0., 0.41796875, 0.28125]], 
      DiskBox[{-0.1, -0.21}, 0.051024961647119976]}, InsetBox[
      StyleBox["8",
       StripOnInput->False,
       FontSize->35], {-0.023462557529320027, -0.13346255752932001},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.984375, 0.71484375, 0.08203125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.984375, 0.71484375, 0.08203125]], 
      DiskBox[{0.1, 0.}, 0.051024961647119976]}, InsetBox[
      StyleBox["16",
       StripOnInput->False,
       FontSize->35], {0.17653744247067998, 0.07653744247067998},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.51953125, 0.5546875, 0.55078125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.51953125, 0.5546875, 0.55078125]], 
      DiskBox[{-0.6, 0.5}, 0.051024961647119976]}, InsetBox[
      StyleBox["1",
       StripOnInput->False,
       FontSize->35], {-0.5234625575293199, 0.57653744247068},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.7578125, 0.17578125, 0.17578125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.7578125, 0.17578125, 0.17578125]], 
      DiskBox[{-0.35, -0.27}, 0.051024961647119976]}, InsetBox[
      StyleBox["4",
       StripOnInput->False,
       FontSize->35], {-0.27346255752931997, -0.19346255752932004},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.21484375, 0.5625, 0.6484375], AbsoluteThickness[7], EdgeForm[
      RGBColor[0.21484375, 0.5625, 0.6484375]], 
      DiskBox[{-0.04189085523675898, 0.4136784846246805}, 
       0.051024961647119976]}, InsetBox[
      StyleBox["5",
       StripOnInput->False,
       FontSize->35], {0.034646587233921, 0.4902159270953605},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0., 0.41796875, 0.28125], AbsoluteThickness[7], EdgeForm[
      RGBColor[0., 0.41796875, 0.28125]], 
      DiskBox[{-0.467915525028202, -2.438974377960701*^-6}, 
       0.051024961647119976]}, InsetBox[
      StyleBox["12",
       StripOnInput->False,
       FontSize->35], {-0.391378082557522, 0.07653500349630202},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.7578125, 0.17578125, 0.17578125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.7578125, 0.17578125, 0.17578125]], 
      DiskBox[{-0.1, 0.21}, 0.051024961647119976]}, InsetBox[
      StyleBox["11",
       StripOnInput->False,
       FontSize->35], {-0.023462557529320027, 0.28653744247067997},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0., 0.41796875, 0.28125], AbsoluteThickness[7], EdgeForm[
      RGBColor[0., 0.41796875, 0.28125]], 
      DiskBox[{-0.09587429250824256, -5.238176569929975*^-6}, 
       0.051024961647119976]}, InsetBox[
      StyleBox["15",
       StripOnInput->False,
       FontSize->35], {-0.01933685003756258, 0.07653220429411005},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.21484375, 0.5625, 0.6484375], AbsoluteThickness[7], EdgeForm[
      RGBColor[0.21484375, 0.5625, 0.6484375]], 
      DiskBox[{-0.35, 0.27}, 0.051024961647119976]}, InsetBox[
      StyleBox["3",
       StripOnInput->False,
       FontSize->35], {-0.27346255752931997, 0.34653744247068},
      BaseStyle->"Graphics"]}, {
     {RGBColor[0.7578125, 0.17578125, 0.17578125], AbsoluteThickness[7], 
      EdgeForm[RGBColor[0.7578125, 0.17578125, 0.17578125]], 
      DiskBox[{-0.2978323195413586, -3.5388866881091996*^-6}, 
       0.051024961647119976]}, InsetBox[
      StyleBox["7",
       StripOnInput->False,
       FontSize->35], {-0.2212948770706786, 0.07653390358399187},
      BaseStyle->"Graphics"]}}},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.704316063193708*^9, 3.70431612920212*^9}, 
   3.7043198678268623`*^9, 3.705363922548614*^9, 3.7053643390127773`*^9, 
   3.705364376044744*^9, 3.705364463943198*^9, 3.705364633850582*^9, {
   3.7053646682630243`*^9, 3.705364683520355*^9}, 
   3.70540784240055*^9},ExpressionUUID->"2ac5d268-00b2-44d0-87da-\
e454a409360b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"p", "=", "1"}], ",", 
    RowBox[{"p", "<=", 
     RowBox[{"Length", "[", "StatePlots", "]"}]}], ",", 
    RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FigStateDir", "<>", "\"\</3DEmbedding_\>\"", "<>", 
        RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<.png\>\""}], ",", 
       RowBox[{"StatePlots", "[", 
        RowBox[{"[", "p", "]"}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "200"}], ",", 
       RowBox[{"Background", "->", "None"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.704208194651087*^9, 3.704208277327272*^9}, {
   3.7042083079359922`*^9, 3.7042083504217567`*^9}, {3.70429688348167*^9, 
   3.7042968838561373`*^9}, {3.704298785587975*^9, 3.704298788139061*^9}, {
   3.704299024337174*^9, 3.704299035127644*^9}, {3.704300512386009*^9, 
   3.7043005133339148`*^9}, {3.704306810199394*^9, 3.704306815051764*^9}, 
   3.704307952010449*^9, 3.704308004735084*^9, {3.704308088808618*^9, 
   3.704308089641149*^9}, {3.704308132534993*^9, 3.7043081693034067`*^9}, {
   3.704308234712184*^9, 3.704308235265881*^9}, {3.7043083532580957`*^9, 
   3.704308353709506*^9}, {3.704308401605892*^9, 3.7043084250969563`*^9}, {
   3.704308540766279*^9, 
   3.704308541156698*^9}},ExpressionUUID->"8737986b-1727-41a8-a8b0-\
ec26d7df3415"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"p", "=", "1"}], ",", 
    RowBox[{"p", "<=", 
     RowBox[{"Length", "[", "StateGraphs", "]"}]}], ",", 
    RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"TR1", " ", "=", " ", 
       RowBox[{"Rasterize", "[", 
        RowBox[{
         RowBox[{"StateGraphs", "[", 
          RowBox[{"[", "p", "]"}], "]"}], ",", " ", 
         RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]}], ";"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TR1", "=", 
      RowBox[{"StateGraphs", "[", 
       RowBox[{"[", "p", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FigStateDir", "<>", "\"\</GraphEmbedding_\>\"", "<>", 
        RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       "TR1", ",", " ", 
       RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.704296870542636*^9, 3.704296903911771*^9}, 
   3.704298796617044*^9, {3.704299031535343*^9, 3.704299038738171*^9}, {
   3.704300491193812*^9, 3.704300503752146*^9}, {3.704300827571802*^9, 
   3.7043008376193743`*^9}, {3.7043024481964397`*^9, 3.70430244841854*^9}, {
   3.704302519489997*^9, 3.70430251995912*^9}, {3.704302629888258*^9, 
   3.704302630278054*^9}, {3.704302697785428*^9, 3.704302698063909*^9}, {
   3.704302901983491*^9, 3.704302902773837*^9}, {3.70540785324184*^9, 
   3.7054078535143642`*^9}, {3.705408078113132*^9, 3.70540810779867*^9}, {
   3.705409096311441*^9, 
   3.705409096533183*^9}},ExpressionUUID->"df4779b3-078e-42ac-8d56-\
addb47f7c394"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Debugging routines down here:", "Section",
 CellChangeTimes->{{3.7029507401930733`*^9, 3.7029507480172367`*^9}}],

Cell[BoxData[
 RowBox[{"VertexReplace", "[", 
  RowBox[{"GRC", ",", 
   RowBox[{"Normal", "[", "map", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7029113725276737`*^9, 3.702911381238255*^9}, {
  3.702911552724337*^9, 3.702911554820107*^9}, {3.702948654341856*^9, 
  3.702948658755591*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 3, 5, 6, 4, 8, 10, 13, 2, 7, 12, 11, 9, 14, 16, 15}, {
      Null, {{1, 2}, {1, 3}, {1, 5}, {1, 9}, {2, 4}, {2, 6}, {2, 10}, {3, 
       7}, {3, 11}, {4, 8}, {4, 12}, {5, 13}, {6, 14}, {7, 15}, {8, 16}}}, {
      FormatType -> TraditionalForm, GraphStyle -> "DiagramBlack"}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        GrayLevel[0], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        GrayLevel[0.7], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.5619148945192585`, 2.410902231431113}, {
           3.1158348450574307`, 2.7801832447532884`}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.858589972646252, 1.7620165469080629`}, {
           1.4125099231844238`, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.64302560508464, 1.7620165469080629`}, {
           3.196945555622812, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.0474828669924392, 1.1131308623850127`}, {
           0.601402817530611, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.7620165469080629`}, {
           4.170274082407387, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 1.1131308623850127`}, {
           1.5747313443151862`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 1.1131308623850127`}, {
           2.8725027133612864`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, 0.4642451778619625}, {
           0.2769599752690859, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{4.265239816392266, 1.7620165469080629`}, {
           4.819159766930437, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.6696970783000646`, 1.1131308623850127`}, {
           2.2236170288382366`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.9674684473461648`, 1.1131308623850127`}, {
           3.521388397884337, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.3719257092539643, 0.4642451778619625}, {
           0.9258456597921361, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.1131308623850127`}, {
           4.170274082407387, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 0.4642451778619625}, {
           1.5747313443151862`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 0.4642451778619625}, {
           2.8725027133612864`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, -0.1846405066610877}, {
           0.2769599752690859, 0.1846405066610877}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$16"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.18, 351.8200000000001}, {-103.10720000000003`, 
       97.39767613668897}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.702948672141282*^9, 
  3.702948672161511*^9}},ExpressionUUID->"4c9128c0-b8de-4e40-9ac7-\
dccd5b76e4d5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 3, 4, 7, 5, 6, 9, 10, 2, 8, 11, 14, 12, 13, 15, 16}, {
      Null, {{1, 2}, {1, 3}, {1, 5}, {1, 9}, {2, 4}, {2, 6}, {2, 10}, {3, 
       7}, {3, 11}, {4, 8}, {4, 12}, {5, 13}, {6, 14}, {7, 15}, {8, 16}}}, {
      FormatType -> TraditionalForm, GraphStyle -> "DiagramBlack"}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        GrayLevel[0], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        GrayLevel[0.7], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.5619148945192585`, 2.410902231431113}, {
           3.1158348450574307`, 2.7801832447532884`}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.858589972646252, 1.7620165469080629`}, {
           1.4125099231844238`, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.64302560508464, 1.7620165469080629`}, {
           3.196945555622812, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.0474828669924392, 1.1131308623850127`}, {
           0.601402817530611, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.7620165469080629`}, {
           4.170274082407387, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 1.1131308623850127`}, {
           1.5747313443151862`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 1.1131308623850127`}, {
           2.8725027133612864`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, 0.4642451778619625}, {
           0.2769599752690859, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{4.265239816392266, 1.7620165469080629`}, {
           4.819159766930437, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.6696970783000646`, 1.1131308623850127`}, {
           2.2236170288382366`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.9674684473461648`, 1.1131308623850127`}, {
           3.521388397884337, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.3719257092539643, 0.4642451778619625}, {
           0.9258456597921361, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.1131308623850127`}, {
           4.170274082407387, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 0.4642451778619625}, {
           1.5747313443151862`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 0.4642451778619625}, {
           2.8725027133612864`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, -0.1846405066610877}, {
           0.2769599752690859, 0.1846405066610877}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$16"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.18, 351.8200000000001}, {-103.10720000000003`, 
       97.39767613668897}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.702911569569738*^9, 
  3.702911569593482*^9}},ExpressionUUID->"b1cfff45-318f-4531-bb20-\
d2dc05e1272f"],

Cell[BoxData[
 RowBox[{"DisphRL", "=", 
  RowBox[{"VertexReplace", "[", 
   RowBox[{"DisphG", ",", 
    RowBox[{"Normal", "[", "inv", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7029130449879627`*^9, 3.7029130495542927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjacencyMatrix", "[", "DisphG", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702945700582843*^9, 3.7029457475198803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjnew", "=", 
   RowBox[{
    RowBox[{"AdjacencyMatrix", "[", "DisphG", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Values", "[", "map", "]"}], ",", 
      StyleBox[
       RowBox[{"Values", "[", "map", "]"}],
       FontWeight->"Bold"]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702945777693461*^9, 3.702945778738097*^9}, {
  3.702946144596719*^9, 3.7029461564828587`*^9}, {3.7029462373416767`*^9, 
  3.702946242641814*^9}, {3.70294658200518*^9, 3.70294658922952*^9}, {
  3.702948377742709*^9, 3.702948378780223*^9}}],

Cell[BoxData[
 RowBox[{"adjnew", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702946591030439*^9, 3.702946594546987*^9}}],

Cell[BoxData[
 RowBox[{"DisphCoords", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702946631850004*^9, 3.702946634122755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tt", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DisphCoords", "[", 
       RowBox[{"[", 
        RowBox[{"Values", "[", "map", "]"}], "]"}], "]"}], "^", "2"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7029489215475473`*^9, 3.7029489511347218`*^9}, {
  3.702949009464357*^9, 3.702949013437235*^9}, {3.7029490762863903`*^9, 
  3.7029490795556498`*^9}, {3.7029494045012007`*^9, 3.70294941117225*^9}, {
  3.702949555370591*^9, 3.7029495558919983`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2123451108857`", ",", "1.0260646466079382`", ",", "1.0260644664777976`", 
   ",", "1.0260657456597995`", ",", "1.2123460410650861`", ",", 
   "1.1724296201980473`", ",", "1.0260638840070595`", ",", 
   "1.026064469760432`", ",", "1.1724269930632114`", ",", 
   "1.0260641387401654`", ",", "1.1724288471789108`", ",", 
   "1.1724291600744938`", ",", "1.0260655655298525`", ",", 
   "1.2123449912846365`", ",", "1.2123443108009493`", ",", 
   "1.026063940381562`"}], "}"}]], "Output",
 CellChangeTimes->{{3.70294892537503*^9, 3.702948952190716*^9}, 
   3.702949013922449*^9, 3.702949081285434*^9, 3.70294941294496*^9, 
   3.702949556323724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", "=", 
  RowBox[{
   RowBox[{"DisphCoords", "[", 
    RowBox[{"[", 
     RowBox[{"Values", "[", "map", "]"}], "]"}], "]"}], "/", 
   "tt"}]}]], "Input",
 CellChangeTimes->{{3.702949558728352*^9, 3.7029495682315407`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9660156150839838`"}], ",", "0.2422478611744223`", ",", 
     "0.09016543223614198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7937504697487663`"}], ",", 
     RowBox[{"-", "0.5238875143911801`"}], ",", 
     RowBox[{"-", "0.3090340823253056`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4487439240251046`"}], ",", "0.44936302347425605`", ",", 
     "0.7724647330361603`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.302007634797469`"}], ",", "0.017546296719237426`", ",", 
     RowBox[{"-", "0.9531440163980882`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5498303942630587`"}], ",", "0.700488220932481`", ",", 
     RowBox[{"-", "0.45497559261940307`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008940795724330786`", ",", 
     RowBox[{"-", "0.7688026357634403`"}], ",", 
     RowBox[{"-", "0.6394236228158942`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11057920434322212`", ",", 
     RowBox[{"-", "0.331633240719169`"}], ",", "0.9369053491238705`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0.640174701097369`", ",", 
     RowBox[{"-", "0.13527648531442493`"}], ",", 
     RowBox[{"-", "0.7562252472616017`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7154135088742569`"}], ",", 
     RowBox[{"-", "0.39034351963725444`"}], ",", "0.5794958567560463`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11428798451085341`"}], ",", 
     RowBox[{"-", "0.965976884246481`"}], ",", "0.23200628374660015`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4523133809908483`", ",", "0.481939401787466`", ",", 
     "0.7504312216195215`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25416000303884123`", ",", "0.6772062493197273`", ",", 
     RowBox[{"-", "0.69050299690704`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04299862770609566`", ",", "0.9907958871554933`", ",", 
     "0.1283535274589352`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6627642571651907`", ",", 
     RowBox[{"-", "0.7398065325028322`"}], ",", 
     RowBox[{"-", "0.11588716016198226`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8530790952849562`", ",", 
     RowBox[{"-", "0.20293123566678348`"}], ",", "0.4807025803743442`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8650416270855812`", ",", "0.4990676722383474`", ",", 
     RowBox[{"-", "0.05132681497743046`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.702949560163064*^9, 3.702949568673958*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"nn", "^", "2"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702949584104746*^9, 3.7029495844949417`*^9}, 
   3.702949625748979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.9999999999999999`", ",", "1.`", ",", "1.`", ",", 
   "0.9999999999999999`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",",
    "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
   "0.9999999999999999`", ",", "0.9999999999999998`"}], "}"}]], "Output",
 CellChangeTimes->{3.702949626407469*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DisphCoords", "[", 
   RowBox[{"[", 
    RowBox[{"Values", "[", "map", "]"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702946658936145*^9, 3.702946667358718*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.17114430798631`"}], "0.29368801011732865`", 
      "0.10931162094238263`"},
     {
      RowBox[{"-", "0.8144392952376528`"}], 
      RowBox[{"-", "0.5375424573160974`"}], 
      RowBox[{"-", "0.31708894647092317`"}]},
     {
      RowBox[{"-", "0.4604401949899723`"}], "0.46107543093596254`", 
      "0.7925986141756621`"},
     {
      RowBox[{"-", "0.30987968899341745`"}], "0.018003654026792444`", 
      RowBox[{"-", "0.9779884259066806`"}]},
     {
      RowBox[{"-", "0.6665847017420747`"}], "0.8492341214602188`", 
      RowBox[{"-", "0.5515878584933748`"}]},
     {"0.010482453735345468`", 
      RowBox[{"-", "0.901366982255388`"}], 
      RowBox[{"-", "0.7496791952436982`"}]},
     {"0.11346132789881679`", 
      RowBox[{"-", "0.34027689103815867`"}], "0.9613247414690286`"},
     {"0.6568605152355149`", 
      RowBox[{"-", "0.13880239517520027`"}], 
      RowBox[{"-", "0.7759358573509268`"}]},
     {
      RowBox[{"-", "0.8387701090062462`"}], 
      RowBox[{"-", "0.4576492789900169`"}], "0.6794165848290808`"},
     {
      RowBox[{"-", "0.11726680239547817`"}], 
      RowBox[{"-", "0.9911542397772739`"}], "0.2380533277147617`"},
     {"0.5303052558386957`", "0.5650396572477727`", "0.8798272120504372`"},
     {"0.29798459888735945`", "0.7939763540871261`", 
      RowBox[{"-", "0.8095658486926417`"}]},
     {"0.04411941125426262`", "1.0166215422788532`", "0.13169913473990377`"},
     {"0.8034989275767017`", 
      RowBox[{"-", "0.8969007441994632`"}], 
      RowBox[{"-", "0.14049521817657964`"}]},
     {"1.0342255878319375`", 
      RowBox[{"-", "0.24602252904443161`"}], "0.5827770385041723`"},
     {"0.8875880204815091`", "0.5120753422939326`", 
      RowBox[{"-", "0.05266459402297767`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.702948824532247*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["CoordRule"], "Input",
 CellChangeTimes->{{3.702948827275649*^9, 3.702948830575005*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.17114430798631`"}], ",", "0.29368801011732865`", ",", 
      "0.10931162094238263`"}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.8144392952376528`"}], ",", 
      RowBox[{"-", "0.5375424573160974`"}], ",", 
      RowBox[{"-", "0.31708894647092317`"}]}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.4604401949899723`"}], ",", "0.46107543093596254`", ",", 
      "0.7925986141756621`"}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.30987968899341745`"}], ",", "0.018003654026792444`", 
      ",", 
      RowBox[{"-", "0.9779884259066806`"}]}], "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6665847017420747`"}], ",", "0.8492341214602188`", ",", 
      RowBox[{"-", "0.5515878584933748`"}]}], "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.010482453735345468`", ",", 
      RowBox[{"-", "0.901366982255388`"}], ",", 
      RowBox[{"-", "0.7496791952436982`"}]}], "}"}]}], ",", 
   RowBox[{"7", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.11346132789881679`", ",", 
      RowBox[{"-", "0.34027689103815867`"}], ",", "0.9613247414690286`"}], 
     "}"}]}], ",", 
   RowBox[{"8", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.6568605152355149`", ",", 
      RowBox[{"-", "0.13880239517520027`"}], ",", 
      RowBox[{"-", "0.7759358573509268`"}]}], "}"}]}], ",", 
   RowBox[{"9", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.8387701090062462`"}], ",", 
      RowBox[{"-", "0.4576492789900169`"}], ",", "0.6794165848290808`"}], 
     "}"}]}], ",", 
   RowBox[{"10", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11726680239547817`"}], ",", 
      RowBox[{"-", "0.9911542397772739`"}], ",", "0.2380533277147617`"}], 
     "}"}]}], ",", 
   RowBox[{"11", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.5303052558386957`", ",", "0.5650396572477727`", ",", 
      "0.8798272120504372`"}], "}"}]}], ",", 
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.29798459888735945`", ",", "0.7939763540871261`", ",", 
      RowBox[{"-", "0.8095658486926417`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.04411941125426262`", ",", "1.0166215422788532`", ",", 
      "0.13169913473990377`"}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8034989275767017`", ",", 
      RowBox[{"-", "0.8969007441994632`"}], ",", 
      RowBox[{"-", "0.14049521817657964`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.0342255878319375`", ",", 
      RowBox[{"-", "0.24602252904443161`"}], ",", "0.5827770385041723`"}], 
     "}"}]}], ",", 
   RowBox[{"16", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8875880204815091`", ",", "0.5120753422939326`", ",", 
      RowBox[{"-", "0.05266459402297767`"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7029488314129057`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NewG", "=", 
   RowBox[{"AdjacencyGraph", "[", "adjnew", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoordRule", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"DisphCoords", "[", 
       RowBox[{"[", 
        RowBox[{"map", "[", "i", "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702946784496677*^9, 3.7029468179254313`*^9}, {
  3.702948254806489*^9, 3.702948255148859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoordRule", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"nn", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7029497180042067`*^9, 3.702949729319422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot3D", "[", 
  RowBox[{"NewG", ",", 
   RowBox[{"VertexCoordinateRules", "\[Rule]", "CoordRule"}], ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexRenderingFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"MyColors", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"GD", "[", 
             RowBox[{"[", "#2", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "]"}],
         ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"#1", ",", ".2"}], "]"}]}], "}"}], "&"}], ")"}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702944741370174*^9, 3.702944746121105*^9}, {
  3.702945087399528*^9, 3.702945123112493*^9}, {3.7029455736572323`*^9, 
  3.7029455745809183`*^9}, {3.70294684517327*^9, 3.702946846176506*^9}, {
  3.702948178035528*^9, 3.7029481985204678`*^9}, {3.702948432846388*^9, 
  3.70294843460817*^9}}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[GraphicsGroup3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAzMBGlJnp7r9fkqJY+gHPP0wWr+4U
Fbc/yC2YYmdm6b+c+KK/r8Pgv5bwO+M2x9O/rdt9bzi43L+MoXYgXcLcP4qE
tvUHuOg/eTym1BdU07911kwKqPeRPyDaWeEngO6/qJw26TWY4b9ebARGZmrm
P9nTsfJRHt2/7cXjSY1Pgj+q1zX8B5rov2MXiYcoduS/UZdFMutOvD/e8Mmg
ejnVv0/nPe0g++0/oxKep0985D+U8CtovVDBvy29LEr/Mui/xWj33qrk5r/s
CsNiY/vYvznpHeU6i+I/R8TMM/pBvb/J+tBaSOnuvxA+lMRhss0/Roe50rPy
3D+fLlVcGNjeP/4ZWFaIA+g/hjJAUShE0D+eM69wrKvlP+gusL2ZGOa/44aK
h+oDpj9HA4uTmbTvPyqVYW3jbcA/aW4vY1015T888M6/fqznvwUK7OrHqr2/
Ec7kh2xM6z9DSkOWpvnJvzLhc8HUw94/vltAx2uu6z+JSrCIufDfP8fIeB+C
R6q/A1XX2Q==
      "], 
      {RGBColor[0.5, 0., 0.], 
       Line3DBox[{{1, 2}, {1, 3}, {1, 5}, {1, 9}, {2, 4}, {2, 6}, {2, 9}, {2, 
        10}, {3, 7}, {3, 9}, {3, 11}, {3, 13}, {4, 5}, {4, 6}, {4, 8}, {4, 
        12}, {5, 12}, {5, 13}, {6, 8}, {6, 10}, {6, 14}, {7, 9}, {7, 10}, {7, 
        11}, {7, 15}, {8, 12}, {8, 14}, {8, 16}, {9, 10}, {10, 14}, {11, 
        13}, {11, 15}, {11, 16}, {12, 13}, {12, 16}, {13, 16}, {14, 15}, {15, 
        16}}]}], {
      {RGBColor[0.51953125, 0.5546875, 0.55078125], 
       SphereBox[{-0.9660156150839838, 0.2422478611744223, 
        0.09016543223614198}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.7937504697487663, -0.5238875143911801, \
-0.3090340823253056}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.4487439240251046, 0.44936302347425605`, 
        0.7724647330361603}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.302007634797469, 
        0.017546296719237426`, -0.9531440163980882}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.5498303942630587, 
        0.700488220932481, -0.45497559261940307`}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{
        0.008940795724330786, -0.7688026357634403, -0.6394236228158942}, 
        0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.11057920434322212`, -0.331633240719169, 
        0.9369053491238705}, 0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.640174701097369, -0.13527648531442493`, -0.7562252472616017}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.7154135088742569, -0.39034351963725444`, 
        0.5794958567560463}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.11428798451085341`, -0.965976884246481, 
        0.23200628374660015`}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.4523133809908483, 0.481939401787466, 0.7504312216195215}, 
        0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{0.25416000303884123`, 
        0.6772062493197273, -0.69050299690704}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.04299862770609566, 0.9907958871554933, 
        0.1283535274589352}, 0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.6627642571651907, -0.7398065325028322, -0.11588716016198226`}, 
        0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{0.8530790952849562, -0.20293123566678348`, 
        0.4807025803743442}, 0.2]}, 
      {RGBColor[0.984375, 0.71484375, 0.08203125], 
       SphereBox[{0.8650416270855812, 
        0.4990676722383474, -0.05132681497743046}, 0.2]}}},
    ContentSelectable->True],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAzMBGlJnp7r9fkqJY+gHPP0wWr+4U
Fbc/yC2YYmdm6b+c+KK/r8Pgv5bwO+M2x9O/rdt9bzi43L+MoXYgXcLcP4qE
tvUHuOg/eTym1BdU07911kwKqPeRPyDaWeEngO6/qJw26TWY4b9ebARGZmrm
P9nTsfJRHt2/7cXjSY1Pgj+q1zX8B5rov2MXiYcoduS/UZdFMutOvD/e8Mmg
ejnVv0/nPe0g++0/oxKep0985D+U8CtovVDBvy29LEr/Mui/xWj33qrk5r/s
CsNiY/vYvznpHeU6i+I/R8TMM/pBvb/J+tBaSOnuvxA+lMRhss0/Roe50rPy
3D+fLlVcGNjeP/4ZWFaIA+g/hjJAUShE0D+eM69wrKvlP+gusL2ZGOa/44aK
h+oDpj9HA4uTmbTvPyqVYW3jbcA/aW4vY1015T888M6/fqznvwUK7OrHqr2/
Ec7kh2xM6z9DSkOWpvnJvzLhc8HUw94/vltAx2uu6z+JSrCIufDfP8fIeB+C
R6q/A1XX2Q==
     "]]& ],
  AspectRatio->Automatic,
  ImageSize->{366.54251878442835`, 352.6725848299026},
  Lighting->"Neutral",
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{-3.0511977870648015`, 1.4182375643963119`, 0.35887919296899073`},
  ViewVertical->{-0.8841071004088413, -0.5415401605122865, 
   0.08138784741677293}]], "Output",
 CellChangeTimes->{3.7029483948042517`*^9, 3.702948435750733*^9, 
  3.702948703658123*^9, 
  3.702949740784251*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdfQeYVEXWdn89JFFAMsMQRMkgOecMQ845J8kgIBmGDJIRUEFQRJQgSpQk
IuawihnDmna/XfO6u6bddVfrP+85p+6t7qlBBmZc/2+ep6e7q2/fvrfek+vU
OZ2GTR8zauKw6WNHDLuu7dRhU8aMHTHtujaTp9JQwv9EIv8zmR7DrovgtYlE
7D/+m4J/kcgxPA02o0ePHiQD5fG0JhiI4tVA+eh6PGXDwOc8kICXfDJ6jgxw
DnI+wruv+H8Wdwyv+//SN7LGfMP+UL9f+lrsWNQz1jtjT8GT9BfPQQmesV6X
8sUsnrGe8V/0XWo2z1gP+WKpuI8wl75TZPeMdU/fKXJ4xrr96qe4yjPWNX2n
yOkZ65K+U1ztGeucvlNc4xnrlL5T5PKMdUzfKXJ7xjpk2Cmu46dUMsJ3ljye
sfbpPsu1nrHkdJ8lr2es3UXP8qXnG/k9Y23TfZYCnrE26T5LQc9Y6//SWQp5
xlql+yyFPWMt032WIp6xFnKWkvzk11a+UyV6xpq7p/pl9fOZZ6yoZ6zZb/a0
SZ6xpld+2mKesSZXftrinrHGV37aEp6xRuk77aeeses8Yw2v/LTxYh7vGmTq
aX3z4zOqfKf1WXf1r/y0N3jG6l35aUt7xupe+WnLeMbqXPlpy3rGal/5act5
xmr9Zk9b3jNW88pPW8EzVuPKT1vRM1ZdTusTbj4P5BPPWGXPWLUrP+2NnrGq
v9nTVklz7IpOWzXNO/CeNqtn7M+esWqescpXftrqnrFKV37aGp6xiuk77RT9
pF3evKZTvnyma/78pjs9uuXPr5/5mNjHlZf8kxP4fy7T6tprg5/FT/YqUMD0
pceAggXN4EKFzBB6DKPH8MKFzTB60Jh+95IvyWfxZPOMjXMuqQ09OtBldaXL
6kmX5V4SLmcEXcroIkXMTfQYW6QIqfJx9D/BjEtM5HGcaaznN2p5xsqn7zLH
4H8UV0luUVt7nc7UDaTrHKJTNooeY+h6xtN1TSpa1Eyhx1R6TEtKMtPpgWeM
4R7GeH6stmesXPqu96bwep15pevt6Vwv5hTXStdhJtK13kzXhOubVayYmUOP
ecWLmwXFi0dNSvHidH56aebSgw6R83s1uE8lX/Jljw4vO69pTZfdni67C8iB
Lrk/XfJQuuSResmTdUpn6aUuLFHCLKHH8pIlzcrrrjO3Xncdkcgq+p8Fr80K
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
OgsWJ4MsKU6QimJxEAAHuTkaEHdy1DheENTCdGqj2mL4KVw2GZy8qA84GVul
U3rHVsXHd8kAvyjKvjLelotRpxOuEpdzduq2ugX73SYMfH0xtdu5dHsUldSA
MjbeYwzXbpEe29aHch4PRD7X+LJQTtRAsSrmIRLX4GgAFPOCjWEekJXXSPV0
cuFCDj7vLPy6eUC/p1/GumK+cF3x0XfCZQ+gTPIaMZKAfX0ziBlDzaqlfaNc
CD27vF3cN9wbj6/g66QBG3hmMqcF2jaFql06XF5IT3lm/MYst0CvVltcoiWa
l/XTKgvZpMoCxhZJpQWxvdv5llJze1DKSKDJCgPQ1weZ1LdwJgED7V07fiSN
nJdXdO3YSTt63E07yhumHSHhAmAj+ZFYGuIA5jrM+Big5zvV7mUWMYPL+0e5
9nl2rX3eL6x9DsrgpgftNL/WV9+1cGwXNhhfjdRLTnb5Ob48e7IY9/EXGFua
PcLXFuX6KNmkKgouEh/iQFHTl4qzT2zLnnlvI09f32hZea0ssRDCuMzQSWHg
PRXGv5TB8arDyEEGB+Pa/tyHSKnRxCZNqlGGhruFW+UgPVe3T6OM9TJbxHyA
FDHPHltaBkwtxS6ARqSeZxavscxsYyD1ysZ2eON6uXXTqJfb3im+r3Imvsq2
LYF1K5c+WjUI14j3KweEpY9IcuMP6xA+0Z0BSF9UQZNPJVEvrE7PCIO4CxRp
5Opw5tShEOk95+JSN2NzdVJlTmWPzWCz6ZucO/uEVl7OKUj56lPbWZRa5VJD
KntsqXLLMTCKxrfTvQn+yrwMdlAc2XGYIbVhYHNJ9aZhSXUtgcpmg/8S9Rau
Cosj28fqwbHl1Of18OZ1ZFGB4y56obptay2EjSq3XbTSbQ/pbxVEWzKYMMro
l1CJAev0NhRqLTbW5bz+7Yj4+1yiiNfjRBSPuUTxgVADi3ebT/cuW3VQC7ou
bmtRy8zmDaW6W7w+mO0hUmnQFi3nguVajdBSxciWF6GKIkoVTqF9bitYTdyu
nirgYZKPcvT41DjplEYp1BReYVw7BI42E4XWU8eh5Df68pe1GT0aJOSMoQLu
bqb1jm1bOtS5HFKoUBQ1QuibqHqLP0LVu9sunQQhuW43yDoHMvqwYDVtmSzC
OrlGNs04NlfsYsndqg8eFz1vCUESxl5jQsJ5bF1qh/citnGhpyg5pnrdEGhT
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
JKBPMf0GWmwlteka87vujEnA8WrWC4xITCndDiEqYT1KoCG97WxHuxldvOfO
EaDBAjSr7liO7zfQ30HCV5Ucp4SHih3LLJ90xzK9xZKPSUM+ZQAo9S4KCvDI
bfJDJhFrFKrf3BRu1BrkL33diR0sHmgZjaZ2aBtdvFNfU6JTvyj6C9PPFe/U
j4eN8ZdskGhjztgwnzUzbZ1pGPfTuNNfFGABmlu45xwf7dNeOQNosoXQFDJt
deuPLaRlK0rb4kuTdM0aTDFP4OAlt+W6WxTvke23WrYQ89jCEiUyCZ74LmsA
RGApKLDUASwtBJamIZsktenGfIHesGhYhf6wJboM5FZ0JbsNNtf1GMr9ivi5
xxAeo+O8RVd8ZkCapR7DGk1Z43SDLYA0yNmTbrdeztI92ot1onFahDg3yLZc
uizySem0t+k2XLDHpQYn0jnjvM0oC09xoViqhzLg6e0i04sm6R16M3mj+xua
paMpa6leI7it4/X9Rpvr+4/hvg83DBjDrXlL9RmJqfbZH75Z9o3lCmZZNCYb
8vZhC2rbHY5pbYGep3O9Qquj4gfcgto7dMcjIjPx+1wJg0ya+vrh1OejqW/M
urhwQ0fggLLbdgup2k57r+Ey5ZjugeO4Cxfas5UZOjkBbXeIftCXr/Sg8TYA
4Sua4Ku/wuauWJsFgwLEdnZtQRZbccBSst09uEYLOeGEmL17dAfh/bqLEHtI
o7yHNCunMd2vZcsx25uI3i81Zn05Il+muaija1vRNLdlCk8imc7UjSnuOpAF
BDreoW8NT++QidzMqOyIqdzfCr1syt0005THY8wsfkZnPNw3mlETLD6fzYeB
UreIalsavqOzTS9mvnUz/2Kn+vcWnW9b53ev1oF9WHfnHK1QIco7NbPyMvBh
LfSMpH3sskjnlJfyfORbJqgnZIQpz89ym4x7mXKS2UVbdhYVSsKENCZTNLr/
QmCgAzBRsSk7chpPM6YXvb3RUqzixAVE2BUnpaj6xhg6T6CXbKm+o7z07Jvz
a8I5LxxUXLd1d/uoBLFzDtU4V7NQVjkFtnHC+3S+H9K5Roz9RKVKHEM8U7ky
/exjXFMZi1VYHDmiWyKJNy55zSydE19X7s1RmLUask9VGJNPpn3R1l1IUQqt
o+0yJDgk9w0kK5jGR06nSZ9pKoyfy22Y0dYBHXzQz63y9OX0czfesoIsDLT7
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
rN545VPag/8XDBpJ2MapW1TQHtDNYLbs6nmnVrElUTct18nn0jSfrDEJe5h6
hDRk725+iUlohmywsmJX2az6igvQtIpZWbHr7u8gCYMs6CysztrqwiqpPF/6
fQbOHIQnZs6Gem7XfilWcCJg97wWrH1bE5rjm2nbFNefYxKkwlS4b6SbsqTC
5ZXEJZeTISHXqlWLvMO74ywsuzoNFSRRLc5FewuuvkazoNub7H7Mt7mr8pVP
Vk+Fe7pO1GqHxB7Smo3nnHqZ8Z1E3Y7T2mU44ractplkxKGyVyuP6OmpS8KV
mpXxKzUnHaPoWTeyhbDQsVfoFuAGYAxmZlPPbfnWHW5Me2ayesZ68/98LMds
Q0JbjNqSj50Vq3Mv0nvZpRwM4xAyiORqroldusKEuAuY9zjZjJx8/qzsIEgI
QvLG+OvrZdg85GUncoWjJ213gcedus9vx9V9jutHLjI86pRK/0lnA1KKLA9N
IbiGmQhCG6owMDE0uB2sUfJmptOYolae66545bfeR28dK/vw47aq6XVIDdxn
bMuLX2iqII17fmLWsP11/+nc9Yz0Xb4v5SaLZ6wf/8/D+Sd3qwa29W9tb5v4
RtFupe4wzyMLC0LbY4jczVmen6tw5Vfcn//nC2omQwKdcmomv+kWftcrtu7a
3x0X7S+ShTAnc65yIP/PnWal7XdVmThbeflqoVxISszLnKsawv9zBMXy7ea5
V5wWySSrFnq+6luiT+evf5o5p/3MM1bWM1blN3Hazz1jvqSo/9On/cIzVtoz
9ts47ZeeMd93fxun/coz5lNmGXBaX3Ze1d/Eaf/iGfNVa/ttnPZrz1jJX/20
Pk5J8Iz91TPm2+fzf/q0f/OM+aq1V/vVTxv1jH3jGfPtrP1tnPZbz5ivAOb/
6dN+5xnz1ZP4bZz2e8+Yr/pT9d/EaX/wjPk6I/6fPu0/PGO+5p2/jdP+0zPm
a9GbuacV0zer+xH/0fvIj56v+bo+1/jlU/3b87V8//VT/cfztbz/9VP95Pna
tf+XTvWz52t5/uunMp6v5fKM1fz1T/U/nu9e4xnL1PNliTmffe0TQZd5Kp/1
ePV//VQ+NyTnf/1Uvrht2u16MvJUZeM+Cogqo86TzfOdtKugZP55fN/xnfvX
Oo9vTn1z/988j4/Sa//Cea7yfMfHx7/WeXyc6ZN2/7+dR+SgXzvUzcTvilZI
JYMy6WvaBIDe1/svHMnzxOOyZ0s6fvFX2fcpgFeNnI/iMPwY/wtiqGvaB70U
nGlU2gedCM40O+2DdgUHrUv7oHXBz92X9kGzgzOdSPugUcGZXkr7oK7BmT5O
+6CGwUHfp31QueDn+P3VaR+ZLzgdvy/pHBmOqjyM/M//AySNz3Y=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.702948393215852*^9}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[GraphicsGroup3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA/ylb0AG98r9/mavLyMvSPzUxBa3Y
+7s/re8z/+IP6r+qSkw9jDPhv2MBwW8vS9S/QuC/cKlU5b+wNEoJ7SzrP+kw
o5SbpuG/UfAxeTIFvr8EU6QYibfvv1uTngyIeM4/F7vPJtp33b/v+jaGQoLd
Pxep18T3XOk/4Pd6nhHV079yqAPFjG+SP8FXJGKuS++/2mLpyNGWpj+28kfz
FETwP/tHT2qE28A/j6evNM0LvT8J+6W5GMfVv4c+rhosw+4/8WlhaTTX6r/h
NJMzIErdv99thtnHveU/KBfNH9N3hT80Zc+R/9fsv2kGQjlf/ee/a7S7/i0S
0z+sP1MZQWjpP/n8gqP25+m/JgQKYkO26T8+CIMwabPsv6UJqE+/+8G/6ytX
ukL44D+8TxoMzhTiP0dmvGWLJ+w/QgzfVwAF5T9iJfHhRsTBv+G1Y2931Oi/
QUMJ/h5n7D+8sQfU62LgP5a7+Ina9qq/8spGITCM8D8KmymOqn3Pv1+GJwgc
puI/WX3QeA==
      "], 
      {RGBColor[0.5, 0., 0.], 
       Line3DBox[{{1, 2}, {1, 3}, {1, 5}, {1, 9}, {2, 4}, {2, 6}, {2, 9}, {2, 
        10}, {3, 6}, {3, 7}, {3, 11}, {4, 8}, {4, 9}, {4, 10}, {4, 12}, {5, 
        7}, {5, 8}, {5, 9}, {5, 13}, {6, 10}, {6, 11}, {6, 14}, {7, 11}, {7, 
        13}, {7, 15}, {8, 9}, {8, 13}, {8, 16}, {10, 12}, {10, 14}, {11, 
        14}, {11, 15}, {12, 14}, {12, 16}, {13, 15}, {13, 16}, {14, 15}, {15, 
        16}}]}], {
      {RGBColor[0.51953125, 0.5546875, 0.55078125], 
       SphereBox[{-1.17114430798631, 0.29368801011732865`, 
        0.10931162094238263`}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.6665847017420747, 
        0.8492341214602188, -0.5515878584933748}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.11726680239547817`, -0.9911542397772739, 
        0.2380533277147617}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.4604401949899723, 0.46107543093596254`, 
        0.7925986141756621}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{-0.30987968899341745`, 
        0.018003654026792444`, -0.9779884259066806}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.04411941125426262, 1.0166215422788532`, 
        0.13169913473990377`}, 0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{0.11346132789881679`, -0.34027689103815867`, 
        0.9613247414690286}, 0.2]}, 
      {RGBColor[0.21484375, 0.5625, 0.6484375], 
       SphereBox[{-0.8387701090062462, -0.4576492789900169, 
        0.6794165848290808}, 0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{
        0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, 
        0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.29798459888735945`, 
        0.7939763540871261, -0.8095658486926417}, 0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, 
        0.2]}, 
      {RGBColor[0.7578125, 0.17578125, 0.17578125], 
       SphereBox[{0.5303052558386957, 0.5650396572477727, 0.8798272120504372},
         0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{
        0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, 
        0.2]}, 
      {RGBColor[0., 0.41796875, 0.28125], 
       SphereBox[{0.8875880204815091, 
        0.5120753422939326, -0.05266459402297767}, 0.2]}, 
      {RGBColor[0.984375, 0.71484375, 0.08203125], 
       SphereBox[{1.0342255878319375`, -0.24602252904443161`, 
        0.5827770385041723}, 0.2]}}},
    ContentSelectable->True],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA/ylb0AG98r9/mavLyMvSPzUxBa3Y
+7s/re8z/+IP6r+qSkw9jDPhv2MBwW8vS9S/QuC/cKlU5b+wNEoJ7SzrP+kw
o5SbpuG/UfAxeTIFvr8EU6QYibfvv1uTngyIeM4/F7vPJtp33b/v+jaGQoLd
Pxep18T3XOk/4Pd6nhHV079yqAPFjG+SP8FXJGKuS++/2mLpyNGWpj+28kfz
FETwP/tHT2qE28A/j6evNM0LvT8J+6W5GMfVv4c+rhosw+4/8WlhaTTX6r/h
NJMzIErdv99thtnHveU/KBfNH9N3hT80Zc+R/9fsv2kGQjlf/ee/a7S7/i0S
0z+sP1MZQWjpP/n8gqP25+m/JgQKYkO26T8+CIMwabPsv6UJqE+/+8G/6ytX
ukL44D+8TxoMzhTiP0dmvGWLJ+w/QgzfVwAF5T9iJfHhRsTBv+G1Y2931Oi/
QUMJ/h5n7D+8sQfU62LgP5a7+Ina9qq/8spGITCM8D8KmymOqn3Pv1+GJwgc
puI/WX3QeA==
     "]]& ],
  AspectRatio->Automatic,
  ImageSize->{405.1107926485941, 394.0649264629567},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{-3.272404722806738, 0.7551222441281401, 0.4137121300796525},
  ViewVertical->{-0.7573826652557494, -0.7049966884748058, 
   0.04830963667514405}]], "Output",
 CellChangeTimes->{{3.7029451078201227`*^9, 3.702945124337616*^9}, {
   3.7029455620609283`*^9, 3.702945594212677*^9}, 3.702945631121757*^9, 
   3.702946849623753*^9, 
   3.702948203815749*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvUd0VFvS75lPVXXrK4y80ntvpcyUF957SSCDvEcWEBICIQFyCIEs3nt3
vavrvTd1q+qt18Me9KRXT3v1pAc9/Pd/n5NKBDfvB3WLr1+zVsicTJ3cEfHb
EbHPOTvY0djXvmdfY19Hc6N5U2/jgfaO5oPmjd29PPSH/6ZQ/LdLlCmzQvwM
hWL+iwX8p/gDWltbEfmnkL72Sj8qzE+9zu+KpOhvTbHfJH5LEl9TooeKfvud
dvE1OXpoxW+/M+fJd/p++52bn3ynRn6nSXyLE0drnhzdS0+/3h39+//76ZdG
oy/970+/dCH60v94+qVH0Q/84umXPon+1etPv/T36EtX5ZeMMdzxv0XfNPHb
b/q/op9/8LffBPmD+W+p+L31Ge9cKr3wx4UvCGn5F/8s8k9SuOm5/vZJX/9B
fJUO1ct/bYjxAfM/xzrBS9GPr/19J/iP6Aiqft8JFkdHUPH7TrA0eoLy33eC
hKgKJb/vBMnREex89gmWxDhBWnQEhfIJ9P/iCNTREWz/fSfQRk+w9fedQB9V
YdPvO4EpOoINv+8ElugI1v6+E9ijI1gtn0AnffvT07P1P5+SzuhZVi44y+N4
/NTb3dFRL3v2h0qfJ0Wy/zPGqXzRT85/9qmkzJEqfvxfY5wqEB1VzrNPlRUd
1Q8xThWKjirr2afaFB3VuzFOlRk9VfjZp6qOjupWjFNlRxXMePap9kdHNRnj
VHnRUQWefaqx6KgOxzhVQXRU3mef6lJ0VE0xTrUiOir3s0/1WnRURTFOtSp6
KuezT/VFdFTLYpxqTVRB27NP9b9ER+WOcar10VFZnn2q/yM6qtQYp9oYHZXx
2af6f6KjkrPv/JsUW6MD0j/7LNIPi5+0lfS32n/lb3+z7vRGNVL9G+ezR8en
iY4v7d84X150fI+rhuR/43zbxFepXEv8N86yO8ax+GefT5rJLH92/GUxZSl2
LEqgJGLH4iRKMiUFO5ak/IFfUhXia0r07IMxPrE8xrGEZ49iWPwQJwah+MtT
w4gMYXEqPzuNokThEqUiDoVLVXEoilfxw/gjdixVSkMc+D2D+lVyHYqYb8df
FlGWyLIoXh7SoiRpSIVLUilpKOInF3EExfFqFCdosDNBG4edido/8IuOnyqO
FSWoOco0Rf8LGd1x6XBixGdLnjTYouTI6NKEoVDMke3kyHZxFCWJWpQm6Sh6
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
aw9XBO1cMXaxBNxfhpwDlcjpqYpDdm8NT5XVW4NMxoJQV3lkl81/sZ9dkQge
gEp0gzEJH2dBa82H3r1mQSeYMpiXV8O8uhGW9a2wbOqCdVs3rIUHYdvZD1vp
UdjKh2CvGIW9ahz2mlOw103CXj8NW8MsbJFOMNams6IRjNQGxtK4oBUMGTBU
TULHua9lLNAWcmKvb4/U8rGaI7K29ycxuadFvM0Ev4ERfgsT/A4WeMUs8Eo4
w8vmPc5IX02v19DrNWKmZ4hHaDPEdUYBQ5kvYqhff5wtxjH56uhiBLamI7gr
E6HdjOzVKxCuX4PMJi77WjYjs3UrZRvClFDz5phR+v+TmayTZrFK6uQSgtac
CZ01B3rnChj8oovLdphzS+jdSlhW18O6vgW2zR2wbd8Pe1Ev7CX9cJQdhaNi
CI7qMThqT8JRfxqOxik4mmbgaJmDQ+ricp5ygWra2y4ybNvaLspdXPZciHRx
OQdTwxwMtZzWjADaUk7pHX3OGBaYb4moCHE6F3A6r6KD19HBm+jgbXRwISu4
nfMOZhVfLqanYrdXfBUO3yVjE+v6Uqwt52kxjv3xOY897xXe5/CW/J9meCJX
VgJS3x2tOUxvidYX+TD6VkeapxTBsrwc1tU1sG1ogn1LG+w79sJR3ANHySE4
ywfgrDwOZ80oXHXjcDWegqt5Cq6WWbhaz8DVdg6ujgtwdl6kXIaz6wocklyF
nd8XNk+x7DkPE+etsW6aXjvJuXmM9XZX9D8rWmgK+b8xeokVF+fkKpXsso1c
dG3lomu7mb4plPrXbWdA3mJa8Cex7mrGevT52d6INZ+et3P/c3vIKM0n0ZxE
awnRO5kw2LJh9Cx/3Jhk2S7YVlfCvr4Oji0tcOzogLO4G87Sg3Dt7oer6hjc
tcNwN5yAu2kC7j1TcLfOwN1+Bu7Oc3B3XYB73yXKFbj3X4VLbkwi9yT5Cxz7
r8O+7xpse6/A2nkJljZOrxY6qX6STmJlVHwoZtSK5bRYe09jta78d6wdK3qp
ntfaBtaWPs6DDLmRhy0LRlcezIFVsGSJRh6FsK0qo6Wr4djcCOeONriK98JV
2gN3xSG4qwfhqRuCp3EMnpYJeFsn4W2fgbfzDLx7z8G7/yK83ZfhPXAV3p5r
8MiNPBSii8fNONHEg1HE2XNjQRuPy7C0C3vPwlA3AV35MWsMM8QKa7F2w8Vq
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
mqK3bd8auWdNUrk070c4UQfXCycq3q8pWu0FLGJtiHUi2vJLYmokVSP40z59
WG1PV/s/1DSt9oDC/0jT1Kye1sWWJGs6JDRN67LCoGjaTk0z8i9g5F9Iy75D
aJru0C5al0pal+ocqZFE7iLMe7yL8MBMF2GveICpaCJ8fqaJsDFfBkMAI9aE
WB+idbw4rKoNo/JV1Oy6mmlR2xfV9mi1taB27BlqXh/XvHVW60+MWl9Om76K
+2k+bfom2vQC2vQioXXa9FKalfKI1NyQUE2O7yHH63JnNbaJJog18cY20cwm
Gn/ims8XO6k4JHUAKR1uYmmIZbIrS3Wlq/FUzaNR21XVfNQn1wx+geNq6D9z
7YtsZbwzRWm8Wk6jvooWZh2N+iZamK20MEW0MDtoYUpDivaj4pZ7aj9HbjWZ
brya3VYoPYqgaa2oMDcpk8WaZDQkZARK8SYssW6qckSr+VPfuqWmWr/KMbVp
AmobxK85MWoO0DOAQGYWVe+g2QnMagwSfW/ruAA2cgEU0OwUcQHs4AIo5QIo
5wKoIgQ1ojEo3vdGCPblPtH3tjpRagyaIzBQtC+hIr8s3rafb6/PlZtDd0XV
nAs1J0TNoqgpXq1er5ZT/k8Ur+bNG55W8SL0pc33EoCw6FQh91eS+2uNckdW
gdKRtUPccULul4uOLNr8mqjSkZUt35//eKdKgtSqImzNauVBl1KfygGlV0Us
lNoc2XwV+Z7W6VYzDz7l+6ltBGrJQjXY1NQcD66egZqnb+gXDUFBmpqsNLlV
Yg0N/HryezP5vc2pNAP5nmgGEq0SWUqrxHK5VWJazSsT5HaJ55UmuDypbULS
tniPgERoWTTPlQSeOq5UU4ccp8487lb8S3GovFXtGbVq1uwZaljeS6hdL7Uc
oQXJoQXJi9+wT8dlKx2XIlqQEmq4jBakghquooZrqOHaqHwb8+wb9g9IDSli
Jo3oSjmQK5xDal7SrCC8IH9Z8KlzKmoEV4v81dSpZuDV1BnP2zwDdU43EwaS
5P6HXKpzDdW5fvYN41RnqejroTorg7NuGI8+ccO4UGmOcDsalgu3Q/Q9CDUL
QtfGZJWWyg2HaupUyyeqvU+6F07qLVfLVKrtfmqgPEMlWpQLJgSpxOxU+a77
tTSsG6nEgvjNzK7Hb2auid9DGpHvXN4bI/H2ZYmoRLqZOSbfbS96TUq8sxej
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
lywZCf3P5BMflQ4n8dMuIEcW4T1+2o91M+7DN7Pch59k94FxGeMGfuJ/0m/4
iZ/6R8r3lG8pX1E+4evv2LQJQyqfJv/ffcKZl0R655h0bA5Dxplt+jNu019y
m/7aLG/R31v58bgn/2DT0sbbdQl/prnUcSPQcWfU0e/S4n1rRsLwb/s0S9T1
1a5Q8xXNAukDfRj3G7gPfsl98Ct+qK/5ob6yarglpeNz/vsx/37XnJowqvK/
rfvNnyBuvl9J58LgrvyKdlHCOZWrrP3NV5b+Vbvb4HdeSq3wseb3XUot0776
2V1qlcox57+/lFoeM+8Pv5Rap/7K33cptZxV7h9+KbWRPyt+36XUckTL/4eX
etzaSb+o5VVyfsd11PIIWSrHXP+j66hN2Iz9gddRGyIb/R3XUcsyRP7A66iF
7+HfcR2dyjmZz+g6IZVj7n9zHb3KOcE/8Dpq8X/gd1zHqHKO/79/nSe3wenr
mFXO8f2O66ilA7x/4HWsKud4ntF13L947V++jk3lHNfvuI5d5RznH3gdh8o5
asf+3XXU/m+1z/i/uo4aNmoY/rvrqHHll7n5267zy2vll6+jtgbUbMDs6yRO
v6K2Ep/+bDW7Ynrqs9Wsm5oV/G+crWbp1XYE9bPV9hv9/+hstb1XbY9++rPV
PA6f6tlq/oOa36N+tpoXo+bF/TfOVvPE1DxR9bPV/Eo1v/qZnL3o8bPVfHW1
GEP97GyVd6oNmP5vnK0W9ajFfv7/wtlqkZtaCKt+tlo0qhaW/zfOVguq1bIL
6merJQrUMib/jbPzVN6plkN6+rPVklkB1bPVMkALnvpstVTU/P/q2U+89IvX
mfc7rqOWo5v7B15HLf045w+8jlrO9vnfcR217PNfVY4F/0fXWa/ywl9+x3U2
qLzw5z/wOmoFqD/9juuoVeKe++9fRzJiM9ZC7R6DxH9zttqnkIvY6nfVhmed
a55+h0fR3Owz+Lvy5pB8UR74/574L2ddsUf+Bjxy+Zff9NP0mzZPf3XlJemt
ydOvK0cT/p//H/ARCSI=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot3D", "[", 
  RowBox[{"DisphG", ",", 
   RowBox[{"VertexCoordinateRules", "\[Rule]", " ", "CoordRule"}], ",", " ", 
   RowBox[{"VertexLabeling", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"VertexRenderingFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{"#1", ",", ".2"}], "]"}], "&"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702945179880554*^9, 3.702945247918913*^9}, 
   3.702945315459345*^9, {3.702945346818919*^9, 3.702945347755122*^9}, {
   3.702945463421103*^9, 3.7029454659074497`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[GraphicsGroup3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA/ylb0AG98r9/mavLyMvSPzUxBa3Y
+7s/8WlhaTTX6r/hNJMzIErdv99thtnHveU/re8z/+IP6r+qSkw9jDPhv2MB
wW8vS9S/QuC/cKlU5b+wNEoJ7SzrP+kwo5SbpuG/F7vPJtp33b/v+jaGQoLd
Pxep18T3XOk/4Pd6nhHV079yqAPFjG+SP8FXJGKuS++/UfAxeTIFvr8EU6QY
ibfvv1uTngyIeM4/KBfNH9N3hT80Zc+R/9fsv2kGQjlf/ee/2mLpyNGWpj+2
8kfzFETwP/tHT2qE28A/j6evNM0LvT8J+6W5GMfVv4c+rhosw+4/a7S7/i0S
0z+sP1MZQWjpP/n8gqP25+m/6ytXukL44D+8TxoMzhTiP0dmvGWLJ+w/Qgzf
VwAF5T9iJfHhRsTBv+G1Y2931Oi/JgQKYkO26T8+CIMwabPsv6UJqE+/+8G/
QUMJ/h5n7D+8sQfU62LgP5a7+Ina9qq/8spGITCM8D8KmymOqn3Pv1+GJwgc
puI/ezzQeA==
      "], 
      {RGBColor[0.5, 0., 0.], 
       Line3DBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 5}, {2, 7}, {2, 
        10}, {3, 6}, {3, 7}, {3, 8}, {4, 6}, {4, 9}, {4, 11}, {5, 9}, {5, 
        10}, {5, 12}, {6, 8}, {6, 11}, {6, 13}, {7, 8}, {7, 10}, {7, 14}, {8, 
        13}, {8, 14}, {9, 11}, {9, 12}, {9, 15}, {10, 12}, {10, 16}, {11, 
        13}, {11, 15}, {12, 15}, {12, 16}, {13, 14}, {13, 15}, {14, 16}, {15, 
        16}}]}], {
      SphereBox[{-1.17114430798631, 0.29368801011732865`, 
       0.10931162094238263`}, 0.2], 
      SphereBox[{-0.8387701090062462, -0.4576492789900169, 
       0.6794165848290808}, 0.2], 
      SphereBox[{-0.8144392952376528, -0.5375424573160974, \
-0.31708894647092317`}, 0.2], 
      SphereBox[{-0.6665847017420747, 
       0.8492341214602188, -0.5515878584933748}, 0.2], 
      SphereBox[{-0.4604401949899723, 0.46107543093596254`, 
       0.7925986141756621}, 0.2], 
      SphereBox[{-0.30987968899341745`, 
       0.018003654026792444`, -0.9779884259066806}, 0.2], 
      SphereBox[{-0.11726680239547817`, -0.9911542397772739, 
       0.2380533277147617}, 0.2], 
      SphereBox[{
       0.010482453735345468`, -0.901366982255388, -0.7496791952436982}, 0.2], 
      SphereBox[{0.04411941125426262, 1.0166215422788532`, 
       0.13169913473990377`}, 0.2], 
      SphereBox[{0.11346132789881679`, -0.34027689103815867`, 
       0.9613247414690286}, 0.2], 
      SphereBox[{0.29798459888735945`, 
       0.7939763540871261, -0.8095658486926417}, 0.2], 
      SphereBox[{0.5303052558386957, 0.5650396572477727, 0.8798272120504372}, 
       0.2], SphereBox[{
       0.6568605152355149, -0.13880239517520027`, -0.7759358573509268}, 0.2], 
      SphereBox[{
       0.8034989275767017, -0.8969007441994632, -0.14049521817657964`}, 0.2], 
      SphereBox[{0.8875880204815091, 
       0.5120753422939326, -0.05266459402297767}, 0.2], 
      SphereBox[{1.0342255878319375`, -0.24602252904443161`, 
       0.5827770385041723}, 0.2]}},
    ContentSelectable->True],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAA/ylb0AG98r9/mavLyMvSPzUxBa3Y
+7s/8WlhaTTX6r/hNJMzIErdv99thtnHveU/re8z/+IP6r+qSkw9jDPhv2MB
wW8vS9S/QuC/cKlU5b+wNEoJ7SzrP+kwo5SbpuG/F7vPJtp33b/v+jaGQoLd
Pxep18T3XOk/4Pd6nhHV079yqAPFjG+SP8FXJGKuS++/UfAxeTIFvr8EU6QY
ibfvv1uTngyIeM4/KBfNH9N3hT80Zc+R/9fsv2kGQjlf/ee/2mLpyNGWpj+2
8kfzFETwP/tHT2qE28A/j6evNM0LvT8J+6W5GMfVv4c+rhosw+4/a7S7/i0S
0z+sP1MZQWjpP/n8gqP25+m/6ytXukL44D+8TxoMzhTiP0dmvGWLJ+w/Qgzf
VwAF5T9iJfHhRsTBv+G1Y2931Oi/JgQKYkO26T8+CIMwabPsv6UJqE+/+8G/
QUMJ/h5n7D+8sQfU62LgP5a7+Ina9qq/8spGITCM8D8KmymOqn3Pv1+GJwgc
puI/ezzQeA==
     "]]& ],
  AspectRatio->Automatic,
  ImageSize->{368.06054866986204`, 386.4357844095518},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{-1.1335061876901074`, -2.854805566732032, -1.4195946247517455`},
  
  ViewVertical->{-0.8517202785191242, -0.13083575390249907`, \
-0.5678427877012077}]], "Output",
 CellChangeTimes->{3.702945180745796*^9, 3.702945223391652*^9, 
  3.702945316715263*^9, 3.702945348415783*^9, 
  3.702945467479197*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQdc12l27z93a3qyN8lmsym7ubnJ3fyTm5vc6eMUe+9jGcvYBcQCCoIC
igKiIiIKCILSO0jvvffee++9d3j/n9/vC79xZr7Oxs3muq/vog9PPec853zO
8zznzI6TuhpnL57UPXf65C83XTmprXHutM4vN2pdEUXf/29vvfXftMVn8su3
FH/nrbdW/q8V8ed7qKmpPVT87a23mhQ/vq8oeOv7ir8q/qb8l6X0+zrFjx8o
SpS/fkv5V1b+iL8/kOpVqer9+DvrlavG+31lwQ+/Vm+57lsWUuViVad/qCz4
/quVpfl+o+yu1DBf1fAnb9YwRzW9P5Op9EOZMnOpYYZqxL+QqfQjmbI7UsNU
1Yg/l6n049c3TFSN+DcylX5HpsxMahiravhLmUq/J1NmKjWMUk31f75ZwzDV
iP9LptLvy5SZSA2DVA3/P5lKckJxW2oYoJrqv75ZQx/ViP8mU+mPZcpuSQ09
VSO+I1PpT2TKjKWGrqoR35OpJCe/yw2fqxp+JFPpv8uU3ZQaPlNN9VOZSn8q
U3ZDaminGnG1TCW5HbPc8LGq4XqZSn8uU2YkNbRSTXWTTCW5rWYoNbRQjbj1
zRreVY24Q6bSX8qUGUgNTVUj7papJLe5r0sNjVUNP5ep9NcyZdekhkaqqR58
s4bXVCMelqkkp070pYa6qoZfylT6hUyZntTwsmqqJ9+s4UXViKdlKv2dTNlV
qaGmakR1mUr/Q6ZMV2qophrxnEylv399w1OqhhdlKsmpTB2p4XHVVC/LVPoH
mbIrUsMjqhF1ZCr94+sbHlQ11JepJKekpZm9tU81VQOZSv8kU6YtNdytGvHG
mzXcrmp4S6bSP8uUaUkNt6imaiZT6V9kyi5JDTeoRjSXqfS/X99wrWpEC5lK
coZIEpS3PlWN+FCm0v+RKbsgNfxI1dBappKcBVtu+L5qqrYylf5dpuy81PBt
1YhPZSq9LVOmKTX8P6qGjm/W8F9UU30hU+ldmTJp3771K9WIrjKV5IythtTw
H1QjespUel+mTFIxkjpSjugtU+mD1zf8G1VDf5lKH8qUqUkNf66a6kuZSqtk
ys5KDX+qGjHkzRr+qWrEcJlKn8iUnXml4Td+JdeFHCaRdP+3MI34KdvFZ//5
LuQAzqlXu/iWgxMm02KNTNnJ7+wlVKbF2l/Xi7wTJcfYdTJlJ359V8EyzTbI
lB1/tauv/+p7MmWBb9btf9SXC5Apk4OPx17f7Q9kyuS25maZsi9f362cA+n3
X9Otr0yZHBQ++vpufyRT5iNTtk2m7MibdSunL7e/WbdyrrKXTJkcrJdgsKyX
JudIy5mFXTJlh17f7e/KlHn813TrLlO2R6bsi9d3K+fbu8mU7ZUpO/j/vFu5
AwUXmbJ9MmUHXt/tH8iUOcuU7X9tmez5gdxhhBzSkfPx9r2+2z+SKXv+X9Ot
k0zZIZmyz1/frVyZHE6U81f3/j/vVk46HGTKjsqU7fnPdyvne0tnDrLskbPG
cuD92Jt1K4fn7GTKjsuU7XqzbuV8FLlzhJ2v71bucEoCPgLxvLcetY/2ovbx
IdQ+PSq+w7Le2m9hSEki/gC1t1eh9u4m1D7cL4Y9gdpn51Bbexn1DXqobzJE
fctN1LfeEt9N1DZfk4jyY9FEMVNFky9FkzOorVE0Oy8+DVnpkTsz2fH6Gcsd
xEkb+U/EjD9B7Z2Nglh7xBSOCSJpor5WRzlbjW2mnNtlgea+R5w/aMP5w085
f9SB80eeonnoCRp770vD/a7o5jOxim1i4QfFKk6jtvoS6uvFojffQF10o7Hj
noCKGrssxDTUd5ijtuX6Msm+PbUzMmXb32x1ks37UzGtteLbLFa3T6zuFOqr
L6Kx4Rrntppwca8FWmIVWsefoXXGFW0NL65c8OXKRX+0LwWgLX5qnffmkpqL
WK3VslX7iUSxtzeI5e4Wy/1Sotj6q2hsMUZz1z0u7H/EBUGhi8efc+m0K5fO
uos+3Ll4xoXzx56K5RvLmrLvWLacLZE76zywTBC1t4U8vb1FuWz1Vac4v/YS
FzYboLXnDlcPW6F/yoHr51wxuOSDoU4gRvqhGBlGcv1GLPo34rh6I158segY
RHJF9yWXzjkvAyYFSdeIb9Py8o+jufoCmhuvcWGnKVcOPkT3hD26gmRXBen0
tQO4phuCnl44uvoR6OiHc+VqCNpavlw87SALa9Rkyra9GRn2L/9GIsNWzr33
OedWneDy+otc3W6AwcE73DxhjYmmI2aXPbir78+9G6HcN43hvnki9+6nYv4g
A7OHWZg8zOaWZRaG9zPQv5PMVeNoLuv4LKPdP1dJmLogh/oHX6Iltu3lrdfQ
22eG4XFrjDWcuK3lgaleAGZGYdy5HYPZnSRM7qZw614aN+6lY3g3jWumieje
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
7zuQZONB6vOXZHpGS4Ek4TkUxBZTlFxFcUYDJbltlBR2U1I6oAwmKaoao6B6
gryaKbJrppVp85OrpgVunRDOzQiBuX24p7RhF14hdn/i8kuHPyf84McUXt1B
w92DAu2dZNRLm5nw2ywmC6SX5wgVwiI0CJTXHiO5AsNZUt63KelZqCKz39J4
sXAD8ulpSVw+2/02r+S0uBxPNWUY97PX8/RXKp5K6v+v8Nn2CWnndlFqeIjG
B2foctRVpgZVtJpLcWYpT4CT8gjB0ySxKIWJExB4WHjCE4KvMy1CbjskM7ec
GlRh6oSZZ0bwenS6k97RZpq6KimuzlxWWn/HzY838GA5k7/z3i/wOXGW4Eu6
RBmYkGD+iFRrJzIdvcn1CKEwII7i8DTK4vKoSCmlMquW6vxmqks6qa7opbp6
iKq6MSobJilvmqasWTghLXPkN8+R3ThLWt00CVXjRJQOEZDbhXNCHRY+Gcvv
nP6MmOOfUG60kzarLxh8cZrJAB0B3YV/lyEYWiQYWu0lAJoiud438hAuXzRM
dycKLzp8JWZELoZezqeT099yvJS2nmz6tn9U8VIySD8XUGUTxfr7hHAeo8v+
PEPe0v6cT1pOXFoWJKCKEMw2IZg9OUIfCx00Lng5rTjRaFIegklGqVN5pqow
SjOzrYxONNLdX0F9cw6Z2cGSHP4PAdU+ECp4A4+X/+sC3ocOE6w42NTVI/H2
HdIV1+D2L/j/iXsL6LiSLE3Y0zPT2zs9013NVU1TvbsDuzPbf++0y2UXmElm
ZgbJkiyLmVmyJIvRYmZmZmZmTnGKGfLbiPdepmXXU9m1Pef89nlKnXzKfBE3
bty498aN76v2D0d9RCKaErLQmlGMjvxqdHHJzd6GAfS2jqC3cxK9PbPo7V9E
z9AKugTrbIJzZBONAi7BOcAmOLPb2QRnKE1wxlewJdA/ZUQ55EAzu49IAKaM
jUxDiEpsyCi6AS2+RIPJSPZT7ME4BipRNMScJ8BovR8jUEP25O2HntfnA8/5
jiP43yUj+N+4iVv24gzaTW5g2OkRhAHKWIo1Zj4hKn0N1BHT0h7PriIjZASn
yMo6SzMMjQzy5huU0h5mNdla7cIKcTdmhPUYJjO3qSH5v3Ajp7r3CzIBj8P9
2BkEXryMmPu3mRRjjo4Wii0pR4Mz6nz80BQaQdatJHSm5aAnrxR9JbVsmrGh
G8NtgxB0jUHQL4RgaB7DI0sYGlvFwMQGMeKb6J4UoWOSJTioH91AJRlVNtU4
gZjKPrxOrWKrlX8mEWGJ8kH02l3AhM9tsn4+w2qqBjbyyVwsJ+tojSM2G9yw
3uhBbKgHJsvtJaO2bfS4w+rfBL6ihpZv8eQbsl/uPGSfSobsn7k/rde6gL6X
t0iU9xTz4erscBU4AlXeLHCqeDUYz3uD87pIjOhKAwueutLEDOEGcQgWhZUY
H8pHZ1PCD7ih0ty3j9knpqQKEdeuIOnxbWSryKHIUJtyQqDe3QUtAX7oiIpE
T3Iy+rNzMVRUKsnyjbf1YHJb3ekkV3c6vo0fYmiOKNUsmSDTIrTS2lMyjBWD
xA8ikzKptg8BWdViBIVvzorvo8H8OAY9LmI06C4mop9hIl4Bw7Hy246ps0hY
nBwlFOMfOkR8rE+/2HmIficZIvbk7c/RYkhRSW9j2k+GSc0wQ1TsQGYUGaJW
YhV6iH0fImvcWCablpkuZIFb5+gMK8OWsBjLY3kQ9qehpy6UDcT/ABeOwiH2
1lWkP7vDFHhWmGmjzsESLa9d0Bnqh764SDL4yRgpyMV4eRmm6ureKvCcE5Bl
cnwac8J5zM4uY2Z+HUJKRrEowtgSIFgk4YOkyHMVtSMLKOmdREZTH0JyKnhP
C/9oJ8Gzpu1tBE3D/xSZ/4Z9JHmLPaPz90TmZyFwvoGZQDaBwCY+7Ig1difW
2I8oG5ka/dEcaG3K9ygcLGnaliAVKwOJmGqPQG+F1w85UbsdPYKQc6eReO8q
cuTvoFT7GWottdDiYoFOP2f0R/phOCkSY9nJmCrOxXR1KQmca7HQ0Uqcz553
6iPnsbRAIo3lNcyvbGB2dQvCVREmVin9A2XNYFksmsbnUDkwgezmboTllLxH
1HxSedcZoCPChyPHJ+yf7yzsjyUKzh4n/jFKlQ9hwP4ypvzuso5bug42C825
vIIbRC00r+APUWcQ8+C19kDMN/lipMKZS5b/AR7HDiH8wmmkPriCArq9oifD
VROaoy/QCcMxvhhPDSf+TxKZE9lvqgl7uGrCUVpNOIr12SmsL85hfZlWE65i
ZWMdS5tb3FGWLUysbUCwzLJetE3NomZwBHktHQjLzJYgwm8XzhvITT6H9g1c
JJ9g+RjPfrazYH8hESwLLfF3bFQbcA9zMXJYTFXDco4eVgpNsVxsgYUSS+Zh
w5l6P+Zk6H5sPyIuSCHj0WUUK91Grf4TtNqqbau284YwIwxzhQlYqszCKnPE
40213aa42m5hEqKVGYjWF4gTtoz1LZouWSeBEnvUY3pjDeOrKxhcmEfnFIlo
hgaR39QIr7Bg3vPr76KgGe76FoX9f5HmO4bm5xJBsudNv4GmxpfMYsuSPmXe
izh3HJmPL6JM5SYaDB+hw1ZpW02aJ+aygrFU/HZNmojWpI3SmjTiyc4RL3aJ
RJurQu4kxAJXk7ZCIk6aZ1hlTkNMri0QEzuNbiEJDQe6kFdXwaeDfPLbURvf
+SyfdeWT5E95JfkTiSQPvPOZ7W3Y/t3i+Sx+L/T0IWQ+PIdy5etoNLyPLlt5
DHnpYjzUCjMJ31KxNdbMVmzNkyBveYS4lxNsxZaIPSZAK7Y2maqtBSxuzmF6
bRqjC+PoITpc39uMjOKMb9FF/tX/u+ukAs8nfsIryTdIkYd5JMkXo7HP+1Ty
nu+JL5B+9xTKla6gyeAOemxlIPBUx2SoKeYSHLCc7Y2Nkm2VTj00DUK8vXGi
mDNtRGjEMV+hDB4jHPkIW0RP0yFbXLXT8uYUU+00OjeIHqLM1a2lH6KQwNvY
V+J/PPHMTl7Wh0vyhxJJHt/2Ge67eHVSvIy/O+YJVw+j5PkFNOrdRM/LRxC4
K0IYrI+FeBusZrljszgAqCFOQgstAMoh0iRO2Xg1ERrxmxfIVF+hLB8DHD8J
TULQowkTEIkmsEGLgNbYIqCRqQ509FchvziOVyf5MjCsOPkRdHdC1/0usv2I
V7ZvcCilvpNs+dr+M+Q9lSLxyRV0Wd6BwEUawkANLMSaYi3DAZtFJKSsJiFl
MwmHu8VJAeLwTpOQcl5MD9IlrpCh37k1RLx90eYgNtfZKhnhTCsGBdWob0jj
E+vOgILf0NLvKlE+HNQf80r0zbHkszyf4Yvs+Tba/pqTaOylL1GhdJYE6dcx
ZH8fkz4KJFTVxVqqFTbzXYBKX6AxHOggNqCfBup5wCSxqLNVDKMHVihVRjsN
1umzN7pI+8SFJAszDRgfrUBnWzqvJ7QztiW/lu5sJN6fyfhw+b4543uB5zN8
Grtz3cPHTMlFg/YF9FrfwJj7I8wGK2ElwYCEDy9J+OBKwgc/YlvDWfYUGlWP
kRWLhGeYK2frfZfr3jCocCUXqzNVmB4pxEBHCp9Y+bT0b7lGvaOlfBLl6+GH
SvRHEomK35Vm8LnJz8vbvkIs6g991Pc5YWY93I9WEvsO2t/ElPdjLEYoYy3F
AFt5LyEqJ8Js8GV5Vnpj2fh3NINh4cB0AVuWMEcVtxSi6WKsjudhdjADg81R
zEPI8z50ym8Hkt7+j/aVDyz5Q/OlijwSZb0fVoTXtn3mu4rwB9y3tRqdw7Dj
dQj9aGqYEproQVRACU0cgXovootkheom+thPU8TM/v0ucSwrIrHs2mASZjqj
MFDtzffo3/O8x5eA/P63iJAPKptv+4BPhHxKyYnwnWl+9Z1PS+8Aac73FNag
foQarWNMmDrpfRvzEbJEFzWxkWuMrVKij9VOEDV6MrwodPtb1BVMvPoQEh4F
Y6HFDxPV7jutyHSN+FBBvktiwXXlL5Ehnxr+/QfLcEdkZl63/ocYdL6ICX8S
kUbLYilFFaskIl0rNMF6mTVWy22wRK6ZEiuMZBt9Cwrn2+/9hue9nYXHr4V8
+PIfujHJhyHPLvq8EQFrGr8xhjsD0/DFmXzSfb+kPuF5j4/94b/yN5HvMR+6
k88npL97n5A+nACCT1f4jDNfF/gk//F3khR/O3fkZ/mAUf4WcfFF7pf+E8TF
p1h8IuQT1y8/UFw//JZ28vnJH1pjysf18V/fJy7++POdVM+HKtaHegJ8UuHj
0fg2SfF5+B9aXscnKVYpeeu1L/7nS4rPC+X7LJ8J55PU33+LpPj0h0/PPlSn
vqOk3tU9wx2SXnwi+VDqB76wim868lkjPsvLZ7z5PvvX3B3GPWXA7A5Aeg+F
T7zEAbw+gPRByjMg94Zn4PAjvioedg3hPSp/Yccnv1+qfMq3s4P/funzKd+P
uG/gUz4+W8+uPz/75t8zSE8HIf3ZSY5eYNvx6SMqkDmuBZmT+vTkNGROmzLc
AjKnjSAtpcVbMfv97yZScRy+TaQS0fKJjO89PsXhW1P4lFOMwcknxh15c4gt
ZZVvH3eqlDti/PkVIr57RHzPIHNIGTLHtJmTpc/OcEeMrzrS08WQv+0O+Tvk
uu0KueuvIH1KUxxk8Ujy+zy3zv8nSHLncOn9U5CPFej/TZK/4CTJ8QYwcHRU
ivdZTNojqnh2Qg+yZ8yhcNkWCjed8eKeF1489oeSTDCU5MKg9DwCSgqUMyAU
L575E8na7+IT599+N3FuV2D6/k5i5FtW+brLZ/z5xLhTml96BzLSf+C+iZ3H
hzlxEjF+RqzhvnuQPSAL+WOqkJUygOJFS6jcdID6Aw+oSvtDnYhMUykK2urx
0NRMhoZ2KtR00qGmS0Fik6GiHkNE6sUrTlbdePHlz/E0c7vYufd5FxA+U8cn
Tr71lU+cO2eo359vYzX/E4loWZqAU5D97AJk9t6BwgEZKB1XgcpZfWhcs4TO
PUfoS3vBUCEQRqoRMNaOh6lBKkxMsmBsngdDy0IYWBXBwLoIOuR3DTPKoZIC
JUW/XU///xXxzqmc94t4p7IUqrF8Kxw7E37NmU924j/bTcV6Hgp7r0P5wGNo
MAwqOjC8ZQ7Txw6wkPeCtWogbLQjYWeUiFcWGbC3ycOrV0V45VQOW5cq2LjV
wNKtDqautTBwqoLuq1JoWmTxKS872rxsUWd4WrxdAcU5Cb51mk86fMrL9x5f
3Mdnb77HjQ3LrkSUcu8Z4vVcI4vOHbZ9Bykezl3WK6eYb7sZB0mG4QqQwvPP
zkJl7yVoHLgLvZNyML6oAYs7JrCRtoP9C3c4aQbA1SAS7hRGzIaFEfNyK4WX
VxULIxbQDPfAVrgEsTBiNv6tMPduhL5rFbReZvIJ+3vfTdjvGrk3+0bvF/aH
Brl86Qh2PfzRtpV9P6R3H38bU+bgc8Ypon8jc5JiyhDHSEoP0ic12Uf/TsJp
RhHvlD4/DfW956G7/xqMKaPKRSXY3tWHo4w13JRc4KntCx+KxWUdj0CHdAS5
5SPEuwyhATUIDWlESEQbgqM7EchhcXmLWVUiu2Ed1AojMigapjG8xoOTOh/h
5Okdpf4m8cKpOp+W82nqh1Lx7pzd+GgbO9OpbexMchJ2JvoZygQne/kV5K45
Qu6GM+SIQyB73R4yF8y+LxmAAwwWpvLnp6D1xVkG28r82B3YXJCF4x1NuMuY
wlvZHv46Xgg2C0aYTQwinVMR7ZWL2IBSxIXWID6qCfFx7YhP6kFc6gBiMoYZ
fKuwzFEEpY/AJ3UYbgn9sCUDZOBZyrtA/tV3G4BvS/Z/6CjwLYofmo1jbc3P
tjm1xxiIcBYnWkzjpPk2RcCdbRQBspQeIIxzwwKh8MiD04DfMzxZMmRO0GNI
Ol9QiNLzsDpyBfZnH8L1liK8pfUQoGSNUF0XRJr5IdY2AgmuiUj2zkJqUBHS
IqqQEdeAzOR2ZGb0IDNnEBn5I0grHEdK0SQSi4WILRIiomCS4W/xSOnHy/Am
5oT4X1EJ/hX7GzMgfCzVJznhM9byMw4Efy9Z7fce4Qbm+98YGG6G8AUafASU
O+XrqF/Jl0dmTd4v3lol37jHDyF3SAFyJDZ7ftYUytftoHbfDapPfaEmHwIN
4tNpEZ9Og/h0aoxPR/25FKgyoP+hu8Qn4GUYbP8jZEykYPL1WQbOyfHUdXhc
ewq/x2oIeWGMSG07xJl6Isk2CGkUHNQnDTkheciLLkNBYh0K01tRlNONooJB
FJWMoLB8EgVV08irmUV2zTzSq+eRVDmL6DIhgvJH4Z7aDWPvfHbKfNDgHGN+
/gPrhn12lGOVuMUgvzGDcFjhDSHm0Rfkd/7yFPHKzZeJZUfso7dGh5G8BG2O
rrB3SVT8iOLMkWfKkNcnEkXgXvnILtnJ+yuObOrNQMruuQQZ4qArHpaHspQm
1C+ZQvvOK+g/9YDh8wDGgzShHqRhGkxMs2FskQ9Dq0LoWxdDj1xaEpKpWG6S
U5Qdit9/jAzmKbw8eA5OJy7B6+ItBr0zXF4LsZrmSDJ2RLqNN7Jdw5Dvk4Ci
kEyUxhShPLkKlZlNqMrrQFVJP6orBKiumUBVwwyL4tnCongWtCwju2kJqfXz
iK0UMqd9XkXXsosQs3/ILT0SmqNtY8mWEP2YA2wjY7nn/DZCwxeQOarBLq6n
jCmXIWTOWkLmnBV5tYA0k3VQ5+Wn5xvT33CjzYz97iPkWWdJREQpGh5xCzlF
AdOmwHDs806bcJkNHRYyaOdpuZcDajjGOK7yxHF9se8mVIlSaJ9Wg8E1I5g+
sIOlnAdeqgTAVicSr4yTYG+ZCQfbfDg4lMDepRJ2xGG18ahjqa3caqHvVAlt
W0ptFc88TG3vARh9dZxMy1NwpJh0Z68g8OY9REorIF5VF6kGVsiydkG+sx+K
vSNRHpyMqpgc1CaXoj6rFg0FLWgq60Zz9RCaG8bQ3CJEU/scGjuXUN+9ghoO
YrOka42D2KTnt0bhldbymD5/G1oG72AeZH7+7A2NGvEvmRwIXbgpOQJllDlp
wDD8UBnKX3di2E2fkwieMpwqPPTB8wdekL/rCtlrL4ngVd6Kw96qm+KdsD8B
S8F4iP37PRfZ/IvEadDDs9NmDLsQZRZici9kyXp+14O8uhHnwWFH88vO2n2M
0aGYC3KkbwpEgdT2XYbO4Ycsz9YNPdg8toa9giucNf3hZhgBT8skvLbLgrdL
IXw8y+HjWwvvgCZ4BbfCI6Sd4ddyCO7Ay4BWmLyuh65TCYMnp/vFQVgeOA6H
w6fhcfICAq9cQ+SDB0hQUES6tj5yzV+iyN4N5Z6BqA6KQV1UKpqS8tGSVc5g
zHWUt6Ortg9dTQJ0t02gq2sGXX2L6BxYQfvQOlqGN9FArprBDZT1rSKvcxHJ
DRMMlc1Dyczd9fa+Kzf24gzQ9rFnUfF/wbm7ZCL/WYohEmAYHw8p4hmZWHJn
zPDiih1e3HZlZEvdBBX5MKi8iIKKUgyUlWPJRV6VIqH4PBgKTz0he9XkGy7L
Tns0n0j07yuIeU2liVWV/uIBZIj+Me4KmdjPL71kM0f3vaD4JADKxFVRplkj
0g4lhnEynLgugYwu8C3db3ThIAdkfRpa+87D4NBNmJ9+BtsbGnB6YgZ3RQe8
1vaGn0kYAm0SEOyUgTDPQoT7VXCEXy0Ij+lEaHwvghP7EZA4CB9yuRO33j6y
CxYBjeT7dxP36CDsDh2H27HT8Dt3ERG3biBB+hEy1JSRZ2SIEhtbVLp5oM4/
CE0RsWhLSEdnRgF6CirRV96I/toODDb3Y6hjBEO9UxganMOgYBkDo2voG99A
98QWOiZEaB7fQu3IBkr7l5DdJkRUWfeue+9MfN6ggk8hvuaGhFWIYxJf5Rnx
HZ8fUcRzKV0oXbKAxh0HaD7xghYrcOiqx0FPJxk6eunQMsiCplEOtIyyoWGY
ycBgqWrFUax7YiSsmQcZ7lDuyheBfCxR0q/eKOlnxEjsu0/8p+d4fkILL86b
Qe3mK2g89IDGswBoEWXQ4RgztXTToaGfCQ3SLnUDypjJtoe2gc+HZlOgXzAy
kCeeiupeKTKxz8Jk/yVYS92Hw7UXcH+sDx/FlwjUcUeoWSAi7WIQ45qGeJ98
JAaXM2xkyXGtSE7uQlL6ABKzBIgnPm1M7jgicsYRnDUGnzTKcdVDlvvdsNh/
EE5HjsP75GmEXrmE+Ps3kf78MfK0VVBqboRqRzs0vPZEa0gIOmPj0JuWgYG8
QgyVVkFQ04TR5i6Mdw5iom8ME0NCjI/OY3xiGaMMvv4WhmZFkjNOLZMbqBlZ
RlHPNOKruu5I7AZftp8zHv/Ac+sria4cZfREjhhu+S/vQ+WoAtTP6kDnhiUM
HjnBRN4HZiohsNCOgaVhMqzMsmBplQ8LmyKY25XC9FU5TOwroE9etSkMFrmn
YUJZTSMgf9vkO+nKr7ifYnY/qis0IyXLMDDJQvWUJrSumkLvvj2MZL1gSnTS
XDMaFgZJsDTNhIVlHsxfFsHUthTGduUwtCuDLtMm6qYxUIrfku/9gjgS+xkg
a70vT8Ns/3nYHr8Kl8tP4f1QDYEKpgjXdkCMmTcSXoUj2T0R6X7ZyAwrQXZM
DXKSm5Gb0YXc3AHkFo4gu2QCWcTfTi+fQTK54kopnOok/LMFcE7oJK7hAbgf
PY6A06cRfeMyUp/cQq7yE5QaqKD6pREaXe3Q7u+F7sgQ9CfFYTg7A6PFRZio
rsZUYzOmO7ow0zuI2eExzI5NY3ZqATMzFGV/Q4KyLz6A1TW7gSaiT2X9U0iu
7bgl0Rm+RPzf7Kwz7IGI3zCOBuWdeL7nHJS/vAnNY7LQv6AJ0zvmsJJxhK2S
N+y1QuFoFMdQJbnY5cLVqRgubhVw8ayBk3cDHHyaYOfTDGvvJph7NcCIOGK6
DqXQss6Cmm74t9oZvhz8x9xPFubtJOQ+OwulfdegfvgpdM+owviGMSwev8JL
BU+80giGg0EMnC1S4WKbAxfHIri4VsCZtM3xdQPsSZtsyGXh1Qhj91roOVHo
7Gz6PL79q4+4qaTIQDucgPn+M7A7chFu527C964cQuS0Ea1pyUA7pNoFIMs9
Grn+qSgIz0dxfAVK0xpZWIfCPpSXCVBWNcFAOpQ0zKOwcQG5DYvIrF9EUs2c
BEfT9tDX8Dp+FKHnTiPhzmVkPbuFYvXHqDJRQeMrI7R72aEnxBODsSEYSY/H
RH4GhOVFmKmvwnxbExZ6urA0NIjlsbFtwPsrLPD+6iamV0WYZA6VbaF/YR1t
wkVUD00gtaZpF8PlxIwIX1qc2+P5Ec8tljL0t8xa8Iws4op7zkDji0vQP/YI
ZhdV8PKuMRxkX8FF1Qse+iHvkCyVIsC3miFZ8g9thW94B7zJgu0Z2Q23iG44
hnfBJrgdpr6NMKDY+MQBVNXypeL6UBViTcOvmcDo2e7jeLHnNPE1L0L30D2Y
nFWA9S09Bt/LWdkd7jqBeG0WAx+bVPg55e7QvG7SvB64MJhencS3aIahZxXT
NMNdvHsA7Or1C6LBe6C57zAD12p36CzcTl2G37W7CH/6AnGq+kgxtEGWjQfy
XUNQ7BePsvBMVCUUoya9BnV5Lagv6UZD1RAa6sbR0DSN+rZ5Nu9BnpfSMIvI
8lHyvV+yTyczOv/5LVRoPUS9uRLanAzR42uLwXAPjCYGYzI7FjPF6ZivLsRS
cxVWupqwNtCJtdEB7tCckD00RyH411nIJDEEPz0wN7y0iq6ZOdQOkVW0qIit
JGTMD19e7vvvV59nJJBU+vwUibLPw/jwTVhfkIfDXR24y1nDW90N/kaBCLaO
5pC28hDlV4bokFpERzYhOrYDUQkcylYqh7KVKoBP8hA8EvrhEC1Gy6f0CilU
PHxOGF9C+1ecdaRMm4p7pIh7eg6GB67C8vRT2N9UZ8DAXqs4wU/fF0EWEQi1
T0aEew6ifEsRHVyDGNK8GNI8CgIWlTKACOJhhKQJEECa9zppCC5xvbAJp1Qd
ldCyjGVGjm/nk9WhnxELuBeGXx1hsFtdjp6D38WrCL//APEKykjXNUKu5SsU
Ob1GuU8YqsOSUB+fg6b0UrTk16GttB0dNX3obBxBZ9skZ3b+Fm0Dq2gm4UsD
uaoHiNvau8rp0O/gd+IQoi/TA4SXGKylGt2HaLZ6gS5XfQz6v8RolDumUgIx
mxeDxbI0rNTlY72tAhu9DdgcbsfWRB9zgFC0MAnwwfWL1jGzsYbRlUX0zEyh
dqCX5cxldIkva8WVlvyY59ZeTpeUPj8B3S/PwuzAJdideQjX2yrwljVBoLoD
wox9EPUyHHHOiUj0zkZyUAlSImqQGteEtOROpGX0IS37DWNTfMEkYsgVkT+B
4JwxCbD+y/AmMu8Ld9Ilvhw9q0vsTobinuPQ+eIMTChr68k7cL7+HK+f6iNA
xQahBp6IsgpGnGM8Er0ykRxYhNSIKqSRJqandCCdNjFnGKn5o0gumEBC4RRi
yBVOmhiQzWZpbSNbSPMKmAcbSo6s/IBNxO4mkcQeusNFwrovKHnzBXKdo3/H
Jqs/Jg7TPlgcOEIcYCl4nzqPsBvXEf+URkqqyDcxQekrB1R5+qA+OALNsSlo
T81DV14Fessa0VfTiYHmAQx0jGGwdxoDgwvoF6ygb2wd3eObaB/ngBo/RdkA
Bc+YRnRFL3xP7Efs5RPIpqcslW+gXv8B2q3l0eeuA0GgJSZjXDCb7o/Fgkis
VqZgozEXos4y4gzVAaNt3CnLIQ75X8gi/4sWsUVPWWKF+T+3uYjx5Rn0CgWo
6my8JFE0vizMD3ZWNPY07u9JLHKAyfGa7z8H+xPX4HFdBv7SWghTtUK0kRsS
XgYixSUWGb7pyA4pQG5MJfKSGlGQ0YGC3D4UFA4jv3QMeeVTyKmcQVbVHNLJ
RfO6sWUsVL8/GWlK5m0VSjHh4ndSOL59drHxos3U/uIkTPefhd3Ry3C79BC+
j1QRomiCaD1HJFj6IsUpEhneKcgOpinocuQn1aMwsx2FeX0oLBpGIeWnqhQi
r/qb6efgglF4pffCOqyGd1uENaw00byHDRmJMZXeQ8LYfWKqEZo4fMYVlYkT
zvRVjv3sDxl9+QVZPffC9uARuB+TQtCFi4i9d4OJyfJ11FBmZYoaF47zLDIK
3cmp6MvJx2BJJQTVJB5r6sIYicfG+8YxPjyD8bFFjE2KLd0f0E2xJiY3SeBO
OU5nkFTby8DJx1w8QnTyHCpUrqHR4C66Xspg0EMD40FmmI5zwEKGN1aLwrBZ
nQhRcxYJ6IqBwWoWhHG6E1joB1ZHgA16wJJltaI4U5vkWiPXwsYMJhZH0T3W
xRZyMePKlwngyl8/4rm1h1NItb1HiHtxGq+OXIDnhZsIfKiASCUDxOvbIdXa
C1kuYcjzSURhaDZKYktRnlqHiuxWVBb2oLJsCFVVY6isE6KicQ5lTQsobl5C
Ablymt7mBPDPGyBWkCJRZX93hfwtaeZhYvmkiMN7Dm5nrsH/jjTC5TURp22J
FHNXZDkGIu91LIqCM5gUekVKDSqzW1BV2I1q0szqajEJ1hyTPhdTF+SQpqaR
ZsZVCxFSROdNC/Sd4/h0kn3vJ5xOfs3mWRkS2svEGN7hEucKXDJbXKpHk+dm
bAKdeTWGtJQ2+82sCfkpNPZ9BofDh+FzQgqRVy8i5fFNJgYsM1RDrZ0Zmj2d
0Bnih774KAxlpGKksADjVVUk/msi8V83ZvoYljVWLf8HhAubRD1EGN1GrtY8
uYKKQRKGNnQznYk4ux/Zj06hQvkymg1uM7BZAg9lTAYbMsiQy5ke2CgKgqgm
FmhJA7rzgaFyYKKeRYdcJN+zOgBsEjUVicm0hNgi17poEgtEfcdme9HcVX5O
YjL5nLm/e7+GGnx1lAz7GbgT55fm3KPklJGkZYxMC0fkOfqy+fbQVFTH5aM2
rRL1uY1oLO5EU2U/mutG0dw0haa2WTR2LqK+i+baV5lceylHfZvVuohkohpR
5RRaqwM2YUVUknz1vXxqwWroJ9D/kvpYp+B6/AL8r95C5FM5JKrpIsPYhmHq
LfYMRXlQIqpjclCXUoaGnHo0MSy9/WitH0VL8xRa2ueIyDiG3r41VPdtMAhg
+Z3LyGieI/OZDvGPuczeIbYo4rOzHKMKt0dPiXYYRpXt5Y4OkL/BlDuSPsjf
cSd9kL/tAtlrtpA+rcdF+T+C85GDCJA6ibibF5Epc5MJJWvM1NDsaIpOX0cG
o0SQHIXx3FQIywowU1dJw8i/5hbn5ekZLM8vYom4+gsUlmSN6MOaCGOrlLZt
HR3TS6gVTCKroY2RnfeJ3Ui/cwxlL86jWf8GeqzvY8RNDsIgbSzEWWA10xmb
Rb5ATQTRwkSihcRYDhWBaD/RwgYWiXKVaOJGPwX9+h6FoqQALFsCrK8PYo4o
6aCg5qxEAfkWZu6Qzk94bn3G/PwdAxDmfPQM/InnHPXwIZKV1ZBtZI5CO2eU
eQagJjgW9THpaE4tQmtuNTpKWtBZ3YOuhiF0t46ju3MaXb0Lkg2A1mGWbbdu
aAOVA+tk7VhBDhn5pPpxhBX3wDWhnN3k3lZBZsgcEGOznRF3biNRQQGZugYo
sLZDmZs3agIi0BCVjJbkPLTnVDCsvwzzQuMgetvG0ds9jZ7+BXQPraBTsI72
EWIUyFVH2kFByQp7FpFONDCyrBeOUQWc9v+KK8HZz+XhKCEHpVe4ztYhbNtY
kj1rDvnLdkxyX+GeJ148elOLoCRPS0PDmXoERdkgKDz1Jtpnx+WufwjXo/sR
cuYEA9ibJ3+TiUAbLVXQ4WqM/kAHCGJ8MJEegZnCFG7t/RHWBjuxTsnfhGNY
n5/GxvIC1tdIlLCxjuVNslKSS7i+gZGVVfTOzqNeMEL8pErxqfLoC1+gSFYK
DTqX0W15CwKXJxD6K2MhxhBr6bbYKnQHqgKB5miyPKcQQ5pDlmeyTE8TzVug
qFetHN9XNzUKm72kYVtr3VheaMXkeDVbVvLX28t2eI7W7axz/0IM3jF4nTiL
8BvXkPTsMbK1NFBkaYFKF1dms6E5Mg7tyZkMg29vSS36q1sx2NiLoXYBhnsm
MTwwhyHBEgbHVtE/viFhTWibEKFxbBPVw6tE7xaQ1TaJuKpe+BDDSf+xO7TU
2yfjvVeKePss2wf19rn73MbMb4m1OwqP46cRcuUKEh7fQabqCxSaGKLCwR51
3j5oDotER2IqerIK0F9chcGqZgw3dkPQMYyR3gmMDM1CMLqE4fE1DBI/qk9I
FitytZF2NoxRuLVl5HdNExeijwTlBeLz1ZLiJI7FQXrPNWavS+7gc8ge02AY
nxUvWUH5piNUH3hA+ak/1ORCoK4YCU3VWKirJ0JdzA+jncpxxMRBWTkML6Td
xXGP85EvEHrmKFLvnUfRixtMHNv6UhG9HoYQhLxiFfEjrNTmYL21jKhAPbYE
7RBNcnDByxQueA5bm0vYYOCC17BMrrmtVUysLqJ/dgoNQ71sp36JtDv7JTj9
Q/Z3MeX9DAsRGlhLMcNWnj1Q4QU0hAAdZEHuTwVGiEJOUdj1Cg6KjSLoEf9x
tZk8ugnrc7WYGSs+JbF9P+VRNu6YLN8tBlJ717/C8fAx+J85i7i715Gp8ARF
BhqosrVEg6cb2kKC0RUfjz6OlUFQWYexxjaMt/dhsncEk0NTmBydk2C1jRJH
RDBHloI5kDkpQoeQ2MGJNVQJFlHYPYmU+j7O2SeD+zlZ1b6gFQL3IX2AOFaH
6BkIRVYXj7Flf9JHZT/hVNHh8BH4Sp1GNMUxk72HAm1FVFoZod7NAW2BvuiO
jUJ/ehqGCwoxWlmN8YYWTHb0QNgngHB4EsLxOQinljE5s46J+S2MEr9paJ40
kzS3fXoDDeMrKO0n/lNjH3yS81hP9decG8htd/75NGT2XIXMvvt4QVqreEID
yucMoXbdGtr3naAr/Rp6zwOhrxIBQ804GOkmw8gwAwYmOdA3y4OeeQH0LAqg
bZ4PDcoubZQOVZ04KD5/zark3yDk1EGk3z+LEsVrJNi9x6rgzzCT6IHFnGCs
lsdjsyELoo4SEuMSnRhtYfGKFyheMXHSNqZJfDvHwN6IsExiiSUsbi1gapWE
3NPDqOtp5AKvnyPz4dfEOG6jBAiSx0qcNjYzzSEqdgRqX5MlOZgsyTHEONJz
95lv6ADomXsKZjBXho2pQnrmXkqihz/jUbYfvU8P/xdcjh5B6IVzSH50A/kq
T1BhooEGR0u0+7mhJzL4DfdDeSmm6usw3daO2Z4+Et6PYG5sCvPCeczNLmN2
YR3TS5uYXGLB6YaJo9w3v4mOmTUyyAtcqelRrkKFrHNfPST6R08v0UMkmsSp
12OcevG6TKthqGMvfdqQOPYa4vjZ+cghBJ05xYC95SrcQ7n+C9TbGaHNyx49
Yb4YTIzCaE4aJksLMV1XjdnWFsz39mBheBiL45NYnJ7Dwvwy5onXNLtMlrIV
EcbJJVimzSUuxNQSMeFTJHzp3iWmfWWdwiMMu40MUUb5PZfwfN9tKB9+Bg0p
VWhfMoD+bWsYP3aCmbw3LFSCYKUVBWuDRNiYpsPGKgc2NoV4+aoUVg4VsHRi
2W2Mnaqh70CJSui2TB7UjZPIUu7Ceu6fIODkl2IPhbm6baQh8NJgydOSnLGS
54/NimiIGkkY0VVAtKWSQ1Umy+cScdzWBByUkBhVeZaDERJiakmAvolOLoPH
4qM26Z/mKAnuYz5MHqtJWtjKMQPKiJWs8wBa/Vk4gwFiKQVJRDOJtRxLo4AG
WB9KxlRr6EmJNv6CR+U4beRT1D8zP/+deCwHEXnpLDKe3kCJ+iPUWaijzdUC
PYGuGIoLwlhGHKaKsjBTXYL55losdrVhebAPK2MjWBFOYWVuDsuLLAXz4toG
5ta3ML0uwgRxmAXLG5LKZendJ9lSmn00vJSBzCElooVaxLc3ZEp5th9lou18
ftcTz4n3JX/XHXK3nCB7xYoeafoFp5UuR/Yj7JwU0h5eQZHyXdQYP0ergwF6
/F5hKMoHY6kREBakYq6yAItNVVjuasbqYA/WxoaxJpzA2vws1pYXscox7C5s
vsHDo+n97tkF4miNIa+5lQuVfsdVvR/iqHROMST1yvuuQePwY+ieUoTRFV2Y
37OANd0wVPSCvWYQnAyi4WKWBNeXmXCzz4ebcwnc3Cvh5lULF58GOPuKqXRa
YOXTDDOvBhi60WRXETTMksQIRNQ6fozEaxSg6Tya9EiAYfMII56KDEPbYtIr
rOe9hqgiDGhMILqZTXSTrKjjNUQFySq61El0k+jn5vAbYCaGmW0US6tDmJjp
RHtPKbtR8ZO3yhVLlA6QR13AmOctzIZKYyVRFRvZBtgqtsJWlQOZCh4QtfoQ
Qx2Arc5ArLcHYK7Ba9cJtt1kJH/Jo3wcds3PeW79mZsfUZdPIUfmGvGgH6DJ
SgVdHqYYDHHGWGIAhDkxDOXFUn0xVttrsNbXgg1BDzYmh7ExS/q1OINN4phs
bKx+jxPdAnGiZzY2tnlcUmxVzz5a2SX71pmw5xLn34vla5QJZpooPhOmpBBO
fqcBQAAUHnuQ0NP855xaWh7YjYjzJ5D5+DLK1O6g0VQWXc66GAywxVisF6Yz
wzBfnIzl2jystdKdgkYWanByEFtzYxAtk3VtbYHZJVjfvkuwuYaxlSX0zQrR
JBhEXn0Vp5a/Z1ZuWkwm/5kUlIivocFs8N2F8Sk5WFzVhM19E3YPUsUD7joB
8DKJhLdVInztM+Hnkg9/rzJ2oy+wAf4hLfALa4dPRBdeR3YzBD50s88+rJM5
G2DsXQc9Z6KaxpF/I9FMseOX//Qk6rUppdcdjLrJYCZYE0sJFtjIcYGonJiy
hiigk5iwQbK4jpex7G+LRD1Xt7ENU/a3zQFsrvVifq4Vw8PlfOda2IXiB+iw
OY0R7xsQhj/BfKIiFjPII3P1sZBvhJlcwzfW8WMeVfvofVr4vxF54Tjynl1B
tfZ9tFkroM/TEKNh9hAm+2I+LxLLFalYbyzAZmcltgabIBrrgmh6kPgpY8RP
EUK0TtEOidssWiHX2rYY9Ni2uqG73Hk6NchKsQ6/yi1HqD30hKp0ANSJqlFC
SC01tvaatpPWXqvp0jN1xOnXTmLO1Cm9CMTzB3Zcf36NsNOUOOcCKtVvocXs
CXpdNDESZAVhvBvms4OxUpaAjfpsMnWJjzNQzzIIT5MhWCCr2OokGZJZiIhP
tSV6wwcxv7mIyZUZDMyOonGgHTEpEeIqYUrs/PyzE1D9/DSzj2l44BrMpR7D
5ooSHO/rw03OGl6qLvDV80WAWTiCbeIR6pSOcM98RPqWISq4BlHhjYiKbkNk
XBciEvsQnjyA0JRhBJHLL3kIXomDcInthV1EB8z8KWtQ3hvl+C+cGkZf+ByV
yjT+uIZhpweY9lfAUqw+1jNtICrxYPWoPYaLPShgFfXxqrexylFSkFYyF8mS
MVuH8aGC7ZUl29XwzR7KJzxKxOH18S3M/8H8/COCpQ4gV/oCarVvo8NaBoOe
OpgIt8FsiieW8kOxXpUEUTOJj7rJdBkiYzRB2jbbS9pKLPkaseKbYghIlreD
9eKPSeqMZPbehsLBZ1A6oQYV4sFrEA9e54Ez9J55w+BFMAzVImGsnQATg1QY
m2TBiHjvtJ36lkXQtyqCjlUhtCyoF58NdQMaXIZD4Yk961B8Ar8TXyDzwRlU
qV1Hm9kDDLgoYzzIBLMJTljO8cdGOXGWGojD0llIZj2loCBh3WwXaT6Z5ess
NxNEYvqJOYZ+Yol0aWp5FANTPahtL+fM3KeS8jc1Wv725VkYf30BViduw/6S
LFzvaeK1rCn8VO0RrO+FcPNgRDElcCmI985FYmAJksKrkRzdiOSENiSndCM5
YwBJWcNIzBlFXO44Yjg6opCcMfhljsAjZQD20e1EzyqJCML/nluX6rXPot/m
OiY8H2IhXBlryYYQ5duxatEURNbeaDaKGKPsBAUscvV8OUuBPFeBtclCTPWl
fuhp0fOSdfTXPJ/46c4aJrZgmQ9OsTRvlo8w7KFKfFkzLCS7YDWfLNhVxK9s
TmehMSkJ8CQZnjniKywTX2Gd+rLjElhMthz7CFMlJbv7HHum8uAT4o4rQ+eS
PgzvWMP0qTMsFHxgpRaCl7oxsDVOhp1FFuxs8mH3qhi2juWwca5i2mnpVgsT
11oYErdcz4GWJhRB0yKTWLRIzoL9BMk3jqJC+RLaTe9g0EkOk4G6mKdglDle
2CoPJb5OIpF3DsuEMUEWk1lK9tRNZsYAQ+MD0TijPpNkidoUjWOJ+OdT873o
GaoV82rK7j4A1b1sgZzp/nN4efQKnM4/gOedF/CT0UOwihUi9FwQY+6LeFok
55aINN9MZAQXIiuyAtnx9chJaUNuZjdTKJdTIEB28TiySqeQUTaN1PIZJHHF
chFFUwjKo7uF/bCPaYGBR/Y/cAtRo95pDL66himfRwyw2Ua6AasG1W5khPxY
fG4mCkhmvH9Ko0xfKaDZSJ3fu6f0xf+o73NBYqPE50i2qwmHGMznpIk1iJIq
dZjdwbCrHITBesTbtCXephdElaRNTTSVTbzN4RKWC1jibZJ1ZHOIJVTCGOM2
0xo2+c/OQHnvJWgevA89KQWYXNGB5X0L2Mg6wV7ZG07aIXAxjoWbZQrc7bLh
4VQIT/dyeHhVw8O3Ae7+zUwbnQLa8CqAPShq4dMEY89a4peUQcsmG2p6YZwG
/ZLhMGsxvE5k+xCTfioM3CZDSFvq9447QmboLOWFbN0Os8lycDAQm/1YXOzA
2HgtGuqTxNqjtOcQw0Zutv8MbA5dgPOpa3h9/QkCnqgiTMkIMTq2SDDzQKpd
IDLcYpDtm4q8kFwURJeiKKkWJektKM3pQmlhP0pLBSitGEdJtRDFtbMorJ8n
bt4CssmVXreApOpZRJdPIbhwBJ5pXbAOLWfd6L8nDvp5TLy+zWjMWpoWNgtM
sVVhx5KYtbAkZlvEQV9r9SM+l7v4VOZ2bSEfPS9RlN/xaMPP36cof0TWg6MM
6dKg/QNM+SljMc6ExAqOEJX5EmFHEmET5R0kC+44ma4zRFkWKN8CWdDWuxjC
E3r4+NnuY1Dcc4pY+fPQPXADxlIysLqqDrsHJnCSfwU3NU946QfBxzwGfrYp
CHDKRqBHEYJ8KhEcWIeg0GYEhbcjIKoL/tE9TDu9YvrgFt3LHHC1CaEWvZHM
vXJictKhrOTI9uxHqNU4j17rWxj3lMZ8hBaRJAlxitzYedhG/IW+NBZAVMJC
20j9hO9RGlqKL7jSinXSo5mJCnS3JompNqX//BlT92b69UnYHDwL5xOX8PrS
TQTdf4bI5xqI1zRDiokDMm1fI9c1FAW+8SgOyUBZTCEqkytRldmAmrw21Jb0
orZiCLU1Y6htEKKmeQ7VrQuobGMpk4rJld+2gqyWJaTUzyGmcgKBBZS8vo5z
RBjqegx5XsFk2GPMEm95Pl0Ds5namEjX/MYZOWo63mw3/Z5n2DkCgl/x3BKb
jtLnJ9FtcR3jHk8YNo61VAuICl2AGhINtJHp10c0QkDMx+S76d9mxp9U3HOS
CI87bXviPmyvvIDzAz14yFvDR90VAYb+CLaMRJh9EiLcshDlU4SYoErEhNUj
NroFsfGdiEnqRXTqICLThhGeLmDaGZAmgE/KENyZ+rguWAY3wdCrFFpWMVy3
fooWgwsYpjQVAXJYidfBVo41qwqNgUSTxYs8abuwkIHlxEIFyy01X0m8slLM
C3LQUxsiJtek9Dy0ds36oBQcj5zF67NXEHzzLqKk5ZGoqoM0AwvkUMp6Z1+U
ekegIpjur2ajLrkYDZnVaMpvQnNpJ1qqByS09a3tM2ihtPU9y2jsXUVd3zqz
z1reu46iLroTt4jURsq0JIB3RjPvgfftO9nc+7uYVDvz1j/yDO4vdx53NsX5
7yhTPI5+2+sQ+jzFcgzl2STjXuoMUHKf9nAy7vFkKlFOrpy36D0UiH+n9cUp
GH11HlZHr8HhwlO431OHj5wpAtXtEWb0GlFWIYh1jEOCZzqS/AuQElqO1Og6
pCW0ID21C+mZ/WyBWB4tEBtHYuEk08bogimE5ZNJkT2K12mDZGJQG1oHfbcc
tkc/ZlgyRlxuYi74GVaTtFl5VJJmNxED1kn8jX4uD0dzcOMZ5DUDG4JU4tFG
cVWef4Dy5/tgvv8o7A9LwePEOQRevoao+/eQqPACGdp6yDO3RrG9Kyo8/VET
GIX6qBQ0JeWiNbMU7QW16CxrRXdND7obh9DTOoYehmd+nuWZH2Z55ttGNtEk
YHc8qwbXUdJHx3oWSXWjCC5o/9Zx3n4E7k14/AeeweSokvgiZ3Zr79/QZ3MZ
Ql9K8KTCUoqUvuISlwHEqYxgXRYWh5VY9q+gse848dvPwPrQRTiduQWvW/Lw
f6aDUDUrRBu6It7KH8mOkUj3SkFmYA6yI0qQG1eD/JRmFGR2oiC3ny0bK6Fl
Y5PIrZxGVtUsMqrnmPYlVMwgqlSIkMIx+GQNwjmhHeaBZdA09ua68w/ot78E
of99RhBMJqvEGqIaZ4iavCQL5Ua7PxYbX6Mv25T51Pe5MimNffvw8uBRuB6V
gt+ZC4i4eR2JTx8gQ1UR+Yb6KLV5iSpXN6LmgWgKj0ZbQio60/PQk1+OvrJ6
DNS0cVubwxjunsDwwAyGhxcwxEMKL97erBpeRRFRgMyWcUSWvn9w6T96tu24
ZHD/G88Ifrzz4LL1ff8TArdrmAuXxmoKmcAc75Oo1hlbTZ7YIl7FRos3MdAH
iVU7SazaWTidvIzXV+8j6LESIpUMEadnixRLT2Q4BiPHKw75gekoiixASUIF
ytIbUJ7TjorCXlSUDqGicgwVtVMor59FaeMCipsWmdIr2q7MhkWk1M0jrkqI
sOJRMrA9xH2uo7VNrPvKZCzF809r3+d4dfgIvI5LIeTiRcTRKjm5h8jTUkKp
mQGqHWzQ4OWO1uAgdMbEoDc1DQO5+RgqqYCgugGjje3Mrt9EzwgmBicxOTKL
ifFFjE+tYmx6AyMcF/vALNHwGRHahZtoGF9F5dAC8jrGEF/ZzouswA7RNzBI
j0pGSQyGvX0oOD5IvuQCWzr+zxj0vISxkPuYipPHRMIL9IYwBy+JHA7B8oAU
HA6fw+vz1xB89zGi5dWQqGWCdDMH5Nh7o8AjHCUBiSiPzEZVYglXa9+M+uIu
NFQOoLF2FI2NU2homUV9+wJqO5dQ3UX62rWGMnLR9uS0LSGtcQ5x1ZMILR6E
Z2oTzPwyvycZmJ3h6D6F05HD8D3JlYo9uoEcxYco0VNCtbUBGl1s0Obnge6I
IPQnxmIoMw2jtFyssgJTDQ0QtnVgprsPs4MCzI5MYnZiFrPTi5iZW8X0Andk
aEmEkSVs40Qni+TIHIp7RpFU1cw3Tt+GPfuNo6rMW/+D5+6vdx64A8zP35Np
cxh2h04x53KDrt5A9BNpJKloItPQHPk2zihx80OFfyRqIlJQn5CHpvQytOTR
QvY2tFf3oqN+GB3EJnR0TKOjex7tfctoHVhFy+AGGslVSy763JJe9lxuevMM
YqsFf/PtZ34+hcvRN4VTGdI3UKTyAJVGimiw1Uebhw16gtwxEBOIkdQYjOel
YaosnwQVFZhracBCVzsWB/qwNCLA8uQklmdmsSSpoqLncLbEROQYW9liKqm6
ZpfRRMauvHcYyZW1f8mYfCWZTP+y85jw5VH2c3232H8ELkdOMedjI+/cQpL8
M2Rpa6HQwhJlji6o9g5AfWg0muPS0JaWj868CvSUNqK3ugN9jf3obxvBQNck
Bvpm0T+0hD7BKnpHSR+JHe8Y20IruRpGN5lnl/Uvk3GZJQ7aKCJKOuASk78z
1NinksqixNsXkCt7A2Xq91FnooBWez10v7bGQKgbRuIDMJERTTwquvGVh8WG
cix31GO1rx1rw71YGx/G+vQE1udnsL60gLXVZawy51s22fMt5JriKo36FxbR
NjmFyr5+JBYX8Q0LH4YfX6nhPsmw/CvP3d+8f1heHjwMz2OnEHr5MhIe3kam
kiwKDXVQbmOFWnc3NAUGkmgiBl0p6ejNKcRAcSWGqhohaOzESNsARsl0HxsQ
YlQwh9GxJYxMrmGY2O3B6S30ExveM0280qkt5tk1I7Q8Yg7ZbaOIq+yEZ0Le
zsPyj8S87iPDchQpd86jQP46KrXuo8lMDp1OOuj3tcRIhAsmk/wxkx2JhZJk
LNfkYq25lIS8tdgcaMXmaA+2pobYzZ8lIQko57G1sYTNrdW3jonMbq5hYm0J
gwuz6JgcJSa4jXeZ4RsTvjORjAfHvPU/ee6ymSIJhME3T2R/SkzXIabKN+rG
ZaRJ30a+uhzKTXVQ62CNZm83dIQFoTchFgOZ6RAU0lKVKkzUN2GqrQvC7gFM
D45hekSI6Yl5CIXLmJpdw+T8JsYXiMleICabKVnZQscMa8aqhmdR0EVc+pp2
eCdk7gwZ93sESx1E6p0zKHp+FTXad9FqIYMeZw0M+5lhPNIR0yk+WMgNx0pZ
ItbrsrDVVgxRbzXxVJtJRNIFzAyQSG6ERKKTJLafwdbWPLsJsu0wxfzWIrFi
cxAsTJKZ3YfSpoq/ZDj+LJki/8Zz93fvH45Xh/Yj4JQU4u9cRrbcbZRoPUON
pTaaXazQ6e+GvqhADKfEYjQ3nanUENZWYaalCXNdXZgfGCDdHcPipBCLM/Nc
tcYaU60xTaz01Aq11iIMcxUb7dOsY1baK0B6bQvcQiN2Ho7fMURNybdOokj+
Euq0b6Hd4hH6nZUx6m8EYZQd5lM9sZwXjPWKOGw1pBMnvIAEiCSYFtQDk3S/
owdYGgJWx4BN8YbBPERYwBa51snvS5szmF6dhGB2CO1DLbxOMh/YAx983J8k
Y/HvPHfZTMguvlzq19wfBJ0+geR7l5CvcBuVutJofKmFDg9L9AW7YjguAOPp
MRAWpGG2sgALjZVY6mjESl8nVgUDWJ0Yxer0FDEDc1hdWsLK6iqWiUle3NjC
3IYIwnXi1axuYIisqD1zi8zzK/sGkFFTyzcGbG7rt4i7fBhFsudRp3UDHeYP
MOisgHE/HcxEWWEx1QVr+f7YqogCGpOBDhKU95OAfLQGmGrmdgT6iGkiY7A5
ylQO0AJ5uisgItcG+X1pnczmxUEMTbajvq2IT/x8iN58xyX/KBH//+a5+4/v
F3/w6aNIvX8RRYq3UKv/GK226ujxMsNQqBPGE/wwnRWF+ZJULNXkY7WlHOvd
DdgYbMcGmcabQgE25yaxtUSm/doiNjdWsL5JzfAGlsg1v7kO4Qbdi19G//ws
2ifGmDaklxfxiZ/NJf0auY9Pokb9MpNGH3SUxoSvGmYjTbCcYo8NmkqvCAEa
4ojo04no80m8XE5EX0tEL06n9zJpaIYKGqNMEYdoaxQbm8NYWunH5EwbegbK
+ZAdvw1cfbv0GHZW5q0/8tz9lBU7X2L4K07s/icPIO3eOZQo3UC9wUN02Clh
4LURRsPtIUzyxlxOOJbLkrBWl4PNtlJs9daS7rSSKU6mN5m2WNxOELjIEQSS
VVBCELiEidU5DM1PonN8kM3ppPBaHlbsnzD0UOWKZ9FqdB0Ddvcw7iWPuTAd
LCdZYiPXmU1M14eTxT+RWJxMYnEKSXPoTkAdV5jQLklOY6uP2RUQkd83VojR
nG3CyHAZL5omn8z5zjT9i0TV/8Rz9w87y5xV9d8RsyqFUsWraDS4h247eQy/
1sMk3T5O9sASMalr5dSkZkDUUUT0qoroVRPRqw6iV6Qzy0SX1ia2bSGzLILE
1hBpL2BhcxbC1SkMzw6jc6QD5Y3FTF6BL3ZgB+EnyLjH8kX1WN3EqNtjzAQp
YTnOgN16L3YDagKAlkigOwkkoAPGCth0+nw1ww+F1Wbq2K+1Uj9ypQVbi8Qy
ztRgYiifD1iaD5mQD+XhnyRy/j88d9n0yC6+FPdXnJwjzx1AsTxlxruFHqYo
UB3CcHMsJDtjNc8Pm8R0ihpSQAICYID0Z5QokJDo9nw36cfANzZT33AMThPT
OQ7h0jAEwm60US8E2FHOYuiZjPtfs1RSr25hyvsJFiNUsZZiBFG+LVDhTmwJ
kXN7BFHqBOLVULbrnDd56vkKdjOaMl/PlZMVh3gDfWnfQgeyc8L4LVVl3voP
nrv/fWcBs4r8a+Q8oqVDV9FtdR8j7gqYDtXHYqIt1nM9sVUezBnHDKLERGFG
SQemiLLMEwEvk9m53k+EOyzZa6SHuEQiahwFWFodgHC2EwOCWtTUJvMFjXyK
9WtOlRi+KacbmPZ7gqVoZWykG0JU+BKodCFLpQ9pErHbfdFElxPZbdnxDKq/
E1nk+0SjGVgdTMZYY9AHgyPzner5R4ny7ua5yyYfuGWRT7YfMwR5HaY3IXB6
DGGAGhbj6B6oI7ZKSAfqiPVro9YvixgHYiSmqFLQfdCWd8qyaPVgP7F+fdhY
7cbCXAvGx6vR3pr2ocyrrB37iGVG9rmLhajnWEvTxka+GUTlNG9M7EMLlWkg
0BNKmhQBUU841jqDMdvozXyJIT/GBF+FGN+JlN9KRPkZz91/2lmUbCD6SzTo
XEC/7W1Mvn6GhUgtrKVaYquA6EK1H9BM5ls3EeVQFmvXpslCMl/DlRU1MyVF
TGnRaiuJ9JqwOleHmbES9Hek8AEd8blQbNP+Dj325xjWqfkYeSylqmEtj5jY
YnOsl7/ESoUN5kosIcjQ5TuGz/e1fJrIV8D+iUR8e3ju/jMrvk93FN/Picm6
CIHjHcwEyJFlQRubWZZAKRFfHRFfG9HE3nhirtL4zRXdWpurwPpUMeaIiAca
w/kCKb7+/ZHnPb5gjU+N+EqnGcvMvLX3u8nhACeHZoMzGHG5hdkgGawmaGIr
xxwocyRy8CJyCCLqT5bIQcrEnsruM01mUaPC7DetD6ditjMKbbm2zJca8pMP
8PXvL5EDX5EkIxtGH77gucum4Hbx7SyxEI8/Rv+rSxD63cNSrCJxEfSxVWQF
URWRA2Wea/MDuojl7wkjZiAMG10hxCXzxVChDbMZs/NRe74S+Lf/7k887/Gx
q/CV/PEVQHwkEcSXPHf/dWdBHGF+/gBjvrcwFyPLTOaVHH2sFplihZKak2sy
x5CdyG/vHeww7nzd/T88730oQRzfLi/zWeatr3jusvmkXXybTuc/vB987ftL
+sG30cW46cyw7ee5+7927scF/n7wqR9fAujPPO/x/d23Ycxvf8YPJP04wHOX
TSjt4tteepc6h84rvsHgy5x8aCf4FiG+RNbfSjpxkOfuv7+vEx80GHz92M3z
3odSav2Wu7PtGfQf89BDPM9nExq7+DaMvkMv+KLLz3jeE2O/S+/+HNKf0XOw
B8RfyztFfvdOb+gruY7wNOGPO3fkIn9H+PYF+KIL1rP48VsfZxrDIPKSTuw+
xEFnX4H0V7c5Wq7HHHw2PVz5YNeO1K7fk+y4vtOS/4/tzz/t2J+35wjfqPA5
UexOuphTTEz+cISMxGkW/uXLu6QDYqgNFUgf14TMCZ3vUfYHOhBSOpA+oSJ+
LDM+zEN3vQ2oe5inOX/auUfvsgXu1CM+N4Adnp8xwCFsr+jJrhMs4va+m2RI
HrMgzQxwiA5zvpCe7np2/iXDsCB71R6y1xzIK1sxLS2lwVqDHQE/D/C8xy4E
nKf1/s6xuvdDVqEZxBNKckL0aO8pokeXIP01afh+oksHKBQ7hQ2/wA2dGCj/
AHNmiGnwZ7Sj5G++egqZg4rMQUp6hE32rCXkSQcpNAU9ukZRqF88CcAL6UBy
kdenfnj+yAOy163YtYjpMF/6+Wue9/5j5w5vZ6YWd5j1jX7EdpTqHO345xQT
nXT064cc3JAipI+qEp1TJ0qmSS4N8jvRwaMyrEkUg5ZypA30WPBuBiYLMqTv
zzg0ZtnTJlC4bAPFW85QfOAFxacBUJYLheqLKKgqx0JFNR4qagnkioOyajSU
XgRD4bEzG8btCHP2LTLg29m9zH6ZIUOmxRaqi0k/zrCdZ7DD6dFXCijCgbOf
NmOA4KlqPrtoQ66XkDlPAeH1IX1MhtWxT7iveyMEmd1nGdQIKojnh19A4aQ2
FM+bQu2GHTQeuEFT2hdaz0OgoxIFXc0E6OmmQtsgE1oUgdg4F5omudAwzoKa
AT2uHwNFOXc2aGG6tDNGKV+BJa8wGAA54q9Ta8lOUTGwCp2eT5i/leEoN56R
/stdIlp73RnPKYb5/deM5io89iUXxVH3gNxteyInnT9J5MGKllZzy/z5DOQ/
v8Kg7CofkWcep3XFBLp3bGH41B3GCn4wVQ2DuXYsLAxTYGGWBQurfAbR1syu
FCavymFkXwE98qrFoNrmQd0okfXFGeXgg5zgCzZYld3Ft7/MWoSPsJ1vi5EL
I4+nzEFU+veyZ8ygcMUWCrdc8OLBa6LJgYwmqyhEQlkx5nsUVJyYEmVlCu1N
2UheQ+6mBbsS/kZyYpmqiNzu03jx+QUof3kLGkdlGLBWo2uGzFOtZF1ho+wH
O+1w2BvGw9EiDU42OXByKIKTSzkc3avh4FWPV68bGcBWS/Jq6lkPQ9cq6NgX
QsM0gXWzdjyBzheTfrazeNj17eNtHeCgKMQ6fkQJ8id1oXjRgvkcRbRWlwmA
pkIYtFVjoKOZCC2dVGgyiNbZ0NyOsq0dD2WVYDy/Z8U6cOIztAcZNFKFPaeg
/Pk5aHxxGXpHHsL47AtYXNeFzSNL2D93grOaN9z0Q+FpFofXNmnwdsyFj1sJ
fF9Xwde/Hj5BzfAOaYNXWCfcw7vgTC770O0HFQuhphvA+hmMvPiCN75cBvve
Lr6t8fNv2YXDzBF1ipcgR+fBVyx3iOoZHWheM4fufQfms8aKQTBRj4SpbiLM
jdJhZp4DU6sCmLwshrFtKYzsyqBvV8bNAXraKp3ILnzXG6F9yUCEKuw5CfW9
Z6DzxQUYHb4JizPPYHtdHU6PTeCm8ApeGp7wNQxCgGUMgl6lIMQ1B2HeJQgP
qEZ4aAPCI1sRHtuFsPhehCQOICh5iDlW9zpxEK5xfeyxuoB66DpmsR4i0/Wd
C0D56ga/RWi/5gwpPT19mnSGzJCv7kDjmBx0z2sygjN/bA+r516wUQtiPm9v
mgwHqyw42hXAwbEUDmQW2HvUws6rATZkZliSV1OPOhi5VkPXoQRa1kTxdEL+
TSK3/Xix5xg09p2C/pfnYHrwEl6eoojpCnB/pAtvBSv4a7ogxMgP4dYRiHJM
RKxn1v9t7bqDozrSPLt36wve855drtrz1u55r65q63z3x9XV7e3a4CV4wSBy
MAaECQsywdgEAUsWwWSDRJIQQkISyjmhMBqFUc4aCUkzCqNRHMVR1mgkzUi/
6/f6+Q06f7PUVF1RQtDdv9f9vvd9Hb7+9deI989DQmgZEqOqkRSvRdILHRLT
2pCgNCBOipoeyX5CM3sRkN4Fn5R23ItpwLcBJXyyYfe4zX8TadxgpfXm3Kw1
cu8yXzzi+7V4xJdZzILNOL/MBVfWu+LG9ou4u+8u7h19jEdnnuPx5WjxGU/d
M+D7KA++T0rg90wN3+c1eBqswZPQBngxi3nIfgRruR2kxRW/arg9Fk5EKKR2
/Fq01G/YLOnUR6y//Hg1ri9ch7vLP8ejTS54uvs4Ag5dQuif7yLy0hPE3gpG
4oNYJPukIvW5CorwYihj1ch4oUGGQoeMzDZk5HRBmd8LRaERqUWDYgjx+KIh
RBUMIFjVA19FGzxiatl3jJNFSG0ZUDsMH71OhL8UVU84nnpCsp/LS7/AjXWH
4L79LB7uvwnvY4/ge84f/lcj8PxOEoIfKsXnhAWUIjykCuERdQiLbkRonGA7
rXie1A7/JG47Xsx2PCIbcTO4Bm4+zI5vxHwgqeCB334oxiUUSLI3Fq2B+1Ie
Rdvvi4MIPnAKkSeuIe7iAyTd8kPqg3AonyYiK0gJVWQ+chPKkZ9ai4LMRhTk
tKKg0ICC0j7kVwwiTz0CVdUYMsVI2mNIrhxBbOkgQvO6uQAodxO1y8hH03kU
7WS1JLqvWNdz8kNuQleXfIY7q/fiobMrnuy/jGeu7gg674Ow6yGIdI9DjJcC
cc9ykBBcIj4rMU6DxCRmPqmtSEjvRFzGXPMJVAps/A48TNDhVlg1LjzO+kBS
+kP/Mx/nFyzF9UVOcF+yVgyaJ0SMDnX5BjFHzyHp/C2k3vBExv1AqHyikBeU
gsKobJQkFqNMUYXybC0q8oVTM52orOxF5ctBVNSNokw7jpL6CRQ2TCKv3ows
7cS87+8pCc5tY5ZcIraA8vxQe+ML7EtwlawFC5gWfAq3j1ex11kPd6et8Npy
EH4uZxB07AbChROG1wMQ7xGFF97JSA3IgiKsCOmxleLz/pINJTAbimY2FJrT
i2cZHXiU1IjrwSVSP/wejn+4AN/+YanINfVctk4Mmhy2czfiDh1F8mk3KL+9
A5W7N/K9g1EcGIvySAXUibmoVpShRvUSdYWN0AiHTqq7oakzQtMwjDrdOGr1
ZrxsnYa6zSKJ76+hajQhrW4IMaWdrFOspNw1FKmDuxHnUXQb8SgKW70f/t1C
pn/LRRvyWLYR3ht2IGD3YYQddhNP2SVe80aKRzDSn8QjM1ABVUQecuPLmP3U
iPYjPLNQsp8CyX5yqm2R6FMqRxFfNoSIwl74Z7bifjzTxQexortN9Eaw9dCZ
+Qtwa/FSPPzjSvitWi/GBY5z2YMUV1dkXryE3NvuKPb0Qbl/KKrCE1CToIRG
kY8GVQWaiuqgq9Ch+WUH9PU8iJ2+dQzNHWboDNOSBN9ATdcMKg0WFLdNQtU0
guTqLgRmVFGeFkrh/vB6SZ76aDGuLVzBTGoNvFd/hkDnPyHioCvi/3wFKVc8
oHT3Q7Z3OPICk1AYkcnMqQhlaWrpEBo/Uadm5qRm5lTJzKlca0JpgxlFzJzy
2U+2VgjwOIZE9SAiigzwTdfgmn/ae4IQuZP9XfYl58P9k6UiqTN4wwbE7NiK
lK/2Iuv0ceRfvYJSIezaU1/UhIRBG5uIptQM6LML0VpYifYKDTpq9GLoNYMQ
eq19mDtF/hatxhnoB2bROADU9Vuh7p5EUdsolJouhKnUlBCpIYN7g0lNdZK6
RLePl+DOEid4MYMK3LQFkXtckHjsJNLcriH79kPkefqj2D8K5REpUCeomDGV
cGMq4sakfdktPlfbOAJNswm1LZOoaZtGVZsF5a3CZUpTyNVNQKkdQUJlj7i2
5bP3d1jdv2cq+Ec8W7ESkZ9vxIu925B51AX5F06g7PYVVHneQ12ALxqjwqF/
kYS2jEx05heiu1yN3hot+htaYNQbuMa9CWO/Cf2DU+gdsaJ7dBado0Ar+900
ZEWdcQoVBjbSNBoQmVNKupOo+d5rJfjPuLpwCXsLJzwTjtE4b0Piwf1IP30K
OdduoPC+J8p8n6MqNBY1cWnQpuUxIyqHjhlRMzMifU0HWpgRCc9taRuDvtOM
5q5pNHZboe2ZQW33DKq6rCjtmERu8ygUdX2ILtbhUUwmb+3P4LX0Ezxf5YQ4
541Q7HdG7gkXlF45jmqPK9D43IMuxA+tceHoVCShJycT/SVFGKiuwpBWK9nq
TzHa04+xgRGMDk9gZGwKQyYrBiZm0WcGutjvtnErGodYL9kzjPymdmqxTqUt
4sKjhpoVkvBuLVoM72VOCNm4AfG7naE4cgA5bmdeIUQHQRsdh6aUdOiz8tFW
WIEOZjedNc3oauxEd0s/ujuGxWcb+ibRabSgfWAGLYPsuw8CWqMV1T1TTIDj
rBfqRxITunesggvvp3i8bBFC16xA0o6NyDrkjOJTe6C+5grNg8vQPfNAW4Qv
upLC0JeZhIGCTG6eb8Hc3oLJHgMmB/phHhmGeXwcZvMkTFMWjFmE6xVm0T9l
RZd5Gi2jJtT1GVHUpKNkRHnCFr9Obr/Cd4sXwm/5CkQxs0n50hmqEwdQ/O0Z
kbRc5/cYjeHB0CfGo12phCG/AD3llehjJmNs0Mvx9QZ7+Vkz49D/ISyPCWdM
ZlA/yMy4ZwyFLX1IrWqQepi/Zxq3AOFrP0XqrvXIPbwN5WeFywSOosnzItoC
76Ir2gf9qaFcud7GRHUBJhsqMd2igaVLiG3UAasc22hsDjNxnP0MW6eZ8Mys
GSOo7+tGfl0Vud6nOkG+VyF5wedmLZckd3PRRwhYsRzxzF4yDjqj4PR+VN44
jTrPm2gK9EJrdBA6U+PRo1LCWFKAwepKDGs1GNXrMdZpkCPBjY9w7vDIhBVD
Ard4knOLO5jtNI9Msm6bTdDauqGsrpMGuL9B2OpPoNi9FgVHtkB9fjfqb3+N
lsfnYQi+LdniOxjPi4O5XAFLbR6sTWWYba/FbG8T8EowHkzPZRYKf8ZmJjAw
NQrDmBHarmaqM6NmMZ/YlxjXtV+y3mWZGAZWuIik9JwLar47hUbvG2gN8URX
/HP0KWMxmK/ASEU+xusqMKHTYLJDb4tQNjKEKdM4JicnxeebrAIDeAYD01b0
TE6jfXwCDQNsDG5vh7KijAvrJwhy+hhpO1ei6MhmVF8QI7ZLQnoXg/GPMK4M
wGRBFKyVKZjVqIDmYqCzGuirtxNZhtMCp9nviZlhDE0ZYRhqx8vmCmrstL/L
Ta4+lkvCClyxGMk71iL/8FZUXtgD7Z3jaHl6FYbwh/z4RFY0xorSYK7KxVR9
GSwttbB2NUlxs3oxY+Jxs2YsE+Lzp2amWWunMTozxQRmhsE0At0Am7S0NiIh
I5HPj94TA4xI21y8L/R2RX/IZYwkeMCc4QtLYRhm1YmsQ8wAWgpYty5Rokeb
iCApnBLNxgCYLb0YNLWjraeWnIu9T6QttS8lrlK/QPL2lWLAzGq3XWi6exjt
vhfRG+GBIeFAgypCuhkiGzNNbAXTzr5pTwNrUavtMINlSI7oJDx/GmaY2L+H
LSPoMRnR3N+KioYKscXfG1bugZWoPisw83bygNbBZzEWfxNTGV6YKQgE1NFM
PClMPNkSbVkNjNRJzLwWJh4xCogQ0LpbCMNi7cSEuQX9AzWoUifZZ9jPTeO3
9c6j6JvLJeEIFPeCrzfi5YUv0Hz3IAy+Z2GMvI3RFG+Yc0JgLUvgVxTo2Hfs
YN+xjzVyWMcUnvUQU3NjEQnPt7Dfk+z/o9P96B1tZ7P0OmRkR/67LBy+y/Jz
xGz4EOXH16Lx6lbOsQs4hvGYS5hOd8dMvg9QEQJo4gC9AjDk2BjGJolhbGGN
sAo8O73It7OY6zE6qIa+IY0czCi/0qf25cOV55+g2rcK1ee2oPm7vej2ccVg
xLcYT36A6Rx/zJZFAbXsIzazDqGzhMfGH9ayJrJmTbW/EhufKRGM3MQs3Rid
aEO3UYNabZY41og1873ld1Fzfj3a7jij/+k+jAnBH4T4v6r7QKkvUBMGNMUz
LRVO0bNKBwttJODv4/9OvMTsmBomYxFaXkZRhkEdGuP6QLqJuCj+EeUn1qPp
+namzwcwFCrwwW/Dku2N2dJg1jL2pXSsVR25TAylTAxScPYpnciAxEz7jwWl
ljbKJ806DA3WoEWvsrG5+ZbW29BcWsc0whlDAfsxEXuKR5wtEHheTAIaphXN
sayeZB4ryqjiEWeFUAjDhaxHyYGpI418D4oEssL+aztJH6TObRM67u1iCnoY
ptiLsCjdMVv0FGyeDTQkAG3pQLfAyGYaMFopBl/mrEWBCCqcQqiH1VTDe0q9
8jfy+3LS0VvouL8ZQ4F7MRF3XAoHcBdsPsoWY/7sa7NKWpiadcTxkACdCawX
j4GxypfitVK8I/4epA+VZ73DbHATeryEaKpHMfXiEpDjAZSxV6xltetYzR0C
uzCL6Vs+j+srsArHy2V24USvSniujTDOeZB/x0aGLRgO/xLm5BNMVS7BWngL
M2UesKofwVLliYnKh5IDfG7DqB2Hlfbfg2f9DNora9HrvRNjEd/AkuqG2bzv
gHJBkqzH1UX8kB3Ym8462VSY9LHkydj3hb/FpM1ELkXu466redS34VlvotVj
A4aC9sCcxGSSdRkzxXfYaOnJGsnUuyEQs41BsNYHMjXyJfkfv5KlvI3Ipfa2
/kKj1klpBv9tMMYcZGOiK3m86BdypduJXIr2yt2g5JYH9YifyxXsJHKpDc01
jlUgfi0xaTeRS1HI1/IKqJ0uqoK35TdwIXKpLep1jlVg29/dT+RS11FxehRp
YVQFb8oiOkjkUoyDDY5VYNtS/IbIpWgdfBua3J2lKnhDruAIkUvdUrnJsQps
+1SuRC7FxOHEAmmv5fUViP87SWb8MG2z/Wfb7gM+TeRSnd3n/GEUT8CZSDsj
yeOVNFuf9P/0FIrDsZVIOye/rLNjQLH6v7J1a/Moau7nRNppucad9oHUoHFK
BvJuiCTtfEaknZSBeziQYt9uJNJOyEAXx4CuMnAfBy4iCq0n0o7JwAOOAY/I
wK84kCK1riXSDsvAr+0D1xBpYnEx6TAHUgTU1UTaV3KNx+wDVxFpB2XgcQ6k
eIgribT9MvCkfaATkbZPBp7iQIqbupxI+1IGnnEMuFcGnuNAij26jEjbIwMv
OAbcLQMvciBViGr+Lhl42T6QkvQO4W8xiQe7khaTcwtRSrFdrvG6fSClv7br
um9yICX6RUTaVhl42z6Q6hW2yMA7HLiCKER1YLarfd3tA6ku03aP6z0OpBSa
Glw2ycAHjgE3yMBHHEjZHjU9sMUY9nIMaIsP+YQDqW6CmhSuloFP7QOp+fAq
GejHgVSPRi0PbLe2+NsHUisyW4y8QA6kOl9q1f2pDAyyD6QcNstkYAgHUuME
5Xm2xRILcwwoGreYFMGB64hC1GbeYrnGaMeAC2VgLAdSg6jdDW4RGO8YcIEM
TOTADUQhyv0/Xwa+sA+kdlpsYY9SOJCamlCbW7+XgWn2gb8h0n4nA9M5cBNR
iNrD/a0MzLAPpHaORMUXk7I4kJrwUUSa/5JrzHEM+J8yMI8DqbkpdfjSFlek
wDGgzR1exIHUNJpyWv+HDCxxDPiBDCzjwC1EIcoN/G8ysMI+kDp9ZfNdqjmQ
WmNQ3lZRKcSkavtAyl/5r3KNtRxI+YAo6um/yECNfSDlPvy1DKznQGoZR4XS
f18GNjoGtDm4dBxIrZMpP5ftoLreMaDNu9XKgV8Qhaij8baz3e32gZTzynaY
pZMDdxCFKKeUKDAxqcs+kAo28a5cYy8HUn42ykv1jgzstw+k4rTYHGIDHLiL
KES5rWyOriH7QMod9ZYMHOFAytVHuZn+QQaOOQZ8UwaaOPBPRKE37DVfBJod
A4pOLDFpigP3EIUov/Ebco1W+0DKy2Q7YzrLgXuJQnZv5vixnPSjV9E/vHVh
n8iFnIPgrZnnIr3Tq4h90k6irfBP6MLSb1s57gXki1tbe6WL0uf96H8BllAZ
uQ==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot3D", "[", 
  RowBox[{"DisphRL", ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702944585472574*^9, 3.702944596984811*^9}}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAGJmIFYKt7rdJ/LD/t/sjTqMdz/bH5os/uK1DKPD712T
Ldom/bd3EGexZEn5bv9l8psly02+2ac8ct753/CT/SuV6xavgv/b77A2s992
47v9tNcvVQvt7tkH77ne4v3tuX0El+S9/5qMDjIZFfrHw/7aGy2zU9RheWCf
GC9tWvv5u71CcHam3OOD9klHz+xS2PLdfrOnuty099/tn1rM2TV/9nd7L8tj
qpNC/tprafyOkml8Ym+4LST+TPoD+zeOhQ7nJv63jzOTaP99+7n977CXUyaf
fmWfkJb0hIt7pn2ID9/551w/7N9pP1z01OK/vcHs+4wz9ryyPxcs+PD8wif2
DFCw9GjyH93ZD+y/nZbsmZr8zf7/2zfL032+w+UrLhdbxCi/sHdYfkPU7sME
+2NCEcFPtT/Zq0V+WTf38BN7vdP/7l9qe25/9WJN+tdvCH1xIQHTeabet19Q
osfx6dBB+0dLC0utXz2xL7y3LL1wxWd7p44Lq26du2vPUKSr8P5qvj0AsWW9
GA==
    "], {
     {RGBColor[0.5, 0., 0.], 
      Line3DBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 5}, {2, 7}, {2, 
       10}, {3, 6}, {3, 7}, {3, 8}, {4, 6}, {4, 9}, {4, 11}, {5, 9}, {5, 
       10}, {5, 12}, {6, 8}, {6, 11}, {6, 13}, {7, 8}, {7, 10}, {7, 14}, {8, 
       13}, {8, 14}, {9, 11}, {9, 12}, {9, 15}, {10, 12}, {10, 16}, {11, 
       13}, {11, 15}, {12, 15}, {12, 16}, {13, 14}, {13, 15}, {14, 16}, {15, 
       16}}]}, {Text3DBox[
       FrameBox["1",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], Text3DBox[
       FrameBox["2",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], Text3DBox[
       FrameBox["3",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], Text3DBox[
       FrameBox["4",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], Text3DBox[
       FrameBox["5",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], Text3DBox[
       FrameBox["6",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], Text3DBox[
       FrameBox["7",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], Text3DBox[
       FrameBox["8",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], Text3DBox[
       FrameBox["9",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], Text3DBox[
       FrameBox["10",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], Text3DBox[
       FrameBox["11",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11], Text3DBox[
       FrameBox["12",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 12], Text3DBox[
       FrameBox["13",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 13], Text3DBox[
       FrameBox["14",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 14], Text3DBox[
       FrameBox["15",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 15], Text3DBox[
       FrameBox["16",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 16]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAGJmIFYKt7rdJ/LD/t/sjTqMdz/bH5os/uK1DKPD712T
Ldom/bd3EGexZEn5bv9l8psly02+2ac8ct753/CT/SuV6xavgv/b77A2s992
47v9tNcvVQvt7tkH77ne4v3tuX0El+S9/5qMDjIZFfrHw/7aGy2zU9RheWCf
GC9tWvv5u71CcHam3OOD9klHz+xS2PLdfrOnuty099/tn1rM2TV/9nd7L8tj
qpNC/tprafyOkml8Ym+4LST+TPoD+zeOhQ7nJv63jzOTaP99+7n977CXUyaf
fmWfkJb0hIt7pn2ID9/551w/7N9pP1z01OK/vcHs+4wz9ryyPxcs+PD8wif2
DFCw9GjyH93ZD+y/nZbsmZr8zf7/2zfL032+w+UrLhdbxCi/sHdYfkPU7sME
+2NCEcFPtT/Zq0V+WTf38BN7vdP/7l9qe25/9WJN+tdvCH1xIQHTeabet19Q
osfx6dBB+0dLC0utXz2xL7y3LL1wxWd7p44Lq26du2vPUKSr8P5qvj0AsWW9
GA==
     "]]& ],
  AspectRatio->Automatic,
  ImageSize->{411.6028238503749, 421.50152093440755`},
  ImageSizeRaw->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1],
  ViewPoint->{2.4322896811430685`, 0.8028100913751446, 2.2112129848097357`},
  ViewVertical->{-0.07994970032851777, 0.7216466359440605, 
   0.744415123891929}]], "Output",
 CellChangeTimes->{3.702944597789983*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702944395142241*^9, 3.702944395151409*^9}}],

Cell[BoxData["DisphG"], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 5}, {2, 7}, {2, 
       10}, {3, 6}, {3, 7}, {3, 8}, {4, 6}, {4, 9}, {4, 11}, {5, 9}, {5, 
       10}, {5, 12}, {6, 8}, {6, 11}, {6, 13}, {7, 8}, {7, 10}, {7, 14}, {8, 
       13}, {8, 14}, {9, 11}, {9, 12}, {9, 15}, {10, 12}, {10, 16}, {11, 
       13}, {11, 15}, {12, 15}, {12, 16}, {13, 14}, {13, 15}, {14, 16}, {15, 
       16}}}, {FormatType -> TraditionalForm, GraphLayout -> 
       "HighDimensionalEmbedding", GraphStyle -> "DiagramBlack"}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        GrayLevel[0], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$14", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        GrayLevel[0.7], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.1506731602818085`, 0.4374085886112864}, {
           1.5121252617447216`, 0.6783773389983627}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.2576588080575573`, -0.12048437519353813`}, {
           1.6191109095204703`, 0.12048437519353813`}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.09236304669232623, 0.23445927683324666`}, {
           0.4538151481552395, 0.47542802722032296`}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.9017433091035344, 1.7354912318498836`}, {
           1.2631954105664476`, 1.9764599822369597`}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.208983273871286, 0.6403579003893255}, {
           2.5704353753341995`, 0.8813266507764018}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.15656680448594726`, 1.5325419200718438`}, {
           0.20488529697696597`, 1.7735106704589199`}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.5801162248514066, -0.09632512894803277}, {
           0.9415683263143199, 0.1446436214390435}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.18072605073145662`, 0.8549993368656955}, {
           0.18072605073145662`, 1.0959680872527717`}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.9600534226930117`, 1.9384405436279224`}, {
           2.321505524155925, 2.1794092940149987`}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.878198868090004, 0.15260472223024193`}, {
           2.239650969552917, 0.39357347261731823`}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.7947576613277801, 2.2933841956547067`}, {
           1.1562097627906933`, 2.5343529460417833`}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.233142520116789, 1.3179004835954728`}, {
           2.5945946215797027`, 1.558869233982549}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.17421760129532785`, 2.0202950982309265`}, {
           0.5356697027582411, 2.261263848618003}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.37716691307336503`, 0.9619849846414467}, {
           0.7386190145362783, 1.2029537350285229`}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.4723002445339248`, 2.2692249494092005`}, {
           1.833752345996838, 2.510193699796277}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.675249556311962, 1.2109148358197208`}, {
           2.0367016577748753`, 1.451883586206797}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$16"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.18, 351.82}, {-167.10719999999995`, 
       162.5711479901809}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.702944297199604*^9, 
  3.7029443041483803`*^9}},ExpressionUUID->"35e8985a-e1dc-4df5-88a5-\
426a26ae9471"],

Cell["Test embeddings into original graph:", "Text",
 CellChangeTimes->{{3.704209884518715*^9, 3.704209894303536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"State1ID", "[", 
  RowBox[{"[", 
   RowBox[{"1", "+", "24"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.704286382774417*^9, 3.704286406011403*^9}}],

Cell[BoxData["2634"], "Output",
 CellChangeTimes->{{3.704286389187921*^9, 3.704286406404152*^9}, 
   3.704286494839773*^9, 3.704296693211936*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704297062826873*^9, 3.704297067876277*^9}, {
  3.704297191130764*^9, 3.704297205538291*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapvals", "=", 
   RowBox[{"AllMaps", "[", 
    RowBox[{"[", 
     RowBox[{"State1ID", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keys", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"map", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"keys", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{"mapvals", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inv", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Normal", ",", 
     RowBox[{"GroupBy", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "map", "]"}], ",", 
       RowBox[{"Last", "\[Rule]", "First"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704286418130026*^9, 3.704286427380455*^9}, {
   3.7042865289762907`*^9, 3.704286551096676*^9}, {3.704286680097354*^9, 
   3.7042867289403887`*^9}, {3.704286876769668*^9, 3.704286889545731*^9}, {
   3.704295728212532*^9, 3.704295728866898*^9}, {3.704295776073584*^9, 
   3.704295776798319*^9}, 3.704295890730516*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MyVertexLabels", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Keys", "[", "inv", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", "inv", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MyVertexStyles", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Keys", "[", "inv", "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "->", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"13", ",", " ", 
       RowBox[{"MyLabelColors", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Values", "[", "inv", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7042930539818773`*^9, 3.70429309763282*^9}, {
  3.7042931306535053`*^9, 3.7042931617677193`*^9}, {3.704293246107456*^9, 
  3.704293257747471*^9}, {3.7042946292899923`*^9, 3.7042946295105543`*^9}, {
  3.7042947337926283`*^9, 3.704294734533293*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"3", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"11", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"7", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"8", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"9", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"10", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"12", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[1],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"16", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"13", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.58, 0.35, 0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.38666666666666666`, 0.23333333333333334`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.58, 0.35, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.58, 0.35, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.58, 0.35, 0.],
       Editable->False,
       Selectable->False]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704293246589038*^9, 3.704293259712913*^9}, 
   3.704294629986294*^9, 3.7042956403020973`*^9, 3.704295732867147*^9, 
   3.704295778614155*^9, 3.7042958929777803`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"GM", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"VertexReplace", "[", 
     RowBox[{"GRC", ",", "map"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7042971231743317`*^9, 3.704297123523065*^9}, 
   3.704297184987667*^9}],

Cell[BoxData[
 RowBox[{"t", "=", 
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"DisphGStyled", ",", "GM", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "MyVertexLabels"}], ",", 
    RowBox[{"VertexLabelStyle", "\[Rule]", "MyVertexStyles"}], ",", 
    RowBox[{"VertexShapeFunction", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "v", ",", "s"}], "}"}], ",", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Disk", "[", 
          RowBox[{"pos", ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"MyColors", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"GD", "[", 
                 RowBox[{"[", 
                  RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
               "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"MyColors", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"GD", "[", 
                RowBox[{"[", 
                 RowBox[{"inv", "[", "v", "]"}], "]"}], "]"}], "+", "1"}], 
              "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.704287294720489*^9, 3.704287331062642*^9}, {
   3.7042882137777777`*^9, 3.704288242221621*^9}, {3.704288275238785*^9, 
   3.704288303243484*^9}, {3.7042883511580887`*^9, 3.704288385630496*^9}, {
   3.704288459529632*^9, 3.7042884726592093`*^9}, {3.7042885496508007`*^9, 
   3.704288576524159*^9}, {3.7042886369061403`*^9, 3.704288647180572*^9}, {
   3.704288679909544*^9, 3.704288722994297*^9}, 3.7042890306123*^9, 
   3.704289163808618*^9, {3.704289247578966*^9, 3.704289261720963*^9}, {
   3.7042893151582537`*^9, 3.704289350184161*^9}, {3.70428946101085*^9, 
   3.704289522495496*^9}, {3.7042900122214537`*^9, 3.70429003056593*^9}, 
   3.704290189914179*^9, {3.704290304862137*^9, 3.704290339886187*^9}, {
   3.7042905959636393`*^9, 3.7042906172475157`*^9}, {3.7042907915436287`*^9, 
   3.704290843176622*^9}, {3.704291491618195*^9, 3.7042915006681747`*^9}, {
   3.704291620678258*^9, 3.7042916308213*^9}, {3.704291689415883*^9, 
   3.704291819373622*^9}, {3.704291870660301*^9, 3.704291886561573*^9}, {
   3.704291928676354*^9, 3.704291978995739*^9}, {3.7042920577216*^9, 
   3.7042920773162737`*^9}, {3.704292112117364*^9, 3.704292157888733*^9}, {
   3.704292421760769*^9, 3.70429246230687*^9}, 3.704292573271062*^9, {
   3.704292637831047*^9, 3.704292670496118*^9}, 3.704292890422958*^9, 
   3.704293267720834*^9, {3.704294604832736*^9, 3.704294605200241*^9}, {
   3.704297076243904*^9, 3.7042970811168833`*^9}, 3.704297180484528*^9}],

Cell[BoxData["GRC"], "Input",
 CellChangeTimes->{{3.704295666664459*^9, 3.704295667656515*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {Null, 
       SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 4, 8, 11, 14, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 
          30}, {{2}, {3}, {5}, {9}, {1}, {4}, {6}, {10}, {1}, {7}, {11}, {
          2}, {8}, {12}, {1}, {13}, {2}, {14}, {3}, {15}, {4}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}}}, Pattern}]}, {
      FormatType -> TraditionalForm, GraphStyle -> "DiagramBlack"}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        GrayLevel[0], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        GrayLevel[0.7], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.5619148945192585`, 2.410902231431113}, {
           3.1158348450574307`, 2.7801832447532884`}], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.858589972646252, 1.7620165469080629`}, {
           1.4125099231844238`, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.64302560508464, 1.7620165469080629`}, {
           3.196945555622812, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.0474828669924392, 1.1131308623850127`}, {
           0.601402817530611, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.7620165469080629`}, {
           4.170274082407387, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 1.1131308623850127`}, {
           1.5747313443151862`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 1.1131308623850127`}, {
           2.8725027133612864`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, 0.4642451778619625}, {
           0.2769599752690859, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{4.265239816392266, 1.7620165469080629`}, {
           4.819159766930437, 2.131297560230238}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.6696970783000646`, 1.1131308623850127`}, {
           2.2236170288382366`, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.9674684473461648`, 1.1131308623850127`}, {
           3.521388397884337, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.3719257092539643, 0.4642451778619625}, {
           0.9258456597921361, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{3.6163541318692154`, 1.1131308623850127`}, {
           4.170274082407387, 1.482411875707188}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{1.0208113937770145`, 0.4642451778619625}, {
           1.5747313443151862`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{2.318582762823115, 0.4642451778619625}, {
           2.8725027133612864`, 0.8335261911841378}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.2769599752690859, -0.1846405066610877}, {
           0.2769599752690859, 0.1846405066610877}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$16"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.18, 351.8200000000001}, {-103.10720000000003`, 
       97.39767613668897}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.704295673825177*^9, 
  3.704295673846422*^9}},ExpressionUUID->"9a800f37-d460-49c5-9ff6-\
5d3cadf5bbee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"t", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70429460795376*^9, 3.704294617774314*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
siJnMJn7HQMoiXb26XvIR3w6g7eEBMRY//XqVXbJhi9e3NZjflOnshdQ3q9Y
wY+6CFVTQ1BrMRgMBiPE1DOZ1EoLVtC48TqloIT1CiAw/nzrR0m0duLiyAd9
wYWHBHGGIHYTxEqCWEgQ7hMmQIz16ffvswv308GDbT0WsWQJ+7FAOTl+1EWg
rCzdtRaDwWAwQg/l3y5YYdGNVzllFaxXVNXV87/Js4N9u3hOEJcI4hBBmBGE
LkHIEYTUf4PXxIkQY33Wy5fskq3OyvKfObPVxwp8fVnP1OTm8iMtWJ9BENRa
DAaDwQgrjOrqHHv7OWfuC0JdgLDk7tuSqhrWuxLzivh0tKVodR25JIAOdgRx
iyBOEsQ2glhGEPNaaIlmYRZBwI312a9fNy3iXEdHfympZs8knTjBfuDTkSN8
qgsQGurraa24GAwGgxE+aouK0h88CNPVderZEwx8C/bZCkhdgLDHwZ/93sMu
QfxE1b7OjDwmiLMEsYcgTAliEUFIc5MTLQPct4uMR49YuV2RlMT6j8qUlPg9
e95pagbPnRtrbp7v4cEukZL37/mXFvjbBQaDwYgyVWlpKRcuBM2d69C5c9Nx
cNm6XYJTFyBEZeaxDPBMTOUnHmH2d/GSIK4QxBGCMCcIfYJQ4F1LtAzOUPsu
Uq9fZ+V25rNnXy5d4lQf0tP5dAPOCp7Tpl27di0uLq6hoUHglRiDwWAwwkFp
bGzisWN+06e3NTJu0jYWqLo47hbMsiSrtIKfeITHV6cdQdwlCGuC2E4QxgQx
nyBmUiEnmoWXUGdGPtvasnI7z9XVt9EreF1pactakWNvz/m8KvlgN3XqokZM
TEyuXr364cMHLDMwGAymQ9LAZBYGBMTt2OE5dizXsfLYTEW44V771pvXMUkB
KRnxuYVy55+09ZjxQye2YSpX4H1rADtRyYmnBHGeIPYRxFqC0CQIGQFoiZbh
GpS/C7aL7+LQUNZf/KWk4vfsyX71qigoKPvNm6QTJ/h0ztks3JGSWvRfjI2N
gcyIjY3FMgODwWA6AIyamhwHh6g1a1wHDiQ/dN7/6Re44X7u5WfM78PHsvtt
HglZ/8yN9Uw9gyl7rk0RwjUAO+nREq8I4joQXQSxmSCWEoQSLVqiZTgO5auT
7X2ivrTUd/JkClVEW8FWRmZRGwCZceXKFSwzMBgMpj1SV1KS8ehRuL6+U69e
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
rq5ujRsj1N3TP/+skdvNUwg8QZsxOH369JiYGLw5j42NRZYW4EVMTickgwcO
eDFBK7UY32jSb92CfGh4d+0KeaR78+bkzUWawA+L2NjYuLi4QB587tw55CyV
JSb6/PADmrQIGT++Vk4CV8JTU1Njb2+P1t737t0r5ReoXF9f92bNEOrOf8CA
KrEGSCHIAsD90HqrmTNnJuFbRRgdHW1iYoLW6P755x85lRYsgEJA2ztGt2F1
jFjeaEpiY+E1A/xDJkP2ZvUoKhkZGfBuc/PmzdWrV0MeHIi6LV3phw8+PXqg
SYsv4/Xl5eI1kYxQXV29efNmpOaue+DAATSBUSv8U6Lg+fMnrVoh1J1vnz5y
Ee6MgEBVVdX69esRXNfc3Fz06VsIvHnzBllaHDt2TPoZFjuivNGIJXRJfV2d
e4sWkE8Pz44dIY+MNDcXi30IAhFqWCQ5ORl+GXtaWhpCfoBe9e7WDU1ahE6d
ypTVWFJiATyiN27ciNTcvwwB079MJeVmnnvuuerOCU2XLT9tX9B+nUmTFToM
G03wX/A3+AX8Dv4VHAOO5HeRoshIj7ZtEeoO6EkS60axKSsrs7GxQXBdS0vL
AulOz379+rWxsTFaQzt58qQ0sypRwBvNpk2b0Oywb98+0QXG0yFDYB/+kyfD
6pD27etwT3dXElauXAnpLeDJANQF5MGmpqYImSmJifH6/ns0aRGmpaUMqwwq
KyvR3gEBhw8f5hYYkakJtndP9t46DwgJ+ASOB2eBc6mXAsrQs1MnhLrz6ty5
NC5OilYk4AGIBLRNRVesWCFs0Ol61B4kIiJi+vTpaE3s9OnTaDeVWcAbjZ2d
HZo1RF8vA793wKvZs+EfOLl+fuKyD4EfQg2L3Lhxw8fHB/Jg0AMKm5niN29A
L4MmLcJ1dZmyFD9KolRUVKDtdq1LiYXIrGNefeE3yMFaKFHBncAVwHXA1co+
fvTu3h2h7jzatSPbFyoP4Jkzd+5cBNcFfRy/BY8VaWmZ9+8n7N//dunScC2t
kDFjgoYMefrHH+C/4G/wC/gd/Cs4pkLQB9UXL16gRRkFnFfQ1Y6ivNEI/GRK
T6KTE+Rj5IWBwZPWrSEPJpsLSAGhhkXS0tLgd+wV9vNgUWQk/MAZp18ZGipb
2KXy8nL4CTAcuLi43IwI/Gn7AhF1BTX13WqxZdQfCHXn3qJFgbh30SXIOB8/
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
mjFjBtoDysDAICAgAHcJRCU9PR35I7Obmxvu7BP+I/HgQWRpkXrxIu7so1BU
VIQcJs7Y2DgiIgJ3CRSHuE2beHoX8qbqbdZOP/PMg2a/GPBPx4NcW602QFYX
gxwku+7y+r27cqEu1m3eRG0aZOxbdJ49e4a8gt7ExERhHk1paWnm5uYIRtDT
0/No2DWbgJ2EffsQpUWjRmlXr+LOPjplZWVr1qxBa8Wg+YeEhOAugYLw+cYN
bu860uk75K6fOi8iJuPTYb97uie2TTyyYeXt4y8+vWf/08VQb1E+X0SmJkjO
JmIP0SkhdcExsTMyMlJyNlEGnjx5IkqU77i4ONwlECcpKSlow0NAYHh7y8QW
hMpM/O7daNLCrXFj0Cngzr6oVFRUbNq0SbCz8gL7PoMKQ0lMDLeD6Y8dgNbp
zzr/38f5Gy8DGi3Xpv4r+N/Njy6wDzA+sxtZXdjeleBcIyeXo3KhLnbs30dt
FECxS84mCs+NGzfQnkW6MhnlWywkJyfPnj0bwSBApPn5SXb4kkDD+23bkKVF
uqJ8Aq2urkaOVAMUMnjXwF0Cuae+rs69RQsOH+tijjKfE4iH/LIS1mUfRIU0
XqHN87DrLwNYx2QVFyCri95b50nOJnv/PiwX6mLXQUd2c1iwYIHkDKLwnDp1
Cu0ppCvDUb7FQlJSkhmvuG0CAQIjMFDiy7sI3MRt3owoLZo0yVSsgDm1tbV7
9+5Fbtr37t3DXQK55+ngwVQfO/NdC7Qe/9ddi9nX/OvACn6Hdd88m31Y323z
kQVGUm6mJKxRV1cnXmkhOXUBku7XnYj37NkjCWsoPEwm8+DBg8jPH1tbW4Xf
rSAxMRFNYBgYGAQFBeHOvnIRu2EDorRo2jRLEZf8gOf54cOHkRv4VXmefyIL
RJqbU91s5a890Lr72Rf2sy5YUlnOMSbCkTKK/o3uLsrgyLnnnhIyiDx+u7gh
/0Ol0qeqqmrbtm3IT54tW7bIfpRvsRAfH29qaopgIiAwyBw5qRGzejWatHBv
1ixboQcCjh8/jtzMz5w5gzv7ckyioyPV0/RQJ11sd7vCumBoUiz9kREp8awj
190/g6wuVt05ISGDyOO8ixcvXkjIGoqKiFG+9+3bJy9RvsVCXFwcmsAwNDQM
DQ3FnX3FJ3rFCkRp0aJFjpcX7uxLnAsXLiA39qNHj9KsgiTQkO3pSXW2obrD
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
eOOYNBquLCszTDr9lYkJZ13sVZ+KXVqwEvsUiWfTptlubriLikK2+Pjxo7Ex
97k2HW0N8mctuGYwCJZIYpcvp7x8Y4ROp1tbW8NIC0CvXr04m5a5uXl6ejq4
CcHZpVm6miONNYDS6Gi1sJXtwlbrtJus0QRCAvy3/WbD/n8vX3Bq+7r7Zy89
903Jz8ZdGBhwcXGBVBc6OjoVP577AJrcr1MnNIHx0sAAjHS4cq3M1DGZr1es
YNXC1Y5dphy+il1XsNLkg5eBPV7NmlHeACj48uHDh8WLF3N2SmTutRCUUu1b
8+3i4jdvxl1gSg2NRtu1a9fo0aMh1cXQoUPZ7crCwuLz5/rNlvHx8ZDjI8DX
1/d/9dFFKT3ZQEpKCnzpBQcHc/08Yft2NHXh8dVDOCXssVBXV/du3TpQBWab
HbGLCs5ksmpH7tc3lIKCLwkJCexgl0c3jscuLViJ9xTJp//+w11USk1NTQ3L
Pyfksgjg999/Z7UrS0vLzMxM1n2cnZ0hB0fw9V1K7a7hYcWKFZAFuI8nMGXW
o0fI6gKkGHPzOtTg3RRicvO/M9jlBG/yT4QK8UChtIDPSUNDQxuz2RXu0j18
Cp9qHnUI6v5tW7KaGuWeBS9AWmzbto01ZvXo0QNSXUydOhVcv2zZsqysLPat
4F26ce0coGABL8/AS037cb9ExceP4qiL+qXJZcvApzSuvCstDCZTzBgiC88/
tLsfcCAwcqtH2OKrHhOPuUhEXQCrGJTgpCAkLi7u9eXB2EUFZ8rZ9xPozbya
N6e2DOGlqqrKwcGBNWDNnz8fUloAFixYYGVllcNxcBhhWYSCC/CqwpdhZGQk
52+BMPBuzX/ZET69tramBAbJ+CSkIAuAtY+C04u45wBr6YyAD2ka5x+KLzCA
bVjKhEJeqHf0jVtO8KaY+T8XPHmCu2yUGiAtNm/ezB6tpk6dCiktevbsaW1t
nZeXx3k3allEfJhMJvFxck6OHz/O9fOn48aJqS5AemtnhyXvSgtaIN1pJ+8E
J2UQ3La8pnZ/YKSY6gLYRlo5UMgddXUMCccQ4ZfKH/+SevGnN8daJzu3Lbjb
HuYntX4juYKdUZBJRUXFhg0bOEerMWPGQKoLdXV1tkMnNtSyiEQ4duwYZDGa
mZkxf5y4Zh9AEDPFrVmDK/vKRmJuIdq47/HuuyvjN1/y9vhFrLjjt8kt9GLE
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
yaipiZg3D01gvNTTY8r2qTEFI/XUKbSaSjlxArft/GEwGP/88w9aq3Zzc8Nt
vtIBpIWgsxJCMTExSUpKqqio4HtwD4aTJ0/iLoAG+G4Q6t27N6+64HvelloW
UWB4Vww1Fy7kqy6mqai48fTVWKJvnDt3Du2V1NfXj46OJrgzo7r6+ezZaMNW
/cq+DJ8aUzwSduxAqSlV1cxbt3Dbzg076BUCLi4uuM1XOoAU3LdvH1p9mZqa
Jicns+5TXl6+Zs0atPucOXMGbyH87+tCHm/MBb7LIoC5c+fy5oJaFlFgoqKi
eGt8QsuWfAXGSZ6+uoD0pd7Tp0+jvYwGBgYw2+kZlZXh06ejCYxXpqaUwCCT
t3/+iVBN9YFIfHxw2/4Dx44dQ2vVV65cwW270kGn0/fs2YNWX2ZmZqmpqZx3
Ky0tXbVqFdrdwHcWpjJoICEhgdcqvssi3bt355sFallEgaHRaLwhDKZ06cJX
XazmnWcmcYKurq7uxIkTaK+hoaHh27dvIR9Er6h4NmUKmsCIsbCQl7MJCkB9
IBJjY4Rq8mrZsuj5c9zmN4A8F3f27FnctisdQFogL2CZm5vzdaBaUlLy559/
ot3T2dmZ/EJg4+npyWsS32WRgQMH8l65fv16jMZTkMD+/fu5Kn3GwIF81cUc
nl76jY0NOUai7c1mAeTTu3fvRHocvazs6YQJaAIjdvlymdrUrdjUByJB2i1T
H4hExFYhDZDPPYHXAbftSgf4Ftu1axdafVlYWGQIjitdXFyM5uEEcOnSJTIL
gRPehfXZs2fzXRYZNWoUr+XUsojCExISwlXpc37/na+6AOnCj100GIJJsFCc
vdmLFy9OSEhAeCittBQtvEW96Fq5khIYpEGvqHg6bhxCNQV0716ZlobRcmRH
cLLsuVFRqa2t3bFjB1p9WVpaZmZmEt+/qKiIr9NLGK5evUpOIXDBu2mE77II
gB34lRNqWUThqaio0NXV5az0BTNmCFIXG7lmmFu0kPZCgDh7s42NjT98+ID8
aFpx8ZMxY9AExts//5RgIVAQU1tQEDJ0KEI1BQ8ahGVn8v8ExykWyu7du2U5
6oRCUlNTs23bNrT6WrZsGWSw2sLCwpUrV6I95Rbpe5VpNJqOjg6XGXyXRQBz
5szhupJaFlESuDS5pqbmODU1vupiEU//XPHpk/QME2dvtomJifixnGoLC5+M
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
WuH+/fuEFyZp40aIpvEeMaIsJITwwvAJ9fX1e/fuhWujTZs2EfLor2uRMjIy
vLy8rl+/DrRnxYoVcMWD4/MozTlzFH/9VWroUEKkgpFE/jeKzV5+sKk2c+zu
/+vNLobt0GU88bga4nY+4ElPSfaSGYt8EotQuNp+RWFlDYslyUhOoCQFFdVp
aWk3b97k9HmjlpaWkpLS3LlzhYWFJ02axI1mjBs3jh80Awdc3A4cOODg4BAS
ElJYWMg6iGhDcTFcHKfPb/lPnybtrCMH0DvA1TmobV6Up41Gg1vr1mfUqOpX
r3hRJGqpq6vbvXs3XBtt3ry5oqKC+zKAH1RBQQEw+Xv37llaWm7cuBGuPFyi
ra6uKibG/ihNuPT1Snn2nyTsfnqLUUu9rmKWVMxW+LLtj+16ykH89FbuWxPB
b3hlvKXcK/AESsIoVVtbG9CMGzdurFmzBubXqq2trKwsKSkpIiICZGPMmDF9
XTNwli1bBu71gH0FBAS8ffuW1iWyd0NhYdCkSXCCkXvhArmnHg9xdHSEq2Eb
GxvelYrW2BitpATRNP6//PKpf4W2rq2t3bVrF1wbbd26tbKyEm6/5eXlCQkJ
T58+vXTpkqmpKfeBJrhBS0UFbpQmm0kOw/QxbBOGWWCYLYaZCo7j6FXFleCO
t3K92sVfsQHsVD4Lu3gYHwzXoAg+52RALOVqwYjE1Qlwc5GamgqtGThAD1RU
VIBszJw5c/LkyZzKBkMzdHR0CLy2cA+4NpqZmV27ds3HxycnJwePWF6flxc4
cSKcYLy9coXcU48nPHnyBK4+L1y4wOtAEy3V1XCTiIMmT2581/1crT5HTU0N
XOwRwLZt29ifeNXY2JiVleXn52dvb3/w4MHVq1fD7ZRAdHV1NeTluR+l2TVJ
YZgGhq3FsL0YdgHD7mKYx39PIfdB2FhOgnZ+bbYo/X1BXVPjzic3WG+paL33
uNeDXpPk+Z3dfn3a8Y00OloCqX/SSqPvhFqWnagE9g7KwLqQQDNSUlKuX7/O
fSwaIAnz58+XkpISFRWdMmXK2LFj2dcMYWFheXl5ftMMHH19fXDRvnr1qqeD
g88vv8AJRt61a+ScdTzCzc0NrvZOnjxJzup1TaWlwdOmQTRNmKhoM+w9O/9Q
XV29fft2uDYyNTVlEUAGj6cdGRn58OHDU6dOmZiYcBNPm1gIH6UJkhKGLcOw
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
9fX14Zanp4rLy5YRaxcgFdjb4xVOq6+PVVMjJE9gpySerQgEAoHoM7xguQh7
xOzZ+deu0VtaGNvTm5rwv7B4dlEVH49vU+To2O0G6Tt34ht8jrnR2whGUEIC
j5dOp9NotNbW1paWlqampsbGxoaGhrq6uk+fPtW0U1VVVVlZWVFRUVZW9vHj
x9LS0pKSkvfv37979664uLioqKiwsDA/Pz8vLy+3nZycnNevX2dlZWVmZmZk
ZKSlpaWmpqakpCQnJycmJr569SohISE+Pj4uLi62nejo6KioqIiIiPDw8LCw
sJCQkODg4KCgoMDAQH9/fz8/Px8fnwg3N8LtInLevPq8PLwSyoKCCMmTEXAV
gUAgEAhmcs+f77UTeamvz4gpzYCFXeScPIlvQ2tsjNfT67zBrFmM3MpDQ3vd
OyghqTXCH7C2Prj0cvFixoJir0+c4DI3Yq0PgUAgEP2Jz8P82OlNxMXzrl5l
/iILu4iUkqrLzcU3aygqSt64kfFfMcrKjPhObXR6T69OmBMoIdmVwgewY30Q
KevwYTx/ektL0po13GQ1MK0PgUAgEGySsGQJux3Kl3Ur/q+3UZ1xurrMEbQa
CgvLw8Nr09JojY3/5nDlSq97BGUjtS74BnatjynF6+kVOTr2mprLy/FdNH38
GKuqCm0XA9P6EAgEAsEmpZwsoFl8/z7+rV5npL5asaLr+xSc1tpacBPNzu5A
2UisCf6CfevDU+rWrZzuAnr+yIC1PgQCgUCwSRuNxn7Qzsh58+revKHV1785
e5ad7TP37Stxd69JSWmuqGgoKKiMick5dYrNCOSgVIy4WwMQjqyPZLsYyNaH
QCAQCDb54OMD18vwNH3w9aW6YqiEI+sDKX7hwgJ7e44S3NCLAW59CAQCgWCf
FBMTynWCOYHyUF0l1IOsD4FAIBB9mvr8/EhCl7fgJoGSgPJQXSV8AbI+BAKB
QPRpStzdKe+88ARKQnVl8AvI+hAIBALR18k+epTyLgyUgepq4C+Q9SEQCASi
T0NvaUn94w8K+y+wd+bA4wgcZH0IBAKB6NPQ6us/L29KRf8F9gv2TnUF8CPI
+hAIBALR1wFdPPl9GdgjUgsWIOtDIBAIRF8H3KiS+TQe7AvdGvcKsj4EAoFA
9ANK3N15PWEB5I/GCrIPsj4EAoFA9APq8/N5F3IB5IxmOEKArA+BQCAQ/YAP
vr4cRaXuNYHcUMhHbkDWh0AgEIh+QBuNVurlxenCnV0TyAHkgxaqIARkfQgE
AoHoH3zKzMw9f/6FpiZH3RbYHnwLfJfq4vc3kPUhEAgEoj/RUFxc4ur65ty5
1C1bwD1vtLx8xOzZoJ8Cf4K/g0/A5+B/wTZgS6oL2/9B1odAIBCI/kpbayvV
RRjoIOtDIBAIBAJBAsj6EAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoHA+X/IhXpP
   "], {{0, 0}, {257.03999999999996`, 256.68}}, {
   0, 255},
   ColorFunction->RGBColor],
  ImageSize->{257.03999999999996`, 256.68},
  PlotRange->{{0, 257.03999999999996`}, {0, 256.68}}]], "Output",
 CellChangeTimes->{{3.704294619270913*^9, 3.704294636449339*^9}, 
   3.704294684216563*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704293283730384*^9, 3.704293307886841*^9}}]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{Automatic, 58}, {Automatic, 24}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 161, 3, 32, "Input", "ExpressionUUID" -> \
"453041ff-baa7-493d-a60b-d1926dd99d1e"],
Cell[744, 27, 336, 6, 32, "Output", "ExpressionUUID" -> \
"60df26d1-0559-4f68-86c6-0d37cc902b03"]
}, Open  ]],
Cell[1095, 36, 268, 8, 32, "Input", "ExpressionUUID" -> \
"5eae0114-240e-44c7-baa4-090ab2db50e5"],
Cell[CellGroupData[{
Cell[1388, 48, 121, 1, 64, "Section", "ExpressionUUID" -> \
"f812bfa0-b568-4441-9f32-4b6d94b9220a"],
Cell[1512, 51, 104, 1, 30, "Text", "ExpressionUUID" -> \
"9265d7ed-9ddd-4a98-b541-bf9626091a8b"],
Cell[CellGroupData[{
Cell[1641, 56, 419, 8, 32, "Input", "ExpressionUUID" -> \
"17f98e8e-2de2-40e0-82a8-abe614fc0f16"],
Cell[2063, 66, 17640, 459, 32, "Output", "ExpressionUUID" -> \
"64c7d7cb-8c86-44fe-ad85-029ea87a96fd"]
}, Open  ]],
Cell[19718, 528, 3159, 71, 159, "Input", "ExpressionUUID" -> \
"65cdbdc6-7d32-4d8c-9ed0-841a0594f542"],
Cell[CellGroupData[{
Cell[22902, 603, 158, 3, 32, "Input", "ExpressionUUID" -> \
"ab737158-f015-41a5-af27-337318e84061"],
Cell[23063, 608, 9824, 260, 32, "Output", "ExpressionUUID" -> \
"79eaa0d8-a600-45d1-b37a-fcad1d675a8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32924, 873, 2560, 56, 180, "Input", "ExpressionUUID" -> \
"d1148d00-f6cb-4a0c-b3f6-da4eb844da56"],
Cell[35487, 931, 10980, 189, 447, "Output", "ExpressionUUID" -> \
"c86e8d56-b16f-4a85-a62a-ced5fd1521d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46504, 1125, 2423, 60, 243, "Input", "ExpressionUUID" -> \
"6f117d5f-aaa1-44b0-a163-c09cffc6e888"],
Cell[48930, 1187, 11743, 228, 430, "Output", "ExpressionUUID" -> \
"482065de-bbe5-4479-9788-72f2b3c709da"]
}, Open  ]],
Cell[60688, 1418, 628, 19, 32, InheritFromParent, "ExpressionUUID" -> \
"36a246c5-795f-45d8-a4b2-3f335df7d69f"],
Cell[61319, 1439, 843, 22, 32, "Input", "ExpressionUUID" -> \
"90be1f00-23d5-406f-b39b-4263965a81bc"],
Cell[62165, 1463, 949, 26, 75, "Input", "ExpressionUUID" -> \
"87915193-3009-4b99-ac08-5ed1273bbb33"],
Cell[CellGroupData[{
Cell[63139, 1493, 1592, 39, 96, "Input", "ExpressionUUID" -> \
"0ef26d49-e666-48d6-bbdf-d82cf32c3926"],
Cell[64734, 1534, 1089, 27, 144, "Output", "ExpressionUUID" -> \
"d1fc287d-6654-4fe1-bbca-6b16632ecb7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65860, 1566, 499, 12, 32, "Input", "ExpressionUUID" -> \
"903573d0-aa54-4632-9f1c-fa6736c2973d"],
Cell[66362, 1580, 3791, 101, 54, "Output", "ExpressionUUID" -> \
"fdb9cd07-ff72-411d-8a29-01ca30368363"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70190, 1686, 155, 3, 32, "Input", "ExpressionUUID" -> \
"acce07ab-8eca-44cc-b0d5-4fb9eac1985a"],
Cell[70348, 1691, 3570, 97, 32, "Output", "ExpressionUUID" -> \
"79753c38-0191-4710-a516-387c0ce409a5"]
}, Open  ]],
Cell[73933, 1791, 2560, 56, 159, "Input", "ExpressionUUID" -> \
"8b050005-adbc-4012-98f3-493b4bd660ab"],
Cell[76496, 1849, 138, 1, 30, "Text", "ExpressionUUID" -> \
"6ffa45a0-4d4f-47bd-8e79-5276659f8518"],
Cell[76637, 1852, 1734, 41, 159, "Input", "ExpressionUUID" -> \
"45268ca9-bb98-43f0-973a-7fecffc07ef6"],
Cell[CellGroupData[{
Cell[78396, 1897, 154, 3, 32, "Input", "ExpressionUUID" -> \
"0d4603f2-aac9-4472-b826-17b5c8cfedcf"],
Cell[78553, 1902, 3377, 58, 229, "Output", "ExpressionUUID" -> \
"ec1b1138-c3ad-4c43-8112-0f1650b21d3a"]
}, Open  ]],
Cell[81945, 1963, 10356, 241, 230, "Input", "ExpressionUUID" -> \
"4e46729a-0f3c-4885-8814-b9825252c76c"],
Cell[92304, 2206, 153, 3, 30, "Text", "ExpressionUUID" -> \
"79392725-1115-41bd-ac03-e652ea23e45a"],
Cell[92460, 2211, 761, 17, 54, "Input", "ExpressionUUID" -> \
"bb6d8cc5-4cb9-41a7-90cb-33e8a15465a1"],
Cell[CellGroupData[{
Cell[93246, 2232, 243, 5, 32, "Input", "ExpressionUUID" -> \
"80bad95e-e4e6-46da-88dc-ed469641d032"],
Cell[93492, 2239, 178, 3, 32, "Output", "ExpressionUUID" -> \
"639697e2-41a5-4e68-b3ce-d42bfb18192d"]
}, Open  ]],
Cell[93685, 2245, 240, 4, 30, "Text", "ExpressionUUID" -> \
"724c4586-833a-41a8-91f4-1d58204f362e"],
Cell[93928, 2251, 301, 6, 32, "Input", "ExpressionUUID" -> \
"62ad8d31-cf29-4299-bb05-f898ecae1a10"],
Cell[94232, 2259, 161, 3, 30, "Text", "ExpressionUUID" -> \
"8ea83adc-0117-47ce-860f-3be3120c0393"],
Cell[CellGroupData[{
Cell[94418, 2266, 180, 4, 32, "Input", "ExpressionUUID" -> \
"9fa337d7-8270-413d-b740-198042635a64"],
Cell[CellGroupData[{
Cell[94623, 2274, 259, 4, 24, "Print", "ExpressionUUID" -> \
"71dba5b7-1d84-4254-8fcd-204b97ddbdf3"],
Cell[94885, 2280, 269, 4, 24, "Print", "ExpressionUUID" -> \
"4d96204b-6b0d-4d72-8032-8dd4f7a494e2"]
}, Open  ]]
}, Open  ]],
Cell[95181, 2288, 63, 1, 32, "Input", "ExpressionUUID" -> \
"cdd6ff80-8ff6-4dea-8199-96bbf837a1ea"],
Cell[95247, 2291, 268, 6, 30, "Text", "ExpressionUUID" -> \
"a7a3cc05-c8fb-4ac5-a805-ff224a167cfb"],
Cell[CellGroupData[{
Cell[95540, 2301, 228, 4, 32, "Input", "ExpressionUUID" -> \
"37a6ab02-04d2-42bb-b62a-d2dd6e7556df"],
Cell[95771, 2307, 148, 3, 32, "Output", "ExpressionUUID" -> \
"93a46d96-12ba-41f0-97c7-aa7a2f8e7cde"]
}, Open  ]],
Cell[95934, 2313, 165, 2, 30, "Text", "ExpressionUUID" -> \
"62536a6d-3ac9-4b7a-94f7-d9c4c552ce7e"],
Cell[96102, 2317, 287, 6, 32, "Input", "ExpressionUUID" -> \
"24d7f658-92f0-4056-97fc-0b9f2f6aa536"],
Cell[96392, 2325, 4133, 112, 348, "Input", "ExpressionUUID" -> \
"5dfdc167-c716-4fac-a05e-630b044e3da4"],
Cell[100528, 2439, 868, 21, 96, "Input", "ExpressionUUID" -> \
"26618457-ef24-417a-88ad-36151f5c4bd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101433, 2465, 125, 1, 64, "Section", "ExpressionUUID" -> \
"1d85ba24-2e6d-4688-872c-d9ab7c7d97f1"],
Cell[101561, 2468, 255, 5, 49, "Text", "ExpressionUUID" -> \
"3b96b78b-c340-40cc-b1e0-993a6861fb94"],
Cell[101819, 2475, 1549, 36, 117, "Input", "ExpressionUUID" -> \
"e44641f7-15bb-446f-82d6-0812313faa84"],
Cell[103371, 2513, 163, 3, 30, "Text", "ExpressionUUID" -> \
"b0a8fb15-2346-49fa-aa7d-d2e975e433f5"],
Cell[103537, 2518, 1330, 27, 75, "Input", "ExpressionUUID" -> \
"aa934d86-1937-45cb-bd67-6e8c203a0ea6"],
Cell[104870, 2547, 440, 11, 32, "Input", "ExpressionUUID" -> \
"fd964a91-3fbb-42cb-aa91-1c46bc27ff44"],
Cell[105313, 2560, 3436, 105, 348, "Input", "ExpressionUUID" -> \
"6db8afbf-4ecf-4541-b04b-a22a9a59d0d7"],
Cell[CellGroupData[{
Cell[108774, 2669, 1461, 27, 75, "Input", "ExpressionUUID" -> \
"75cda4e5-5218-4d75-916b-ea999c46f920"],
Cell[110238, 2698, 6743, 109, 409, "Output", "ExpressionUUID" -> \
"952880d3-1ebd-4242-98e4-9e94a1cb65fd"]
}, Open  ]],
Cell[116996, 2810, 773, 19, 75, "Input", "ExpressionUUID" -> \
"00c5f095-0264-42b9-ab9c-4e5c9359d33c"],
Cell[CellGroupData[{
Cell[117794, 2833, 241, 5, 32, "Input", "ExpressionUUID" -> \
"43d47ebd-58c9-4b7b-a529-373b40abea10"],
Cell[118038, 2840, 4398, 142, 180, "Output", "ExpressionUUID" -> \
"fd639d32-2fb4-4548-9e4b-019e2a767789"]
}, Open  ]],
Cell[122451, 2985, 237, 5, 30, "Text", "ExpressionUUID" -> \
"010dc7f0-54fa-467e-bfc7-53e8d15cdb95"],
Cell[CellGroupData[{
Cell[122713, 2994, 182, 4, 32, "Input", "ExpressionUUID" -> \
"1019af94-129e-4e74-b0e2-4888b6ef887c"],
Cell[122898, 3000, 144, 2, 32, "Output", "ExpressionUUID" -> \
"bcb81abe-da55-469c-97c8-d1204cd31322"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123091, 3008, 133, 1, 64, "Section", "ExpressionUUID" -> \
"bc36aadb-4a21-4e2b-9ca1-b52408d130f9"],
Cell[123227, 3011, 175, 4, 30, "Text", "ExpressionUUID" -> \
"431dc06f-431f-4323-a0ca-aa393cba01df"],
Cell[CellGroupData[{
Cell[123427, 3019, 973, 22, 96, "Input", "ExpressionUUID" -> \
"aed92234-fa55-45a0-8592-6f0a41bdce04"],
Cell[124403, 3043, 726, 13, 24, "Message", "ExpressionUUID" -> \
"2f01868a-3e17-46de-ac45-46cbdc6d9674"]
}, Open  ]],
Cell[125144, 3059, 10803, 263, 705, "Input", "ExpressionUUID" -> \
"7e6751f1-c5ce-4e64-9ef0-fdc3ee5ff627"],
Cell[135950, 3324, 295, 7, 30, "Text", "ExpressionUUID" -> \
"7d37d2a6-7a65-4ef4-9a62-5958b61db1af"],
Cell[136248, 3333, 10557, 256, 684, "Input", "ExpressionUUID" -> \
"fdb4d310-50a5-405e-a927-f6f78dbfe03a"],
Cell[146808, 3591, 716, 12, 68, "Text", "ExpressionUUID" -> \
"3bf97c34-a165-4e4a-92d5-f45746ae05ef"],
Cell[147527, 3605, 5535, 155, 432, "Input", "ExpressionUUID" -> \
"0bcd47f3-43a6-4a6c-bfb5-db52008ee9d4"],
Cell[CellGroupData[{
Cell[153087, 3764, 654, 15, 75, "Input", "ExpressionUUID" -> \
"a976dc6a-c75c-40d9-89e0-0a2478ee261a"],
Cell[153744, 3781, 21498, 420, 411, "Output", "ExpressionUUID" -> \
"52cd5a96-b6f6-40b6-8686-eed741b69732"]
}, Open  ]],
Cell[175257, 4204, 249, 6, 30, "Text", "ExpressionUUID" -> \
"cd53f7fd-8d36-4ea1-93d9-5a1915c7f7d8"],
Cell[CellGroupData[{
Cell[175531, 4214, 212, 5, 32, "Input", "ExpressionUUID" -> \
"4bebdfa7-99c5-4298-9e6d-1f29709431c5"],
Cell[175746, 4221, 19732, 370, 433, "Output", "ExpressionUUID" -> \
"a6ef0282-3bc9-4249-bd5b-1a4eb5afa696"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195515, 4596, 214, 5, 32, "Input", "ExpressionUUID" -> \
"579cad4a-7201-4720-bc53-f6db2f99fa50"],
Cell[195732, 4603, 19777, 371, 433, "Output", "ExpressionUUID" -> \
"6279fad3-f9c7-4531-8412-d934df0bd686"]
}, Open  ]],
Cell[215524, 4977, 152, 3, 32, InheritFromParent, "ExpressionUUID" -> \
"24f53b31-9f95-4603-9a09-b245ed1509ae"],
Cell[215679, 4982, 1258, 26, 96, "Input", "ExpressionUUID" -> \
"7e1e5246-b4b7-4e81-a86a-404974d46793"],
Cell[216940, 5010, 1445, 34, 138, "Input", "ExpressionUUID" -> \
"14c508f0-4312-47f9-949a-0c6594470dbb"],
Cell[218388, 5046, 69, 1, 32, "Input", "ExpressionUUID" -> \
"efda2538-b301-42ea-8b77-d777bcabaaed"],
Cell[218460, 5049, 129, 1, 30, "Text", "ExpressionUUID" -> \
"3d21f462-2833-4fca-9f60-2b6584704680"],
Cell[CellGroupData[{
Cell[218614, 5054, 593, 14, 54, "Input", "ExpressionUUID" -> \
"f016c1af-3d57-4127-9c7b-0cdbadc4eb5c"],
Cell[219210, 5070, 3762, 64, 237, "Output", "ExpressionUUID" -> \
"9dd99970-afae-4eef-84e7-c2d5b9e77988"]
}, Open  ]],
Cell[222987, 5137, 222, 6, 32, "Input", "ExpressionUUID" -> \
"23f48eeb-c99f-4534-ab26-f1dd4bd2e3dc"],
Cell[223212, 5145, 2615, 71, 222, "Input", "ExpressionUUID" -> \
"779740d5-e58b-4af8-80c9-5bdad35a77c6"],
Cell[225830, 5218, 264, 7, 32, "Input", "ExpressionUUID" -> \
"23545278-cdee-401a-96d0-9d8a3a5a7447"],
Cell[226097, 5227, 2794, 74, 222, "Input", "ExpressionUUID" -> \
"faead372-5dd2-460f-98b9-2a83afb62d9d"],
Cell[CellGroupData[{
Cell[228916, 5305, 155, 3, 32, "Input", "ExpressionUUID" -> \
"19bfd9d0-c198-4022-be7b-977774cc4886"],
Cell[229074, 5310, 14045, 297, 409, "Output", "ExpressionUUID" -> \
"f2fdafaf-1a67-43a2-b862-641311246df9"]
}, Open  ]],
Cell[243134, 5610, 314, 7, 32, "Input", "ExpressionUUID" -> \
"14820a05-fc92-4232-af49-1e0f8c0e33ce"],
Cell[243451, 5619, 266, 7, 32, "Input", "ExpressionUUID" -> \
"ff8c5722-b915-46c0-9f67-f0bc569be991"],
Cell[243720, 5628, 2114, 57, 159, "Input", "ExpressionUUID" -> \
"fd82b4ee-c311-40e3-a025-724445f744ea"],
Cell[245837, 5687, 340, 7, 32, "Input", "ExpressionUUID" -> \
"7ede1304-f6c1-47b3-ae66-60fb92f39d2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246214, 5699, 232, 3, 64, "Section", "ExpressionUUID" -> \
"91826001-6eb5-42ce-8a38-5c900009717f"],
Cell[246449, 5704, 222, 5, 30, "Text", "ExpressionUUID" -> \
"e02533b7-7abf-4838-870e-4f6295a01e99"],
Cell[CellGroupData[{
Cell[246696, 5713, 1117, 24, 96, "Input", "ExpressionUUID" -> \
"75b22fb3-762e-4cac-abf3-792467ea9b7c"],
Cell[247816, 5739, 469, 10, 24, "Message", "ExpressionUUID" -> \
"cd490b49-45ef-4bb5-8cf7-b9b6203d3ef5"]
}, Open  ]],
Cell[248300, 5752, 12502, 305, 789, "Input", "ExpressionUUID" -> \
"9a535db8-ede1-469a-99e9-8cc08c6ec3b3"],
Cell[CellGroupData[{
Cell[260827, 6061, 265, 6, 32, "Input", "ExpressionUUID" -> \
"2a7f2843-12cb-4e0b-9843-8866ee4f7f1a"],
Cell[261095, 6069, 11633, 258, 419, "Output", "ExpressionUUID" -> \
"2ac5d268-00b2-44d0-87da-e454a409360b"]
}, Open  ]],
Cell[272743, 6330, 1455, 29, 96, "Input", "ExpressionUUID" -> \
"8737986b-1727-41a8-a8b0-ec26d7df3415"],
Cell[274201, 6361, 1739, 38, 138, "Input", "ExpressionUUID" -> \
"df4779b3-078e-42ac-8d56-addb47f7c394"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275977, 6404, 118, 1, 64, "Section", "ExpressionUUID" -> \
"bf499abc-a603-4587-b1aa-d72326f97522"],
Cell[276098, 6407, 293, 6, 32, "Input", "ExpressionUUID" -> \
"310e90fa-79f3-439d-b821-997d7d166560"],
Cell[276394, 6415, 10159, 237, 230, "Input", "ExpressionUUID" -> \
"4c9128c0-b8de-4e40-9ac7-dccd5b76e4d5"],
Cell[286556, 6654, 10159, 237, 230, "Input", "ExpressionUUID" -> \
"b1cfff45-318f-4531-bb20-d2dc05e1272f"],
Cell[296718, 6893, 231, 5, 32, "Input", "ExpressionUUID" -> \
"c626b570-c154-4b64-b5ab-ef4f479b1a46"],
Cell[296952, 6900, 177, 4, 32, "Input", "ExpressionUUID" -> \
"bfe85523-6292-4323-884b-967ff5d57ad8"],
Cell[297132, 6906, 585, 14, 32, "Input", "ExpressionUUID" -> \
"8dc1f3b1-be56-4985-8fe3-079581a76026"],
Cell[297720, 6922, 130, 2, 32, "Input", "ExpressionUUID" -> \
"a5b1b75c-be5e-42e0-b5d7-47389318a58b"],
Cell[297853, 6926, 135, 2, 32, "Input", "ExpressionUUID" -> \
"7eb99fb4-402b-41a5-b3ad-0d7713eb4987"],
Cell[CellGroupData[{
Cell[298013, 6932, 572, 13, 32, "Input", "ExpressionUUID" -> \
"c8ca7297-ec3a-4139-b1ac-74bf47ee6c2e"],
Cell[298588, 6947, 687, 13, 54, "Output", "ExpressionUUID" -> \
"82171255-164f-4242-a4c6-885919ce153a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299312, 6965, 248, 7, 32, "Input", "ExpressionUUID" -> \
"5d05e7f6-c638-487f-952d-a0de34449066"],
Cell[299563, 6974, 2632, 68, 180, "Output", "ExpressionUUID" -> \
"a258c8ff-d926-43e3-a0b2-859c77a2b550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302232, 7047, 258, 7, 32, "Input", "ExpressionUUID" -> \
"fea87f3b-36e7-47fa-b49a-bc2b12250e27"],
Cell[302493, 7056, 366, 7, 32, "Output", "ExpressionUUID" -> \
"b3984cd7-2f6d-4846-8b2c-1f8c914b2a8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302896, 7068, 227, 6, 32, "Input", "ExpressionUUID" -> \
"45a7eca0-df3e-4114-aa69-59a4eaf9039d"],
Cell[303126, 7076, 2345, 57, 285, "Output", "ExpressionUUID" -> \
"6498fe55-a049-4eb9-8a34-b420b3f54953"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305508, 7138, 101, 1, 32, "Input", "ExpressionUUID" -> \
"9870b544-2bed-4535-a526-c96dca9196ae"],
Cell[305612, 7141, 3177, 85, 180, "Output", "ExpressionUUID" -> \
"2227e381-5cd8-4f63-93d2-25f30594eff3"]
}, Open  ]],
Cell[308804, 7229, 575, 16, 54, "Input", "ExpressionUUID" -> \
"ba3ed34a-d0d6-4b48-a819-0ba0023a00a2"],
Cell[309382, 7247, 358, 10, 32, "Input", "ExpressionUUID" -> \
"bb883442-3dc2-4fe5-957c-91036f67740a"],
Cell[CellGroupData[{
Cell[309765, 7261, 1040, 24, 75, "Input", "ExpressionUUID" -> \
"638dd21c-6ac2-46d6-9cad-bfddb842fcd9"],
Cell[310808, 7287, 43875, 738, 368, 4488, 91, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "7ce69611-ce3f-4ac5-9930-1dae785c87bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354720, 8030, 87, 1, 54, "Input", "ExpressionUUID" -> \
"12a87752-6708-45d9-820b-5f22f2c4b95d"],
Cell[354810, 8033, 85088, 1414, 409, 4480, 91, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "7174c503-700e-4f3e-b095-cf6addbc17e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439935, 9452, 585, 12, 54, "Input", "ExpressionUUID" -> \
"e8519d54-0bad-426f-8743-2939030d9c59"],
Cell[440523, 9466, 59751, 994, 401, 3617, 72, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "f13c0287-96d5-4d29-a602-51d9205a73d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500311, 10465, 205, 4, 32, "Input", "ExpressionUUID" -> \
"add20a79-8695-4216-8332-136620e989b2"],
Cell[500519, 10471, 4568, 105, 437, "Output", "ExpressionUUID" -> \
"794a17c7-a6cb-43e6-bef6-a5781c37c394"]
}, Open  ]],
Cell[505102, 10579, 92, 1, 32, "Input", "ExpressionUUID" -> \
"7b86f120-52b7-45df-910f-4198c227cf7e"],
Cell[505197, 10582, 32, 0, 32, "Input", "ExpressionUUID" -> \
"e6a77cc7-407b-4827-997a-33ff4b5ebd09"],
Cell[505232, 10584, 13698, 310, 359, "Input", "ExpressionUUID" -> \
"35e8985a-e1dc-4df5-88a5-426a26ae9471"],
Cell[518933, 10896, 118, 1, 30, "Text", "ExpressionUUID" -> \
"2efa5b29-ecc0-4e22-8175-957787536aee"],
Cell[CellGroupData[{
Cell[519076, 10901, 175, 4, 32, "Input", "ExpressionUUID" -> \
"894fe8c0-bc75-4b79-8f71-d2edeb33902c"],
Cell[519254, 10907, 145, 2, 32, "Output", "ExpressionUUID" -> \
"cd1e580b-cdf9-4082-9e4e-ad493c1f7b90"]
}, Open  ]],
Cell[519414, 10912, 141, 2, 32, "Input", "ExpressionUUID" -> \
"6ea54910-c0fa-4553-a539-6b8a6004fe8f"],
Cell[519558, 10916, 1389, 40, 96, "Input", "ExpressionUUID" -> \
"949f7e98-0f36-4ad4-bbd3-643902538875"],
Cell[CellGroupData[{
Cell[520972, 10960, 1461, 40, 96, "Input", "ExpressionUUID" -> \
"1882b8e7-0636-45ef-a41d-9079a6bf16fa"],
Cell[522436, 11002, 27082, 726, 96, "Output", "ExpressionUUID" -> \
"cc5ec0a4-faf9-47b4-b0d9-823ae1d4e271"]
}, Open  ]],
Cell[549533, 11731, 267, 7, 32, "Input", "ExpressionUUID" -> \
"e8c24eab-938e-4148-82c7-1165d5a6eac1"],
Cell[549803, 11740, 2839, 56, 138, "Input", "ExpressionUUID" -> \
"32bbfdb0-086b-4088-bf09-8a430aebb25e"],
Cell[552645, 11798, 95, 1, 32, "Input", "ExpressionUUID" -> \
"1e4d32a4-2e4a-464c-b703-f5f864b963fb"],
Cell[552743, 11801, 10352, 241, 230, "Input", "ExpressionUUID" -> \
"9a800f37-d460-49c5-9ff6-5d3cadf5bbee"],
Cell[CellGroupData[{
Cell[563120, 12046, 196, 4, 32, "Input", "ExpressionUUID" -> \
"7060dcab-ec74-42cb-8944-346936e4f225"],
Cell[563319, 12052, 120242, 1974, 272, "Output", "ExpressionUUID" -> \
"7c16a7ee-c2b1-4fc6-8434-441eac4dd92f"]
}, Open  ]],
Cell[683576, 14029, 92, 1, 32, "Input", "ExpressionUUID" -> \
"30473270-0295-4934-bccc-e3289d1906b2"]
}, Open  ]]
}
]
*)

